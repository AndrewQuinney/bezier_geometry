#include "PrecompiledEquations.hpp"

#include <array>

namespace bezier_geometry {
namespace {
////////////////////////////////////
void _distanceFromPointSquared_1(const RealNum &a, const RealNum &b,
                                 const RealNum &c, const RealNum &d,
                                 const RealNum &e, const RealNum &f,
                                 const RealNum &x, const RealNum &y,
                                 RealNum *et) {
  et[0] = -1.0 * c * x;
  et[1] = -1.0 * f * y;
  et[2] = et[0] + et[1];
  et[3] = 2.0 * et[2];
  et[4] = c * c;
  et[5] = f * f;
  et[6] = x * x;
  et[7] = y * y;
  et[8] = et[4] + et[5] + et[6] + et[7];
  et[9] = et[3] + et[8];

  ////////////////////////////////////
  et[10] = -1.0 * x;
  et[11] = et[10] + c;
  et[12] = et[11] * b;
  et[13] = -1.0 * y;
  et[14] = et[13] + f;
  et[15] = et[14] * e;
  et[16] = et[12] + et[15];
  et[17] = 2.0 * et[16];

  ////////////////////////////////////
  et[18] = et[11] * a;
  et[19] = et[14] * d;
  et[20] = et[18] + et[19];
  et[21] = 2.0 * et[20];
  et[22] = b * b;
  et[23] = e * e;
  et[24] = et[22] + et[23];
  et[25] = et[21] + et[24];

  ////////////////////////////////////
  et[26] = a * b;
  et[27] = d * e;
  et[28] = et[26] + et[27];
  et[29] = 2.0 * et[28];

  ////////////////////////////////////
  et[30] = a * a;
  et[31] = d * d;
  et[32] = et[30] + et[31];
}

// 9, 17, 25, 29, 32,

void _shiftRelationForSlope(const RealNum &a, const RealNum &b,
                            const RealNum &c, const RealNum &d,
                            const RealNum &e, const RealNum &f,
                            const RealNum &g, const RealNum &h,
                            const RealNum &i, const RealNum &j,
                            const RealNum &k, const RealNum &l,
                            const RealNum &s, RealNum *et) {
  ////////////////////////////////////
  et[0] = -1.0 * b;
  et[1] = et[0] * b * d;
  et[2] = -1.0 * i;
  et[3] = et[2] + c;
  et[4] = et[3] * s;
  et[5] = -1.0 * f;
  et[6] = et[5] + l;
  et[7] = et[4] + et[6];
  et[8] = 4.0 * et[7];
  et[9] = et[8] * a;
  et[10] = b * s;
  et[11] = -1.0 * et[10];
  et[12] = 2.0 * e;
  et[13] = et[11] + et[12];
  et[14] = et[13] * b;
  et[15] = et[9] + et[14];
  et[16] = et[15] * a;
  et[17] = et[1] + et[16];
  et[18] = et[17] * k;
  et[19] = et[18] * k;
  et[20] = h * s;
  et[21] = -2.0 * k;
  et[22] = et[20] + et[21];
  et[23] = et[22] * e;
  et[24] = et[23] * e;
  et[25] = et[24] * a;
  et[26] = -1.0 * c;
  et[27] = et[26] + i;
  et[28] = et[27] * s;
  et[29] = -1.0 * l;
  et[30] = et[29] + f;
  et[31] = et[28] + et[30];
  et[32] = 8.0 * et[31];
  et[33] = et[32] * a;
  et[34] = 2.0 * et[10] * b;
  et[35] = et[33] + et[34];
  et[36] = et[35] * k;
  et[37] = -2.0 * et[10];
  et[38] = et[37] + e;
  et[39] = et[38] * e;
  et[40] = et[7] * d;
  et[41] = 4.0 * et[40];
  et[42] = et[39] + et[41];
  et[43] = et[42] * h;
  et[44] = et[36] + et[43];
  et[45] = et[44] * d;
  et[46] = et[25] + et[45];
  et[47] = et[46] * h;
  et[48] = et[19] + et[47];
  ////////////////////////////////////
  et[49] = g * s;
  et[50] = -1.0 * j;
  et[51] = et[49] + et[50];
  et[52] = et[51] * k;
  et[53] = 4.0 * et[52];
  et[54] = et[53] * b;
  et[55] = et[54] * b;
  et[56] = et[7] * g;
  et[57] = 16.0 * et[56];
  et[58] = -1.0 * et[20];
  et[59] = et[58] + k;
  et[60] = et[59] * h;
  et[61] = 4.0 * et[60];
  et[62] = et[57] + et[61];
  et[63] = et[62] * d;
  et[64] = b * j;
  et[65] = 4.0 * et[64];
  et[66] = e * g;
  et[67] = -8.0 * et[66];
  et[68] = et[65] + et[67];
  et[69] = et[68] * s;
  et[70] = et[69] * b;
  et[71] = et[66] * e;
  et[72] = 4.0 * et[71];
  et[73] = et[70] + et[72];
  et[74] = et[63] + et[73];
  et[75] = et[74] * h;
  et[76] = et[55] + et[75];
  et[77] = et[76] * d;
  et[78] = 16.0 * et[31];
  et[79] = et[78] * d;
  et[80] = -4.0 * e;
  et[81] = et[80] * e;
  et[82] = et[79] + et[81];
  et[83] = et[82] * j;
  et[84] = 4.0 * et[71] * s;
  et[85] = et[83] + et[84];
  et[86] = et[85] * h;
  et[87] = et[31] * g;
  et[88] = et[87] * d;
  et[89] = et[7] * j;
  et[90] = et[89] * a;
  et[91] = et[88] + et[90];
  et[92] = 16.0 * et[91];
  et[93] = -1.0 * k;
  et[94] = et[20] + et[93];
  et[95] = et[94] * h;
  et[96] = et[95] * d;
  et[97] = et[64] * e;
  et[98] = et[96] + et[97];
  et[99] = 8.0 * et[98];
  et[100] = et[59] * k;
  et[101] = et[100] * a;
  et[102] = -1.0 * et[71];
  et[103] = -1.0 * et[64] * et[10];
  et[104] = et[102] + et[103];
  et[105] = et[101] + et[104];
  et[106] = 4.0 * et[105];
  et[107] = et[99] + et[106];
  et[108] = et[92] + et[107];
  et[109] = et[108] * k;
  et[110] = et[86] + et[109];
  et[111] = et[110] * a;
  et[112] = et[77] + et[111];
  ////////////////////////////////////
  et[113] = d * h;
  et[114] = 24.0 * et[113] * k;
  et[115] = et[93] * a * k;
  et[116] = et[71] + et[115];
  et[117] = 4.0 * et[116];
  et[118] = et[114] + et[117];
  et[119] = et[118] * s;
  et[120] = d * k;
  et[121] = -16.0 * et[120] * k;
  et[122] = et[119] + et[121];
  et[123] = et[122] * g;
  et[124] = et[113] * h;
  et[125] = et[93] * h;
  et[126] = et[3] * j;
  et[127] = et[125] + et[126];
  et[128] = et[127] * a;
  et[129] = et[124] + et[128];
  et[130] = 16.0 * et[129];
  et[131] = 32.0 * et[27];
  et[132] = et[131] * g;
  et[133] = et[132] * d;
  et[134] = -4.0 * et[64] * b;
  et[135] = et[133] + et[134];
  et[136] = et[130] + et[135];
  et[137] = et[136] * s;
  et[138] = 20.0 * k;
  et[139] = et[138] * k;
  et[140] = et[6] * j;
  et[141] = 16.0 * et[140];
  et[142] = et[139] + et[141];
  et[143] = et[142] * a;
  et[144] = -1.0 * et[66];
  et[145] = et[64] + et[144];
  et[146] = 8.0 * et[145];
  et[147] = et[146] * e;
  et[148] = 32.0 * et[30];
  et[149] = et[148] * g;
  et[150] = -24.0 * h * k;
  et[151] = et[149] + et[150];
  et[152] = et[151] * d;
  et[153] = et[147] + et[152];
  et[154] = et[143] + et[153];
  et[155] = et[137] + et[154];
  et[156] = et[155] * j;
  et[157] = et[123] + et[156];
  et[158] = et[157] * a;
  et[159] = -20.0 * et[20] * h;
  et[160] = h * k;
  et[161] = et[56] + et[160];
  et[162] = 16.0 * et[161];
  et[163] = et[159] + et[162];
  et[164] = et[163] * d;
  et[165] = et[146] * s;
  et[166] = et[165] * b;
  et[167] = et[166] + et[72];
  et[168] = et[164] + et[167];
  et[169] = et[168] * g;
  et[170] = et[0] * et[64];
  et[171] = et[124] + et[170];
  et[172] = et[171] * j;
  et[173] = 4.0 * et[172];
  et[174] = et[169] + et[173];
  et[175] = et[174] * d;
  et[176] = et[158] + et[175];
  ////////////////////////////////////
  et[177] = -32.0 * et[20] * g;
  et[178] = g * k;
  et[179] = h * j;
  et[180] = et[178] + et[179];
  et[181] = 16.0 * et[180];
  et[182] = et[177] + et[181];
  et[183] = et[182] * g;
  et[184] = et[183] * d;
  et[185] = et[184] * d;
  et[186] = 16.0 * g;
  et[187] = et[186] * et[120] * g * s;
  et[188] = et[93] * g;
  et[189] = -1.0 * et[179];
  et[190] = et[188] + et[189];
  et[191] = 16.0 * et[190];
  et[192] = et[191] * s;
  et[193] = 32.0 * j * k;
  et[194] = et[192] + et[193];
  et[195] = et[194] * a;
  et[196] = et[94] * g;
  et[197] = 48.0 * et[196];
  et[198] = -16.0 * et[179];
  et[199] = et[197] + et[198];
  et[200] = et[199] * d;
  et[201] = et[195] + et[200];
  et[202] = et[201] * j;
  et[203] = et[187] + et[202];
  et[204] = et[203] * a;
  et[205] = et[185] + et[204];
  ////////////////////////////////////
  et[206] = a * j;
  et[207] = 32.0 * et[206];
  et[208] = -16.0 * d * g;
  et[209] = et[207] + et[208];
  et[210] = et[209] * s;
  et[211] = 16.0 * d * j;
  et[212] = et[210] + et[211];
  et[213] = et[212] * g;
  et[214] = et[206] * j;
  et[215] = -32.0 * et[214];
  et[216] = et[213] + et[215];
  et[217] = et[216] * d;
  et[218] = et[206] * s;
  et[219] = -16.0 * et[218] * et[206];
  et[220] = et[217] + et[219];
  et[221] = et[220] * g;
  et[222] = 16.0 * et[214] * et[206];
  et[223] = et[221] + et[222];
}
// 0: et[48], 1: et[112], 2: et[176], 3: et[205], 4: et[223],

void _shiftSubValueNumerator(const RealNum &b, const RealNum &e,
                             const RealNum &g, const RealNum &h,
                             const RealNum &j, const RealNum &k, RealNum *et) {
  ////////////////////////////////////
  et[0] = -1.0 * e;
  et[1] = et[0] * h;
  et[2] = b * k;
  et[3] = et[1] + et[2];
  ////////////////////////////////////
  et[4] = et[0] * g;
  et[5] = b * j;
  et[6] = et[4] + et[5];
  et[7] = 2.0 * et[6];
}
// 0: et[3], 1: et[7],

void _shiftSubValueDenominator(const RealNum &a, const RealNum &d,
                               const RealNum &g, const RealNum &h,
                               const RealNum &j, const RealNum &k,
                               RealNum *et) {
  ////////////////////////////////////
  et[0] = -1.0 * a;
  et[1] = et[0] * k;
  et[2] = d * h;
  et[3] = et[1] + et[2];
  et[4] = 2.0 * et[3];
  ////////////////////////////////////
  et[5] = et[0] * j;
  et[6] = d * g;
  et[7] = et[5] + et[6];
  et[8] = 4.0 * et[7];
}
// 0: et[4], 1: et[8],

void _curveSlopeMatchesFulcrumSlope(const RealNum &a, const RealNum &b,
                                    const RealNum &c, const RealNum &d,
                                    const RealNum &e, const RealNum &f,
                                    const RealNum &x, const RealNum &y,
                                    RealNum *et) {
  ////////////////////////////////////
  et[0] = -1.0 * f;
  et[1] = et[0] + y;
  et[2] = et[1] * b;
  et[3] = -1.0 * x;
  et[4] = et[3] + c;
  et[5] = et[4] * e;
  et[6] = et[2] + et[5];
  ////////////////////////////////////
  et[7] = et[1] * a;
  et[8] = et[4] * d;
  et[9] = et[7] + et[8];
  et[10] = 2.0 * et[9];
  ////////////////////////////////////
  et[11] = b * d;
  et[12] = -1.0 * a * e;
  et[13] = et[11] + et[12];
}
// 0: et[6], 1: et[10], 2: et[13],

void _pointRotateAgainstCircleYCoordinate(const RealNum &i, const RealNum &j,
                                          const RealNum &r, const RealNum &v,
                                          const RealNum &w, const RealNum &x,
                                          const RealNum &y, RealNum *et) {
  ////////////////////////////////////
  et[0] = -1.0 * y;
  et[1] = et[0] * y;
  et[2] = r * r;
  et[3] = -1.0 * v;
  et[4] = et[3] * v;
  et[5] = x * x;
  et[6] = et[4] + et[5];
  et[7] = et[1] + et[2] + et[6];
  et[8] = 4.0 * et[7];
  et[9] = 8.0 * j;
  et[10] = -2.0 * w;
  et[11] = et[9] + et[10];
  et[12] = et[11] * w;
  et[13] = j * j;
  et[14] = -8.0 * et[13];
  et[15] = et[12] + et[14];
  et[16] = et[8] + et[15];
  et[17] = et[16] * w;
  et[18] = -1.0 * r;
  et[19] = et[18] * r;
  et[20] = -1.0 * et[5];
  et[21] = v * v;
  et[22] = y * y;
  et[23] = et[21] + et[22];
  et[24] = et[20] + et[23];
  et[25] = et[19] + et[24];
  et[26] = et[25] * j;
  et[27] = 8.0 * et[26];
  et[28] = et[17] + et[27];
  et[29] = et[28] * w;
  et[30] = et[1] * et[22];
  et[31] = et[20] * et[5];
  et[32] = et[18] * et[2] * r;
  et[33] = et[3] * et[21] * v;
  et[34] = et[30] + et[31] + et[32] + et[33];
  et[35] = 2.0 * et[34];
  et[36] = et[5] + et[23];
  et[37] = et[36] * r;
  et[38] = et[37] * r;
  et[39] = et[1] * et[5];
  et[40] = et[1] + et[5];
  et[41] = et[40] * v;
  et[42] = et[41] * v;
  et[43] = et[39] + et[42];
  et[44] = et[38] + et[43];
  et[45] = 4.0 * et[44];
  et[46] = et[35] + et[45];
  et[47] = et[29] + et[46];
  et[48] = et[47] * x;
  et[49] = w * w;
  et[50] = et[19] + et[49];
  et[51] = et[50] + et[24];
  et[52] = et[51] * x;
  et[53] = et[3] * j * w;
  et[54] = et[3] + i;
  et[55] = et[54] * v;
  et[56] = -1.0 * w;
  et[57] = et[56] * w;
  et[58] = et[57] + et[2];
  et[59] = et[1] + et[58];
  et[60] = et[55] + et[59];
  et[61] = et[60] * i;
  et[62] = et[53] + et[61];
  et[63] = et[52] + et[62];
  et[64] = 8.0 * et[63];
  et[65] = et[22] + et[50];
  et[66] = 4.0 * et[65];
  et[67] = 2.0 * et[21];
  et[68] = -12.0 * et[5];
  et[69] = et[67] + et[68];
  et[70] = et[66] + et[69];
  et[71] = et[70] * v;
  et[72] = 24.0 * et[5] * i;
  et[73] = -1.0 * x;
  et[74] = et[73] + i;
  et[75] = et[74] * j;
  et[76] = et[75] * w;
  et[77] = i * i;
  et[78] = -1.0 * et[77] * x;
  et[79] = et[76] + et[78];
  et[80] = 16.0 * et[79];
  et[81] = et[72] + et[80];
  et[82] = et[71] + et[81];
  et[83] = et[64] + et[82];
  et[84] = et[83] * v;
  et[85] = -16.0 * i;
  et[86] = 24.0 * x;
  et[87] = et[85] + et[86];
  et[88] = et[87] * x;
  et[89] = et[1] + et[2];
  et[90] = 8.0 * et[89];
  et[91] = et[88] + et[90];
  et[92] = et[91] * j;
  et[93] = et[56] + j;
  et[94] = et[93] * j;
  et[95] = i * x;
  et[96] = et[94] + et[95];
  et[97] = 8.0 * et[96];
  et[98] = et[19] + et[22];
  et[99] = 4.0 * et[98];
  et[100] = 2.0 * w;
  et[101] = et[100] * w;
  et[102] = et[101] + et[68];
  et[103] = et[99] + et[102];
  et[104] = et[97] + et[103];
  et[105] = et[104] * w;
  et[106] = et[92] + et[105];
  et[107] = et[106] * w;
  et[108] = 12.0 * et[98];
  et[109] = 10.0 * x;
  et[110] = et[85] + et[109];
  et[111] = et[110] * x;
  et[112] = 8.0 * et[77];
  et[113] = et[111] + et[112];
  et[114] = et[108] + et[113];
  et[115] = et[114] * x;
  et[116] = et[89] * i;
  et[117] = 16.0 * et[116];
  et[118] = et[115] + et[117];
  et[119] = et[118] * x;
  et[120] = -8.0 * et[77];
  et[121] = 2.0 * et[2];
  et[122] = -4.0 * et[22];
  et[123] = et[120] + et[121] + et[122];
  et[124] = et[123] * r;
  et[125] = et[124] * r;
  et[126] = 2.0 * et[22];
  et[127] = et[112] + et[126];
  et[128] = et[127] * y;
  et[129] = et[128] * y;
  et[130] = et[125] + et[129];
  et[131] = et[119] + et[130];
  et[132] = et[107] + et[131];
  et[133] = et[84] + et[132];
  et[134] = et[133] * i;
  et[135] = et[48] + et[134];
  ////////////////////////////////////
  et[136] = -1.0 * i;
  et[137] = et[136] + x;
  et[138] = et[137] * v;
  et[139] = et[56] * j;
  et[140] = et[139] + et[95];
  et[141] = et[138] + et[140];
  et[142] = 16.0 * et[141];
  et[143] = -24.0 * et[5];
  et[144] = et[21] + et[50];
  et[145] = 8.0 * et[144];
  et[146] = et[143] + et[145];
  et[147] = et[142] + et[146];
  et[148] = et[147] * j;
  et[149] = et[0] + j;
  et[150] = et[149] * y;
  et[151] = et[4] + et[58];
  et[152] = et[150] + et[151];
  et[153] = 8.0 * et[152];
  et[154] = 32.0 * i;
  et[155] = -24.0 * x;
  et[156] = et[154] + et[155];
  et[157] = et[156] * x;
  et[158] = et[74] * v;
  et[159] = j * w;
  et[160] = -1.0 * et[77];
  et[161] = et[159] + et[160];
  et[162] = et[158] + et[161];
  et[163] = 16.0 * et[162];
  et[164] = et[157] + et[163];
  et[165] = et[153] + et[164];
  et[166] = et[165] * y;
  et[167] = et[148] + et[166];
  et[168] = et[167] * i;
  et[169] = et[149] * j;
  et[170] = et[169] * w;
  et[171] = 16.0 * et[170];
  et[172] = -1.0 * j;
  et[173] = et[172] + y;
  et[174] = et[173] * y;
  et[175] = et[21] + et[5] + et[50];
  et[176] = et[174] + et[175];
  et[177] = et[176] * y;
  et[178] = et[6] + et[58];
  et[179] = et[178] * j;
  et[180] = et[177] + et[179];
  et[181] = 8.0 * et[180];
  et[182] = et[171] + et[181];
  et[183] = et[182] * x;
  et[184] = et[168] + et[183];
  ////////////////////////////////////
  et[185] = -1.0 * et[13];
  et[186] = et[1] + et[185] + et[20];
  et[187] = et[186] * x;
  et[188] = et[77] + et[13] + et[22];
  et[189] = et[188] * i;
  et[190] = et[187] + et[189];
  et[191] = 8.0 * et[190];
  et[192] = et[137] * i;
  et[193] = 24.0 * et[192];
  et[194] = j * y;
  et[195] = 16.0 * et[194];
  et[196] = et[193] + et[195];
  et[197] = et[196] * x;
  et[198] = -16.0 * et[194] * i;
  et[199] = et[197] + et[198];
  et[200] = et[191] + et[199];
}
// 0: et[135], 1: et[184], 2: et[200],

void _pointRotateAgainstCircleXCoordinateNumerator(const RealNum &i,
                                                   const RealNum &v,
                                                   RealNum *et) {
  ////////////////////////////////////
  et[201] = i * v;
  et[202] = et[201] + et[159];
  et[203] = 2.0 * et[202];
  et[204] = et[4] + et[57] + et[20] + et[1] + et[2];
  et[205] = et[203] + et[204];
  ////////////////////////////////////
  et[206] = 2.0 * et[173];
}
// 0: et[205], 1: et[206],

void _pointShiftAgainstCircleYCoordinate(const RealNum &r, const RealNum &s,
                                         const RealNum &v, const RealNum &w,
                                         const RealNum &x, const RealNum &y,
                                         RealNum *et) {
  ////////////////////////////////////
  et[0] = -1.0 * w;
  et[1] = et[0] * w;
  et[2] = -1.0 * v;
  et[3] = 2.0 * x;
  et[4] = et[2] + et[3];
  et[5] = et[4] * v;
  et[6] = -1.0 * x;
  et[7] = et[6] * x;
  et[8] = -1.0 * y;
  et[9] = et[8] * y;
  et[10] = r * r;
  et[11] = et[7] + et[9] + et[10];
  et[12] = et[5] + et[11];
  et[13] = et[12] * s;
  et[14] = et[6] + v;
  et[15] = et[14] * w;
  et[16] = 2.0 * et[15];
  et[17] = et[13] + et[16];
  et[18] = et[17] * s;
  et[19] = et[1] + et[18];
  ////////////////////////////////////
  et[20] = s * y;
  et[21] = et[20] + et[2] + x;
  et[22] = et[21] * s;
  et[23] = et[22] + w;
  et[24] = 2.0 * et[23];
  ////////////////////////////////////
  et[25] = -1.0 * s;
  et[26] = et[25] * s;
  et[27] = et[26] + -1.0;
}
// 0: et[19], 1: et[24], 2: et[27],

void _shiftAgainstCircleXCoordinateNumerator(const RealNum &a, const RealNum &b,
                                             const RealNum &c, const RealNum &d,
                                             const RealNum &e, const RealNum &f,
                                             const RealNum &s, const RealNum &x,
                                             const RealNum &y, RealNum *et) {
  ////////////////////////////////////
  et[0] = -1.0 * x;
  et[1] = et[0] * b;
  et[2] = -1.0 * y;
  et[3] = -1.0 * s;
  et[4] = et[3] * c;
  et[5] = et[4] + f;
  et[6] = et[2] + et[5];
  et[7] = et[6] * e;
  et[8] = et[1] + et[7];
  ////////////////////////////////////
  et[9] = et[3] * b;
  et[10] = et[9] + e;
  et[11] = et[10] * e;
  et[12] = et[0] * a;
  et[13] = et[6] * d;
  et[14] = et[12] + et[13];
  et[15] = 2.0 * et[14];
  et[16] = et[11] + et[15];
  ////////////////////////////////////
  et[17] = -1.0 * a * e;
  et[18] = -2.0 * b * d;
  et[19] = et[17] + et[18];
  et[20] = et[19] * s;
  et[21] = 3.0 * d * e;
  et[22] = et[20] + et[21];
  ////////////////////////////////////
  et[23] = et[3] * a;
  et[24] = et[23] + d;
  et[25] = et[24] * d;
  et[26] = 2.0 * et[25];
}
// 0: et[8], 1: et[16], 2: et[22], 3: et[26],

void _shiftAgainstCircleYCoordinateNumerator(const RealNum &a, const RealNum &b,
                                             const RealNum &c, const RealNum &d,
                                             const RealNum &e, const RealNum &f,
                                             const RealNum &s, RealNum *et) {
  ////////////////////////////////////
  et[27] = et[2] * s;
  et[28] = et[27] * e;
  et[29] = et[0] + c;
  et[30] = et[29] * s;
  et[31] = -1.0 * f;
  et[32] = et[30] + et[31];
  et[33] = et[32] * b;
  et[34] = et[28] + et[33];
  ////////////////////////////////////
  et[35] = b * s;
  et[36] = -1.0 * e;
  et[37] = et[35] + et[36];
  et[38] = et[37] * b;
  et[39] = et[27] * d;
  et[40] = et[32] * a;
  et[41] = et[39] + et[40];
  et[42] = 2.0 * et[41];
  et[43] = et[38] + et[42];
  ////////////////////////////////////
  et[44] = 3.0 * b * s;
  et[45] = -2.0 * e;
  et[46] = et[44] + et[45];
  et[47] = et[46] * a;
  et[48] = -1.0 * b * d;
  et[49] = et[47] + et[48];
  ////////////////////////////////////
  et[50] = a * s;
  et[51] = -1.0 * d;
  et[52] = et[50] + et[51];
  et[53] = 2.0 * et[52];
  et[54] = et[53] * a;
}
// 0: et[34], 1: et[43], 2: et[49], 3: et[54],

void _shiftAgainstCircleCoordinateDenominator(const RealNum &a,
                                              const RealNum &b,
                                              const RealNum &d,
                                              const RealNum &e, RealNum *et) {
  ////////////////////////////////////
  et[55] = et[3] * e;
  et[56] = -1.0 * b;
  et[57] = et[55] + et[56];
  ////////////////////////////////////
  et[58] = et[3] * d;
  et[59] = -1.0 * a;
  et[60] = et[58] + et[59];
  et[61] = 2.0 * et[60];
}
// 0: et[57], 1: et[61],

void _shiftAgainstCircle(const RealNum &a, const RealNum &b, const RealNum &c,
                         const RealNum &d, const RealNum &e, const RealNum &f,
                         const RealNum &r, const RealNum &s, const RealNum &x,
                         const RealNum &y, RealNum *et) {
  ////////////////////////////////////
  et[62] = -1.0 * c;
  et[63] = et[62] * c;
  et[64] = et[0] * x;
  et[65] = et[63] + et[64];
  et[66] = et[65] * s;
  et[67] = s * x;
  et[68] = et[2] + f;
  et[69] = et[67] + et[68];
  et[70] = et[69] * c;
  et[71] = et[31] + y;
  et[72] = et[71] * x;
  et[73] = et[70] + et[72];
  et[74] = 2.0 * et[73];
  et[75] = et[66] + et[74];
  et[76] = et[75] * b;
  et[77] = et[76] * b;
  et[78] = et[77] * b;
  et[79] = r * r;
  et[80] = et[79] + et[65];
  et[81] = et[80] * s;
  et[82] = et[81] + et[74];
  et[83] = et[82] * s;
  et[84] = et[2] * y;
  et[85] = 2.0 * y;
  et[86] = et[31] + et[85];
  et[87] = et[86] * f;
  et[88] = et[84] + et[87];
  et[89] = et[83] + et[88];
  et[90] = et[89] * e;
  et[91] = et[90] * e;
  et[92] = et[75] * s;
  et[93] = 3.0 * et[79];
  et[94] = et[84] + et[93];
  et[95] = et[87] + et[94];
  et[96] = et[92] + et[95];
  et[97] = et[96] * b;
  et[98] = et[93] + et[65];
  et[99] = et[98] * s;
  et[100] = et[99] + et[74];
  et[101] = et[100] * e;
  et[102] = et[97] + et[101];
  et[103] = et[102] * b;
  et[104] = et[91] + et[103];
  et[105] = et[104] * e;
  et[106] = et[78] + et[105];
  et[107] = et[106] * s;
  et[108] = et[88] * e;
  et[109] = et[108] * e;
  et[110] = et[84] + et[79];
  et[111] = et[87] + et[110];
  et[112] = et[111] * b;
  et[113] = et[112] * b;
  et[114] = et[109] + et[113];
  et[115] = et[114] * b;
  et[116] = et[107] + et[115];
  ////////////////////////////////////
  et[117] = -2.0 * s;
  et[118] = et[117] * c;
  et[119] = 4.0 * et[69];
  et[120] = et[118] + et[119];
  et[121] = et[120] * d;
  et[122] = -6.0 * c;
  et[123] = 12.0 * x;
  et[124] = et[122] + et[123];
  et[125] = et[124] * a;
  et[126] = b * b;
  et[127] = -2.0 * et[126];
  et[128] = et[125] + et[127];
  et[129] = et[121] + et[128];
  et[130] = et[129] * c;
  et[131] = et[117] * x;
  et[132] = 4.0 * et[71];
  et[133] = et[131] + et[132];
  et[134] = et[133] * d;
  et[135] = 2.0 * et[126];
  et[136] = -6.0 * a * x;
  et[137] = et[135] + et[136];
  et[138] = et[134] + et[137];
  et[139] = et[138] * x;
  et[140] = et[130] + et[139];
  et[141] = et[140] * s;
  et[142] = et[29] * a;
  et[143] = 12.0 * et[142];
  et[144] = d * y;
  et[145] = 4.0 * et[144];
  et[146] = et[31] * d;
  et[147] = et[146] + et[126];
  et[148] = 2.0 * et[147];
  et[149] = et[145] + et[148];
  et[150] = et[143] + et[149];
  et[151] = et[150] * f;
  et[152] = et[62] + x;
  et[153] = et[152] * a;
  et[154] = 12.0 * et[153];
  et[155] = et[2] * d;
  et[156] = -1.0 * et[126];
  et[157] = et[155] + et[156];
  et[158] = 2.0 * et[157];
  et[159] = et[154] + et[158];
  et[160] = et[159] * y;
  et[161] = et[79] * d;
  et[162] = 6.0 * et[161];
  et[163] = et[160] + et[162];
  et[164] = et[151] + et[163];
  et[165] = et[141] + et[164];
  et[166] = et[165] * b;
  et[167] = et[166] * b;
  et[168] = 6.0 * et[80];
  et[169] = et[168] * s;
  et[170] = 12.0 * et[73];
  et[171] = et[169] + et[170];
  et[172] = et[171] * d;
  et[173] = 2.0 * et[65];
  et[174] = c * x;
  et[175] = 4.0 * et[174];
  et[176] = 6.0 * et[79];
  et[177] = et[175] + et[176];
  et[178] = et[173] + et[177];
  et[179] = et[178] * a;
  et[180] = et[29] * e;
  et[181] = et[180] * e;
  et[182] = 2.0 * et[181];
  et[183] = et[179] + et[182];
  et[184] = et[172] + et[183];
  et[185] = et[184] * e;
  et[186] = -4.0 * s;
  et[187] = et[186] * c;
  et[188] = 8.0 * et[69];
  et[189] = et[187] + et[188];
  et[190] = et[189] * a;
  et[191] = -4.0 * c;
  et[192] = 8.0 * x;
  et[193] = et[191] + et[192];
  et[194] = et[193] * d;
  et[195] = e * e;
  et[196] = -1.0 * et[195];
  et[197] = et[156] + et[196];
  et[198] = et[197] * s;
  et[199] = 2.0 * et[198];
  et[200] = et[194] + et[199];
  et[201] = et[190] + et[200];
  et[202] = et[201] * c;
  et[203] = et[69] * b;
  et[204] = et[203] * b;
  et[205] = et[69] * e;
  et[206] = et[205] * e;
  et[207] = et[204] + et[206];
  et[208] = 2.0 * et[207];
  et[209] = et[186] * x;
  et[210] = 8.0 * et[71];
  et[211] = et[209] + et[210];
  et[212] = et[211] * a;
  et[213] = -4.0 * d * x;
  et[214] = et[212] + et[213];
  et[215] = et[214] * x;
  et[216] = 12.0 * et[161];
  et[217] = et[215] + et[216];
  et[218] = et[208] + et[217];
  et[219] = et[202] + et[218];
  et[220] = et[219] * b;
  et[221] = et[185] + et[220];
  et[222] = et[221] * s;
  et[223] = 4.0 * et[152];
  et[224] = et[223] * a;
  et[225] = -6.0 * et[144];
  et[226] = 2.0 * et[195];
  et[227] = et[225] + et[226];
  et[228] = et[224] + et[227];
  et[229] = et[228] * y;
  et[230] = 4.0 * et[29];
  et[231] = et[230] * a;
  et[232] = -6.0 * f;
  et[233] = 12.0 * y;
  et[234] = et[232] + et[233];
  et[235] = et[234] * d;
  et[236] = -2.0 * et[195];
  et[237] = et[235] + et[236];
  et[238] = et[231] + et[237];
  et[239] = et[238] * f;
  et[240] = et[229] + et[239];
  et[241] = et[240] * e;
  et[242] = f * y;
  et[243] = et[242] * a;
  et[244] = et[68] * c;
  et[245] = et[72] + et[244];
  et[246] = et[245] * d;
  et[247] = et[243] + et[246];
  et[248] = 8.0 * et[247];
  et[249] = 12.0 * et[79];
  et[250] = et[31] * f;
  et[251] = et[250] + et[84];
  et[252] = 4.0 * et[251];
  et[253] = et[249] + et[252];
  et[254] = et[253] * a;
  et[255] = et[29] * b;
  et[256] = et[255] * b;
  et[257] = et[256] + et[181];
  et[258] = 2.0 * et[257];
  et[259] = et[254] + et[258];
  et[260] = et[248] + et[259];
  et[261] = et[260] * b;
  et[262] = et[241] + et[261];
  et[263] = et[222] + et[262];
  et[264] = et[263] * e;
  et[265] = et[167] + et[264];
  et[266] = et[265] * s;
  et[267] = 4.0 * et[242];
  et[268] = 2.0 * et[251];
  et[269] = et[267] + et[268];
  et[270] = et[269] * e;
  et[271] = et[270] * e;
  et[272] = et[271] * a;
  et[273] = 12.0 * et[242];
  et[274] = et[250] + et[79];
  et[275] = et[84] + et[274];
  et[276] = 6.0 * et[275];
  et[277] = et[273] + et[276];
  et[278] = et[277] * b;
  et[279] = et[278] * a;
  et[280] = 8.0 * et[242];
  et[281] = et[280] + et[252];
  et[282] = et[281] * d;
  et[283] = et[71] * b;
  et[284] = et[283] * b;
  et[285] = et[71] * e;
  et[286] = et[285] * e;
  et[287] = et[284] + et[286];
  et[288] = 2.0 * et[287];
  et[289] = et[282] + et[288];
  et[290] = et[289] * e;
  et[291] = et[279] + et[290];
  et[292] = et[291] * b;
  et[293] = et[272] + et[292];
  et[294] = et[266] + et[293];
  ////////////////////////////////////
  et[295] = 8.0 * et[65];
  et[296] = et[295] * s;
  et[297] = 16.0 * et[73];
  et[298] = et[296] + et[297];
  et[299] = et[298] * a;
  et[300] = 8.0 * et[174];
  et[301] = et[300] + et[249];
  et[302] = et[301] * d;
  et[303] = et[152] * s;
  et[304] = et[303] + et[68];
  et[305] = et[304] * b;
  et[306] = et[305] * b;
  et[307] = et[65] * d;
  et[308] = et[306] + et[307];
  et[309] = 4.0 * et[308];
  et[310] = et[302] + et[309];
  et[311] = et[299] + et[310];
  et[312] = et[311] * s;
  et[313] = et[251] * a;
  et[314] = et[313] + et[246];
  et[315] = 8.0 * et[314];
  et[316] = 16.0 * et[242];
  et[317] = 24.0 * et[79];
  et[318] = et[316] + et[317];
  et[319] = et[318] * a;
  et[320] = 2.0 * et[256];
  et[321] = et[319] + et[320];
  et[322] = et[315] + et[321];
  et[323] = et[312] + et[322];
  et[324] = et[323] * d;
  et[325] = et[3] * et[126];
  et[326] = et[325] * et[126];
  et[327] = 14.0 * et[304];
  et[328] = et[327] * b;
  et[329] = et[328] * b;
  et[330] = 12.0 * et[66];
  et[331] = 24.0 * et[73];
  et[332] = et[330] + et[331];
  et[333] = et[332] * a;
  et[334] = et[329] + et[333];
  et[335] = et[334] * a;
  et[336] = et[326] + et[335];
  et[337] = et[324] + et[336];
  et[338] = et[337] * b;
  et[339] = -10.0 * et[35];
  et[340] = 2.0 * e;
  et[341] = et[339] + et[340];
  et[342] = et[341] * b;
  et[343] = -8.0 * c;
  et[344] = 16.0 * x;
  et[345] = et[343] + et[344];
  et[346] = et[345] * d;
  et[347] = et[195] * s;
  et[348] = -2.0 * et[347];
  et[349] = et[346] + et[348];
  et[350] = et[342] + et[349];
  et[351] = et[190] + et[350];
  et[352] = et[351] * c;
  et[353] = 10.0 * et[35];
  et[354] = et[353] + et[45];
  et[355] = et[354] * b;
  et[356] = -8.0 * d;
  et[357] = et[356] * x;
  et[358] = 2.0 * et[347];
  et[359] = et[357] + et[358];
  et[360] = et[355] + et[359];
  et[361] = et[212] + et[360];
  et[362] = et[361] * x;
  et[363] = 10.0 * et[68];
  et[364] = et[363] * b;
  et[365] = et[364] * b;
  et[366] = et[68] * e;
  et[367] = et[366] * e;
  et[368] = 2.0 * et[367];
  et[369] = 24.0 * et[161];
  et[370] = et[368] + et[369];
  et[371] = et[365] + et[370];
  et[372] = et[362] + et[371];
  et[373] = et[352] + et[372];
  et[374] = et[373] * a;
  et[375] = et[3] * et[195];
  et[376] = et[10] * b;
  et[377] = et[375] + et[376];
  et[378] = et[377] * b;
  et[379] = et[195] * e;
  et[380] = 2.0 * et[379];
  et[381] = et[378] + et[380];
  et[382] = et[381] * b;
  et[383] = 12.0 * et[81];
  et[384] = et[383] + et[331];
  et[385] = et[384] * d;
  et[386] = et[304] * e;
  et[387] = 12.0 * et[386];
  et[388] = et[152] * b;
  et[389] = 2.0 * et[388];
  et[390] = et[387] + et[389];
  et[391] = et[390] * b;
  et[392] = 14.0 * et[181];
  et[393] = et[391] + et[392];
  et[394] = et[385] + et[393];
  et[395] = et[394] * d;
  et[396] = et[382] + et[395];
  et[397] = et[374] + et[396];
  et[398] = et[397] * s;
  et[399] = -4.0 * f;
  et[400] = 8.0 * y;
  et[401] = et[399] + et[400];
  et[402] = et[401] * a;
  et[403] = 16.0 * et[29];
  et[404] = et[403] * d;
  et[405] = b * e;
  et[406] = -2.0 * et[405];
  et[407] = et[404] + et[406];
  et[408] = et[402] + et[407];
  et[409] = et[408] * f;
  et[410] = 16.0 * et[152];
  et[411] = et[410] * d;
  et[412] = 2.0 * et[405];
  et[413] = -4.0 * a * y;
  et[414] = et[412] + et[413];
  et[415] = et[411] + et[414];
  et[416] = et[415] * y;
  et[417] = 4.0 * et[181];
  et[418] = et[79] * a;
  et[419] = et[256] + et[418];
  et[420] = 12.0 * et[419];
  et[421] = et[417] + et[420];
  et[422] = et[416] + et[421];
  et[423] = et[409] + et[422];
  et[424] = et[423] * a;
  et[425] = 10.0 * et[29];
  et[426] = et[425] * e;
  et[427] = et[68] * b;
  et[428] = 2.0 * et[427];
  et[429] = et[426] + et[428];
  et[430] = et[429] * b;
  et[431] = 24.0 * et[242];
  et[432] = 12.0 * et[251];
  et[433] = et[431] + et[432];
  et[434] = et[433] * d;
  et[435] = 14.0 * et[286];
  et[436] = et[434] + et[435];
  et[437] = et[430] + et[436];
  et[438] = et[437] * d;
  et[439] = et[195] + et[135];
  et[440] = et[439] * b;
  et[441] = et[440] * b;
  et[442] = et[195] * et[195];
  et[443] = -1.0 * et[442];
  et[444] = et[441] + et[443];
  et[445] = et[438] + et[444];
  et[446] = et[424] + et[445];
  et[447] = et[398] + et[446];
  et[448] = et[447] * e;
  et[449] = et[338] + et[448];
  et[450] = et[449] * s;
  et[451] = -8.0 * y;
  et[452] = et[451] * y;
  et[453] = -8.0 * f;
  et[454] = 16.0 * y;
  et[455] = et[453] + et[454];
  et[456] = et[455] * f;
  et[457] = et[452] + et[456];
  et[458] = et[457] * d;
  et[459] = 4.0 * et[286];
  et[460] = et[458] + et[459];
  et[461] = et[460] * e;
  et[462] = et[461] * a;
  et[463] = et[401] * d;
  et[464] = -10.0 * et[195];
  et[465] = et[127] + et[464];
  et[466] = et[463] + et[465];
  et[467] = et[466] * f;
  et[468] = -4.0 * et[144];
  et[469] = 10.0 * et[195];
  et[470] = et[135] + et[468] + et[469];
  et[471] = et[470] * y;
  et[472] = et[467] + et[471];
  et[473] = et[472] * d;
  et[474] = et[197] * e;
  et[475] = et[474] * e;
  et[476] = 24.0 * et[242] * a;
  et[477] = et[285] * b;
  et[478] = et[275] * a;
  et[479] = et[477] + et[478];
  et[480] = 12.0 * et[479];
  et[481] = et[476] + et[480];
  et[482] = et[481] * a;
  et[483] = et[475] + et[482];
  et[484] = et[473] + et[483];
  et[485] = et[484] * b;
  et[486] = et[462] + et[485];
  et[487] = et[450] + et[486];
  ////////////////////////////////////
  et[488] = 36.0 * et[152];
  et[489] = et[488] * b;
  et[490] = 16.0 * et[386];
  et[491] = et[489] + et[490];
  et[492] = et[491] * b;
  et[493] = -8.0 * x;
  et[494] = et[493] * x;
  et[495] = et[345] * c;
  et[496] = et[494] + et[495];
  et[497] = et[496] * a;
  et[498] = et[497] + et[417];
  et[499] = et[492] + et[498];
  et[500] = et[499] * s;
  et[501] = 16.0 * et[245];
  et[502] = et[501] * a;
  et[503] = 36.0 * et[68];
  et[504] = et[503] * b;
  et[505] = 24.0 * et[180];
  et[506] = et[504] + et[505];
  et[507] = et[506] * b;
  et[508] = et[507] + et[459];
  et[509] = et[502] + et[508];
  et[510] = et[500] + et[509];
  et[511] = et[510] * a;
  et[512] = s * s;
  et[513] = -6.0 * et[512];
  et[514] = et[513] + 14.0;
  et[515] = et[514] * b;
  et[516] = e * s;
  et[517] = 6.0 * et[516];
  et[518] = et[515] + et[517];
  et[519] = et[518] * b;
  et[520] = et[3] * s;
  et[521] = et[520] + 1.0;
  et[522] = et[521] * e;
  et[523] = et[522] * e;
  et[524] = 2.0 * et[523];
  et[525] = et[519] + et[524];
  et[526] = et[525] * e;
  et[527] = -8.0 * et[126] * et[35];
  et[528] = et[526] + et[527];
  et[529] = et[528] * b;
  et[530] = 2.0 * et[347] * et[195];
  et[531] = et[529] + et[530];
  et[532] = et[511] + et[531];
  et[533] = et[532] * a;
  et[534] = 16.0 * et[69];
  et[535] = -8.0 * c * s;
  et[536] = et[534] + et[535];
  et[537] = et[536] * d;
  et[538] = et[345] * a;
  et[539] = -24.0 * et[516];
  et[540] = -4.0 * b;
  et[541] = et[539] + et[540];
  et[542] = et[541] * b;
  et[543] = 36.0 * et[195];
  et[544] = et[542] + et[543];
  et[545] = et[538] + et[544];
  et[546] = et[537] + et[545];
  et[547] = et[546] * c;
  et[548] = et[493] * s;
  et[549] = 16.0 * et[71];
  et[550] = et[548] + et[549];
  et[551] = et[550] * d;
  et[552] = 24.0 * et[516];
  et[553] = 4.0 * b;
  et[554] = et[552] + et[553];
  et[555] = et[554] * b;
  et[556] = -8.0 * a;
  et[557] = et[556] * x;
  et[558] = -36.0 * et[195];
  et[559] = et[557] + et[558];
  et[560] = et[555] + et[559];
  et[561] = et[551] + et[560];
  et[562] = et[561] * x;
  et[563] = 8.0 * et[161] * s;
  et[564] = et[366] * b;
  et[565] = et[564] + et[418];
  et[566] = 24.0 * et[565];
  et[567] = et[563] + et[566];
  et[568] = et[562] + et[567];
  et[569] = et[547] + et[568];
  et[570] = et[569] * d;
  et[571] = 20.0 * et[304];
  et[572] = et[571] * b;
  et[573] = et[572] * b;
  et[574] = et[386] * e;
  et[575] = 12.0 * et[574];
  et[576] = et[573] + et[575];
  et[577] = et[299] + et[576];
  et[578] = et[577] * a;
  et[579] = -6.0 * et[347];
  et[580] = 2.0 * et[376];
  et[581] = et[579] + et[580];
  et[582] = et[581] * b;
  et[583] = 14.0 * et[379];
  et[584] = et[582] + et[583];
  et[585] = et[584] * b;
  et[586] = et[578] + et[585];
  et[587] = et[570] + et[586];
  et[588] = et[587] * s;
  et[589] = et[245] * a;
  et[590] = et[180] * b;
  et[591] = et[242] * d;
  et[592] = et[590] + et[591];
  et[593] = et[589] + et[592];
  et[594] = 16.0 * et[593];
  et[595] = et[356] * f;
  et[596] = 4.0 * et[126];
  et[597] = et[595] + et[596] + et[558];
  et[598] = et[597] * f;
  et[599] = et[356] * y;
  et[600] = -4.0 * et[126];
  et[601] = et[599] + et[600] + et[543];
  et[602] = et[601] * y;
  et[603] = et[598] + et[602];
  et[604] = et[594] + et[603];
  et[605] = et[604] * d;
  et[606] = et[452] + et[317];
  et[607] = et[456] + et[606];
  et[608] = et[607] * a;
  et[609] = 20.0 * et[29];
  et[610] = et[609] * e;
  et[611] = et[610] * e;
  et[612] = 12.0 * et[256];
  et[613] = et[611] + et[612];
  et[614] = et[608] + et[613];
  et[615] = et[614] * a;
  et[616] = 6.0 * et[195];
  et[617] = et[135] + et[616];
  et[618] = et[617] * b;
  et[619] = et[618] * b;
  et[620] = -8.0 * et[442];
  et[621] = et[619] + et[620];
  et[622] = et[615] + et[621];
  et[623] = et[605] + et[622];
  et[624] = et[588] + et[623];
  et[625] = et[624] * d;
  et[626] = et[533] + et[625];
  et[627] = et[626] * s;
  et[628] = et[549] * d;
  et[629] = -6.0 * et[195];
  et[630] = et[127] + et[629];
  et[631] = et[628] + et[630];
  et[632] = et[631] * e;
  et[633] = et[632] * d;
  et[634] = et[633] * b;
  et[635] = 12.0 * et[126];
  et[636] = 20.0 * et[195];
  et[637] = et[599] + et[635] + et[636];
  et[638] = et[637] * y;
  et[639] = et[455] * d;
  et[640] = -12.0 * et[126];
  et[641] = -20.0 * et[195];
  et[642] = et[640] + et[641];
  et[643] = et[639] + et[642];
  et[644] = et[643] * f;
  et[645] = et[638] + et[644];
  et[646] = et[645] * d;
  et[647] = -6.0 * et[126];
  et[648] = et[647] + et[236];
  et[649] = et[648] * e;
  et[650] = et[649] * e;
  et[651] = 8.0 * et[275];
  et[652] = et[316] + et[651];
  et[653] = et[652] * a;
  et[654] = 24.0 * et[477];
  et[655] = et[653] + et[654];
  et[656] = et[655] * a;
  et[657] = et[650] + et[656];
  et[658] = et[646] + et[657];
  et[659] = et[658] * a;
  et[660] = et[634] + et[659];
  et[661] = et[627] + et[660];
  ////////////////////////////////////
  et[662] = et[30] + et[71];
  et[663] = 40.0 * et[662];
  et[664] = et[663] * e;
  et[665] = 16.0 * et[304];
  et[666] = et[665] * s;
  et[667] = 8.0 * et[29];
  et[668] = et[666] + et[667];
  et[669] = et[668] * b;
  et[670] = et[664] + et[669];
  et[671] = et[670] * d;
  et[672] = -12.0 * et[512];
  et[673] = et[672] + 11.0;
  et[674] = et[673] * b;
  et[675] = 36.0 * et[516];
  et[676] = et[674] + et[675];
  et[677] = et[676] * b;
  et[678] = -25.0 * et[195];
  et[679] = et[677] + et[678];
  et[680] = et[679] * e;
  et[681] = et[671] + et[680];
  et[682] = et[681] * d;
  et[683] = et[682] * d;
  et[684] = 32.0 * et[304];
  et[685] = et[684] * a;
  et[686] = 12.0 * et[198];
  et[687] = 8.0 * et[152];
  et[688] = et[687] * d;
  et[689] = 14.0 * et[405];
  et[690] = et[688] + et[689];
  et[691] = et[686] + et[690];
  et[692] = et[685] + et[691];
  et[693] = et[692] * b;
  et[694] = et[304] * d;
  et[695] = 24.0 * et[694];
  et[696] = et[667] * a;
  et[697] = 14.0 * et[195];
  et[698] = et[696] + et[697];
  et[699] = et[695] + et[698];
  et[700] = et[699] * e;
  et[701] = et[693] + et[700];
  et[702] = et[701] * s;
  et[703] = et[210] * a;
  et[704] = 32.0 * et[29];
  et[705] = et[704] * d;
  et[706] = et[703] + et[705];
  et[707] = et[706] * e;
  et[708] = 24.0 * et[29];
  et[709] = et[708] * a;
  et[710] = 8.0 * et[68];
  et[711] = et[710] * d;
  et[712] = et[126] + et[195];
  et[713] = 14.0 * et[712];
  et[714] = et[711] + et[713];
  et[715] = et[709] + et[714];
  et[716] = et[715] * b;
  et[717] = et[707] + et[716];
  et[718] = et[702] + et[717];
  et[719] = et[718] * d;
  et[720] = 8.0 * et[304];
  et[721] = et[720] * e;
  et[722] = 40.0 * et[152];
  et[723] = et[722] * b;
  et[724] = et[721] + et[723];
  et[725] = et[724] * s;
  et[726] = 40.0 * et[68];
  et[727] = et[726] * b;
  et[728] = 16.0 * et[180];
  et[729] = et[727] + et[728];
  et[730] = et[725] + et[729];
  et[731] = et[730] * a;
  et[732] = et[3] * et[195] * et[516];
  et[733] = -13.0 * et[516];
  et[734] = -25.0 * b;
  et[735] = et[733] + et[734];
  et[736] = et[735] * s;
  et[737] = 36.0 * e;
  et[738] = et[736] + et[737];
  et[739] = et[738] * b;
  et[740] = 11.0 * et[347];
  et[741] = et[739] + et[740];
  et[742] = et[741] * b;
  et[743] = et[732] + et[742];
  et[744] = et[731] + et[743];
  et[745] = et[744] * a;
  et[746] = et[719] + et[745];
  et[747] = et[746] * a;
  et[748] = et[683] + et[747];
  et[749] = et[748] * s;
  et[750] = et[549] * a;
  et[751] = -12.0 * et[405];
  et[752] = et[750] + et[751];
  et[753] = et[752] * e;
  et[754] = et[753] * a;
  et[755] = et[754] * a;
  et[756] = 32.0 * et[71];
  et[757] = et[756] * d;
  et[758] = -12.0 * et[195];
  et[759] = et[757] + et[758];
  et[760] = et[759] * e;
  et[761] = et[760] * a;
  et[762] = 24.0 * et[71];
  et[763] = et[762] * a;
  et[764] = et[763] + et[751];
  et[765] = et[764] * a;
  et[766] = et[210] * d;
  et[767] = -13.0 * et[195];
  et[768] = et[156] + et[767];
  et[769] = et[766] + et[768];
  et[770] = et[769] * d;
  et[771] = et[765] + et[770];
  et[772] = et[771] * b;
  et[773] = et[761] + et[772];
  et[774] = et[773] * d;
  et[775] = et[755] + et[774];
  et[776] = et[749] + et[775];
  ////////////////////////////////////
  et[777] = 16.0 * et[662];
  et[778] = et[777] * d;
  et[779] = -8.0 * et[512];
  et[780] = et[779] + 6.0;
  et[781] = et[780] * b;
  et[782] = 40.0 * et[516];
  et[783] = et[781] + et[782];
  et[784] = et[783] * b;
  et[785] = -38.0 * et[195];
  et[786] = et[784] + et[785];
  et[787] = et[778] + et[786];
  et[788] = et[787] * s;
  et[789] = et[788] + et[751];
  et[790] = et[789] * d;
  et[791] = et[790] * d;
  et[792] = et[791] * d;
  et[793] = et[410] * a;
  et[794] = -12.0 * et[516];
  et[795] = -38.0 * b;
  et[796] = et[794] + et[795];
  et[797] = et[796] * b;
  et[798] = et[797] + et[616];
  et[799] = et[793] + et[798];
  et[800] = et[799] * s;
  et[801] = 16.0 * et[68];
  et[802] = et[801] * a;
  et[803] = 40.0 * et[405];
  et[804] = et[802] + et[803];
  et[805] = et[800] + et[804];
  et[806] = et[805] * a;
  et[807] = et[806] * a;
  et[808] = et[304] * a;
  et[809] = et[808] * a;
  et[810] = et[694] * d;
  et[811] = et[809] + et[810];
  et[812] = 16.0 * et[811];
  et[813] = -6.0 * et[50];
  et[814] = 36.0 * d;
  et[815] = et[813] + et[814];
  et[816] = et[815] * e;
  et[817] = et[816] * e;
  et[818] = -26.0 * et[35];
  et[819] = 28.0 * e;
  et[820] = et[818] + et[819];
  et[821] = et[820] * a;
  et[822] = et[539] + et[553];
  et[823] = et[822] * d;
  et[824] = et[821] + et[823];
  et[825] = et[824] * b;
  et[826] = et[817] + et[825];
  et[827] = et[812] + et[826];
  et[828] = et[827] * s;
  et[829] = et[403] * a;
  et[830] = 36.0 * et[126];
  et[831] = 4.0 * et[195];
  et[832] = et[830] + et[831];
  et[833] = et[829] + et[832];
  et[834] = et[833] * a;
  et[835] = 28.0 * et[405];
  et[836] = et[404] + et[835];
  et[837] = et[836] * d;
  et[838] = et[834] + et[837];
  et[839] = et[828] + et[838];
  et[840] = et[839] * d;
  et[841] = et[807] + et[840];
  et[842] = et[841] * s;
  et[843] = et[556] * a;
  et[844] = et[843] * et[195];
  et[845] = -24.0 * et[405];
  et[846] = et[750] + et[845];
  et[847] = et[846] * a;
  et[848] = -26.0 * et[195];
  et[849] = et[647] + et[848];
  et[850] = et[628] + et[849];
  et[851] = et[850] * d;
  et[852] = et[847] + et[851];
  et[853] = et[852] * d;
  et[854] = et[844] + et[853];
  et[855] = et[842] + et[854];
  et[856] = et[855] * a;
  et[857] = et[792] + et[856];
  ////////////////////////////////////
  et[858] = 16.0 * et[512];
  et[859] = et[858] + -4.0;
  et[860] = et[859] * b;
  et[861] = -28.0 * et[516];
  et[862] = et[860] + et[861];
  et[863] = et[862] * d;
  et[864] = et[863] * d;
  et[865] = et[864] * d;
  et[866] = et[865] * d;
  et[867] = 16.0 * et[521];
  et[868] = et[867] * b;
  et[869] = et[868] + et[782];
  et[870] = et[869] * d;
  et[871] = et[870] * d;
  et[872] = et[871] * d;
  et[873] = -24.0 * et[35];
  et[874] = 16.0 * e;
  et[875] = et[873] + et[874];
  et[876] = et[875] * d;
  et[877] = -4.0 * et[516];
  et[878] = -28.0 * b;
  et[879] = et[877] + et[878];
  et[880] = et[879] * a;
  et[881] = et[876] + et[880];
  et[882] = et[881] * s;
  et[883] = 16.0 * a;
  et[884] = et[883] * e;
  et[885] = b * d;
  et[886] = 40.0 * et[885];
  et[887] = et[884] + et[886];
  et[888] = et[882] + et[887];
  et[889] = et[888] * a;
  et[890] = et[55] + b;
  et[891] = et[890] * s;
  et[892] = et[891] + e;
  et[893] = et[892] * d;
  et[894] = et[893] * d;
  et[895] = 12.0 * et[894];
  et[896] = et[889] + et[895];
  et[897] = et[896] * a;
  et[898] = et[872] + et[897];
  et[899] = et[898] * s;
  et[900] = -12.0 * et[885];
  et[901] = -16.0 * a * e;
  et[902] = et[900] + et[901];
  et[903] = et[902] * a;
  et[904] = d * d;
  et[905] = -24.0 * et[904] * e;
  et[906] = et[903] + et[905];
  et[907] = et[906] * d;
  et[908] = et[899] + et[907];
  et[909] = et[908] * a;
  et[910] = et[866] + et[909];
  ////////////////////////////////////
  et[911] = et[356] * et[904];
  et[912] = et[911] * et[904] * s;
  et[913] = et[843] * et[50];
  et[914] = et[913] * et[50];
  et[915] = et[858] + -8.0;
  et[916] = et[915] * d;
  et[917] = et[916] * d;
  et[918] = et[917] * d;
  et[919] = et[356] * a;
  et[920] = et[883] * a;
  et[921] = et[3] * et[904];
  et[922] = et[24] * a;
  et[923] = et[921] + et[922];
  et[924] = et[923] * s;
  et[925] = et[924] + et[904];
  et[926] = 8.0 * et[925];
  et[927] = et[920] + et[926];
  et[928] = et[927] * s;
  et[929] = et[919] + et[928];
  et[930] = et[929] * a;
  et[931] = et[918] + et[930];
  et[932] = et[931] * d;
  et[933] = et[914] + et[932];
  et[934] = et[933] * a;
  et[935] = et[912] + et[934];
}
// 0: et[116], 1: et[294], 2: et[487], 3: et[661], 4: et[776], 5: et[857], 6:
// et[910], 7: et[935],

void _slopeDifferenceRelation(const RealNum &a, const RealNum &b,
                              const RealNum &c, const RealNum &d,
                              const RealNum &e, const RealNum &f,
                              const RealNum &g, const RealNum &h,
                              const RealNum &i, const RealNum &j,
                              const RealNum &k, const RealNum &l,
                              const RealNum &x, const RealNum &y, RealNum *et) {
  ////////////////////////////////////
  et[0] = -1.0 * l;
  et[1] = et[0] + y;
  et[2] = et[1] * c;
  et[3] = -1.0 * x;
  et[4] = et[3] + i;
  et[5] = et[4] * f;
  et[6] = -1.0 * i;
  et[7] = et[6] * y;
  et[8] = l * x;
  et[9] = et[7] + et[8];
  et[10] = et[5] + et[9];
  et[11] = et[2] + et[10];
  et[12] = et[11] * h;
  et[13] = -1.0 * c;
  et[14] = et[13] + et[6];
  et[15] = et[14] + x;
  et[16] = et[15] * x;
  et[17] = -1.0 * f;
  et[18] = et[17] + et[1];
  et[19] = et[18] * y;
  et[20] = c * i;
  et[21] = f * l;
  et[22] = et[20] + et[21];
  et[23] = et[19] + et[22];
  et[24] = et[16] + et[23];
  et[25] = et[24] * k;
  et[26] = et[12] + et[25];
  et[27] = et[26] * b;
  et[28] = et[11] * k;
  et[29] = c + i;
  et[30] = et[3] + et[29];
  et[31] = et[30] * x;
  et[32] = -1.0 * y;
  et[33] = et[32] + l;
  et[34] = et[33] + f;
  et[35] = et[34] * y;
  et[36] = et[17] * l;
  et[37] = et[6] * c;
  et[38] = et[36] + et[37];
  et[39] = et[35] + et[38];
  et[40] = et[31] + et[39];
  et[41] = et[40] * h;
  et[42] = et[28] + et[41];
  et[43] = et[42] * e;
  et[44] = et[27] + et[43];
  ////////////////////////////////////
  et[45] = et[11] * g;
  et[46] = et[24] * j;
  et[47] = et[45] + et[46];
  et[48] = et[47] * b;
  et[49] = et[11] * j;
  et[50] = et[40] * g;
  et[51] = et[49] + et[50];
  et[52] = et[51] * e;
  et[53] = et[48] + et[52];
  et[54] = 2.0 * et[53];
  et[55] = -1.0 * h;
  et[56] = et[55] * h;
  et[57] = -1.0 * k;
  et[58] = et[57] * k;
  et[59] = et[56] + et[58];
  et[60] = et[59] * c;
  et[61] = h * h;
  et[62] = k * k;
  et[63] = et[61] + et[62];
  et[64] = et[63] * x;
  et[65] = et[60] + et[64];
  et[66] = et[65] * e;
  et[67] = et[59] * y;
  et[68] = et[63] * f;
  et[69] = et[67] + et[68];
  et[70] = et[69] * b;
  et[71] = et[66] + et[70];
  et[72] = et[54] + et[71];
  ////////////////////////////////////
  et[73] = et[55] * g;
  et[74] = et[57] * j;
  et[75] = et[73] + et[74];
  et[76] = et[75] * c;
  et[77] = g * h;
  et[78] = j * k;
  et[79] = et[77] + et[78];
  et[80] = et[79] * x;
  et[81] = et[76] + et[80];
  et[82] = 3.0 * et[81];
  et[83] = et[55] * j;
  et[84] = g * k;
  et[85] = et[83] + et[84];
  et[86] = et[85] * y;
  et[87] = et[57] * g;
  et[88] = h * j;
  et[89] = et[87] + et[88];
  et[90] = et[89] * f;
  et[91] = et[86] + et[90];
  et[92] = et[82] + et[91];
  et[93] = et[92] * e;
  et[94] = et[75] * y;
  et[95] = et[79] * f;
  et[96] = et[94] + et[95];
  et[97] = 3.0 * et[96];
  et[98] = et[85] * x;
  et[99] = et[89] * c;
  et[100] = et[98] + et[99];
  et[101] = et[97] + et[100];
  et[102] = et[101] * b;
  et[103] = et[93] + et[102];
  ////////////////////////////////////
  et[104] = -1.0 * g;
  et[105] = et[104] * g;
  et[106] = -1.0 * j;
  et[107] = et[106] * j;
  et[108] = et[105] + et[107];
  et[109] = et[108] * c;
  et[110] = g * g;
  et[111] = j * j;
  et[112] = et[110] + et[111];
  et[113] = et[112] * x;
  et[114] = et[109] + et[113];
  et[115] = et[114] * e;
  et[116] = et[108] * y;
  et[117] = et[112] * f;
  et[118] = et[116] + et[117];
  et[119] = et[118] * b;
  et[120] = et[115] + et[119];
  et[121] = 2.0 * et[120];
  ////////////////////////////////////
  et[122] = et[26] * a;
  et[123] = et[42] * d;
  et[124] = et[122] + et[123];
  et[125] = 2.0 * et[124];
  et[126] = et[1] * h;
  et[127] = et[4] * k;
  et[128] = et[126] + et[127];
  et[129] = et[128] * b;
  et[130] = et[129] * b;
  et[131] = et[128] * e;
  et[132] = et[131] * e;
  et[133] = et[130] + et[132];
  et[134] = et[125] + et[133];
  ////////////////////////////////////
  et[135] = et[69] * a;
  et[136] = et[1] * g;
  et[137] = et[4] * j;
  et[138] = et[136] + et[137];
  et[139] = et[138] * b;
  et[140] = et[139] * b;
  et[141] = et[138] * e;
  et[142] = et[141] * e;
  et[143] = et[65] * d;
  et[144] = et[142] + et[143];
  et[145] = et[140] + et[144];
  et[146] = et[135] + et[145];
  et[147] = 2.0 * et[146];
  et[148] = et[47] * a;
  et[149] = et[51] * d;
  et[150] = et[148] + et[149];
  et[151] = 4.0 * et[150];
  et[152] = et[147] + et[151];
  ////////////////////////////////////
  et[153] = et[13] + x;
  et[154] = et[153] * a;
  et[155] = et[17] + y;
  et[156] = et[155] * d;
  et[157] = et[154] + et[156];
  et[158] = 2.0 * et[157];
  et[159] = -1.0 * b;
  et[160] = et[159] * b;
  et[161] = -1.0 * e;
  et[162] = et[161] * e;
  et[163] = et[160] + et[162];
  et[164] = et[158] + et[163];
  et[165] = et[164] * k;
  et[166] = et[153] * d;
  et[167] = et[32] + f;
  et[168] = et[167] * a;
  et[169] = et[166] + et[168];
  et[170] = et[169] * h;
  et[171] = 6.0 * et[170];
  et[172] = et[165] + et[171];
  et[173] = et[172] * g;
  et[174] = et[3] + c;
  et[175] = et[174] * a;
  et[176] = et[167] * d;
  et[177] = et[175] + et[176];
  et[178] = 2.0 * et[177];
  et[179] = b * b;
  et[180] = e * e;
  et[181] = et[179] + et[180];
  et[182] = et[178] + et[181];
  et[183] = et[182] * h;
  et[184] = et[169] * k;
  et[185] = 6.0 * et[184];
  et[186] = et[183] + et[185];
  et[187] = et[186] * j;
  et[188] = et[173] + et[187];
  ////////////////////////////////////
  et[189] = et[114] * d;
  et[190] = et[118] * a;
  et[191] = et[189] + et[190];
  et[192] = 4.0 * et[191];
  ////////////////////////////////////
  et[193] = 3.0 * et[128];
  et[194] = et[193] * b;
  et[195] = et[4] * h;
  et[196] = et[33] * k;
  et[197] = et[195] + et[196];
  et[198] = et[197] * e;
  et[199] = et[194] + et[198];
  et[200] = et[199] * a;
  et[201] = et[6] + x;
  et[202] = et[201] * h;
  et[203] = et[1] * k;
  et[204] = et[202] + et[203];
  et[205] = et[204] * b;
  et[206] = 3.0 * et[131];
  et[207] = et[205] + et[206];
  et[208] = et[207] * d;
  et[209] = et[200] + et[208];
  ////////////////////////////////////
  et[210] = 6.0 * et[138];
  et[211] = et[210] * b;
  et[212] = et[4] * g;
  et[213] = et[33] * j;
  et[214] = et[212] + et[213];
  et[215] = 2.0 * et[214];
  et[216] = et[215] + et[63];
  et[217] = et[216] * e;
  et[218] = et[211] + et[217];
  et[219] = et[218] * a;
  et[220] = et[210] * e;
  et[221] = et[201] * g;
  et[222] = et[1] * j;
  et[223] = et[221] + et[222];
  et[224] = 2.0 * et[223];
  et[225] = et[224] + et[59];
  et[226] = et[225] * b;
  et[227] = et[220] + et[226];
  et[228] = et[227] * d;
  et[229] = et[219] + et[228];
  ////////////////////////////////////
  et[230] = et[75] * b;
  et[231] = et[89] * e;
  et[232] = et[230] + et[231];
  et[233] = et[232] * d;
  et[234] = et[89] * b;
  et[235] = et[79] * e;
  et[236] = et[234] + et[235];
  et[237] = et[236] * a;
  et[238] = et[233] + et[237];
  et[239] = 3.0 * et[238];
  ////////////////////////////////////
  et[240] = et[108] * d;
  et[241] = et[240] * b;
  et[242] = et[112] * e;
  et[243] = et[242] * a;
  et[244] = et[241] + et[243];
  et[245] = 2.0 * et[244];
  ////////////////////////////////////
  et[246] = et[128] * a;
  et[247] = et[246] * a;
  et[248] = et[128] * d;
  et[249] = et[248] * d;
  et[250] = et[247] + et[249];
  et[251] = 2.0 * et[250];
  ////////////////////////////////////
  et[252] = et[138] * a;
  et[253] = et[252] * a;
  et[254] = et[138] * d;
  et[255] = et[254] * d;
  et[256] = et[253] + et[255];
  et[257] = 4.0 * et[256];
  ////////////////////////////////////
  et[258] = et[89] * a;
  et[259] = et[258] * a;
  et[260] = et[89] * d;
  et[261] = et[260] * d;
  et[262] = et[259] + et[261];
  et[263] = 2.0 * et[262];
}
// 0: et[44], 1: et[72], 2: et[103], 3: et[121], 4: et[134], 5: et[152], 6:
// et[188], 7: et[192], 8: et[209], 9: et[229], 10: et[239], 11: et[245], 12:
// et[251], 13: et[257], 14: et[263],

// *** MAPPED CODE INDEXES ***
// slopeDifferenceRelation_0_0 = et[44];
// slopeDifferenceRelation_0_1 = et[72];
// slopeDifferenceRelation_0_2 = et[103];
// slopeDifferenceRelation_0_3 = et[121];
// slopeDifferenceRelation_1_0 = et[134];
// slopeDifferenceRelation_1_1 = et[152];
// slopeDifferenceRelation_1_2 = et[188];
// slopeDifferenceRelation_1_3 = et[192];
// slopeDifferenceRelation_2_0 = et[209];
// slopeDifferenceRelation_2_1 = et[229];
// slopeDifferenceRelation_2_2 = et[239];
// slopeDifferenceRelation_2_3 = et[245];
// slopeDifferenceRelation_3_0 = et[251];
// slopeDifferenceRelation_3_1 = et[257];
// slopeDifferenceRelation_3_2 = et[263];

// powerMappings: 0_0: 0, 0_1: 1, 0_2: 2, 0_3: 3, 1_0: 4, 1_1: 5, 1_2: 6, 1_3:
// 7, 2_0: 8, 2_1: 9, 2_2: 10, 2_3: 11, 3_0: 12, 3_1: 13, 3_2: 14

void _slopeDifferenceRelationTDerivative(const RealNum &a, const RealNum &b,
                                         const RealNum &d, const RealNum &e,
                                         RealNum *et) {
  ////////////////////////////////////
  ////////////////////////////////////
  ////////////////////////////////////
  ////////////////////////////////////
  ////////////////////////////////////
  et[264] = 6.0 * et[128];
  et[265] = et[264] * b;
  et[266] = 2.0 * et[198];
  et[267] = et[265] + et[266];
  et[268] = et[267] * a;
  et[269] = et[264] * e;
  et[270] = 2.0 * et[205];
  et[271] = et[269] + et[270];
  et[272] = et[271] * d;
  et[273] = et[268] + et[272];
  ////////////////////////////////////
  et[274] = 2.0 * et[59];
  et[275] = 4.0 * et[223];
  et[276] = et[274] + et[275];
  et[277] = et[276] * b;
  et[278] = 12.0 * et[141];
  et[279] = et[277] + et[278];
  et[280] = et[279] * d;
  et[281] = 4.0 * et[214];
  et[282] = 2.0 * et[63];
  et[283] = et[281] + et[282];
  et[284] = et[283] * e;
  et[285] = 12.0 * et[139];
  et[286] = et[284] + et[285];
  et[287] = et[286] * a;
  et[288] = et[280] + et[287];
  ////////////////////////////////////
  et[289] = 6.0 * et[238];
  ////////////////////////////////////
  et[290] = 4.0 * et[244];
  ////////////////////////////////////
  et[291] = 6.0 * et[250];
  ////////////////////////////////////
  et[292] = 12.0 * et[256];
  ////////////////////////////////////
  et[293] = 6.0 * et[262];
}
// 0: et[134], 1: et[152], 2: et[188], 3: et[192], 4: et[273], 5: et[288], 6:
// et[289], 7: et[290], 8: et[291], 9: et[292], 10: et[293],

// *** MAPPED CODE INDEXES ***
// slopeDifferenceRelationTDerivative_0_0 = et[134];
// slopeDifferenceRelationTDerivative_0_1 = et[152];
// slopeDifferenceRelationTDerivative_0_2 = et[188];
// slopeDifferenceRelationTDerivative_0_3 = et[192];
// slopeDifferenceRelationTDerivative_1_0 = et[273];
// slopeDifferenceRelationTDerivative_1_1 = et[288];
// slopeDifferenceRelationTDerivative_1_2 = et[289];
// slopeDifferenceRelationTDerivative_1_3 = et[290];
// slopeDifferenceRelationTDerivative_2_0 = et[291];
// slopeDifferenceRelationTDerivative_2_1 = et[292];
// slopeDifferenceRelationTDerivative_2_2 = et[293];

// powerMappings: 0_0: 0, 0_1: 1, 0_2: 2, 0_3: 3, 1_0: 4, 1_1: 5, 1_2: 6, 1_3:
// 7, 2_0: 8, 2_1: 9, 2_2: 10

void _slopeDifferenceRelationUDerivative(const RealNum &b, const RealNum &e,
                                         const RealNum &g, const RealNum &h,
                                         const RealNum &j, const RealNum &k,
                                         RealNum *et) {
  ////////////////////////////////////
  ////////////////////////////////////
  et[294] = et[81] * e;
  et[295] = et[96] * b;
  et[296] = et[294] + et[295];
  et[297] = 6.0 * et[296];
  et[298] = et[100] * b;
  et[299] = et[91] * e;
  et[300] = et[298] + et[299];
  et[301] = 2.0 * et[300];
  et[302] = et[297] + et[301];
  ////////////////////////////////////
  et[303] = 6.0 * et[120];
  ////////////////////////////////////
  et[304] = 0.0;
  ////////////////////////////////////
  ////////////////////////////////////
  et[305] = 2.0 * et[163];
  et[306] = 4.0 * et[157];
  et[307] = et[305] + et[306];
  et[308] = et[307] * k;
  et[309] = 12.0 * et[170];
  et[310] = et[308] + et[309];
  et[311] = et[310] * g;
  et[312] = 4.0 * et[177];
  et[313] = 2.0 * et[181];
  et[314] = et[312] + et[313];
  et[315] = et[314] * h;
  et[316] = 12.0 * et[184];
  et[317] = et[315] + et[316];
  et[318] = et[317] * j;
  et[319] = et[311] + et[318];
  ////////////////////////////////////
  et[320] = 12.0 * et[191];
  ////////////////////////////////////
  ////////////////////////////////////
  ////////////////////////////////////
  ////////////////////////////////////
  et[321] = 6.0 * et[244];
  ////////////////////////////////////
  ////////////////////////////////////
  ////////////////////////////////////
  et[322] = 4.0 * et[262];
}
// 0: et[72], 1: et[302], 2: et[303], 3: et[304], 4: et[152], 5: et[319], 6:
// et[320], 7: et[304], 8: et[229], 9: et[289], 10: et[321], 11: et[304], 12:
// et[257], 13: et[322],

// *** MAPPED CODE INDEXES ***
// slopeDifferenceRelationUDerivative_0_0 = et[72];
// slopeDifferenceRelationUDerivative_0_1 = et[302];
// slopeDifferenceRelationUDerivative_0_2 = et[303];
// slopeDifferenceRelationUDerivative_1_0 = et[152];
// slopeDifferenceRelationUDerivative_1_1 = et[319];
// slopeDifferenceRelationUDerivative_1_2 = et[320];
// slopeDifferenceRelationUDerivative_2_0 = et[229];
// slopeDifferenceRelationUDerivative_2_1 = et[289];
// slopeDifferenceRelationUDerivative_2_2 = et[321];
// slopeDifferenceRelationUDerivative_3_0 = et[257];
// slopeDifferenceRelationUDerivative_3_1 = et[322];

// powerMappings: 0_0: 0, 0_1: 1, 0_2: 2, 1_0: 4, 1_1: 5, 1_2: 6, 2_0: 8, 2_1:
// 9, 2_2: 10, 3_0: 12, 3_1: 13

void _distanceDifferenceRelation(const RealNum &a, const RealNum &b,
                                 const RealNum &c, const RealNum &d,
                                 const RealNum &e, const RealNum &f,
                                 const RealNum &i, const RealNum &l,
                                 const RealNum &x, const RealNum &y,
                                 RealNum *et) {
  ////////////////////////////////////
  et[323] = et[13] + i;
  et[324] = et[323] * x;
  et[325] = et[17] + l;
  et[326] = et[325] * y;
  et[327] = et[324] + et[326];
  et[328] = 2.0 * et[327];
  et[329] = et[6] * i;
  et[330] = et[0] * l;
  et[331] = c * c;
  et[332] = f * f;
  et[333] = et[329] + et[330] + et[331] + et[332];
  et[334] = et[328] + et[333];
  ////////////////////////////////////
  et[335] = 2.0 * et[204];
  ////////////////////////////////////
  ////////////////////////////////////
  et[336] = 2.0 * et[75];
  ////////////////////////////////////
  ////////////////////////////////////
  et[337] = et[174] * b;
  et[338] = et[167] * e;
  et[339] = et[337] + et[338];
  et[340] = 2.0 * et[339];
  ////////////////////////////////////
  ////////////////////////////////////
  ////////////////////////////////////
  ////////////////////////////////////
  ////////////////////////////////////
  ////////////////////////////////////
  ////////////////////////////////////
  ////////////////////////////////////
  ////////////////////////////////////
  ////////////////////////////////////
  et[341] = a * b;
  et[342] = d * e;
  et[343] = et[341] + et[342];
  et[344] = 2.0 * et[343];
  ////////////////////////////////////
  ////////////////////////////////////
  ////////////////////////////////////
  ////////////////////////////////////
  ////////////////////////////////////
  et[345] = a * a;
  et[346] = d * d;
  et[347] = et[345] + et[346];
}
// 0: et[334], 1: et[335], 2: et[225], 3: et[336], 4: et[108], 5: et[340], 6:
// et[304], 7: et[304], 8: et[304], 9: et[304], 10: et[182], 11: et[304], 12:
// et[304], 13: et[304], 14: et[304], 15: et[344], 16: et[304], 17: et[304], 18:
// et[304], 19: et[304], 20: et[347],

// *** MAPPED CODE INDEXES ***
// distanceDifferenceRelation_0_0 = et[334];
// distanceDifferenceRelation_0_1 = et[335];
// distanceDifferenceRelation_0_2 = et[225];
// distanceDifferenceRelation_0_3 = et[336];
// distanceDifferenceRelation_0_4 = et[108];
// distanceDifferenceRelation_1_0 = et[340];
// distanceDifferenceRelation_2_0 = et[182];
// distanceDifferenceRelation_3_0 = et[344];
// distanceDifferenceRelation_4_0 = et[347];

// powerMappings: 0_0: 0, 0_1: 1, 0_2: 2, 0_3: 3, 0_4: 4, 1_0: 5, 2_0: 10, 3_0:
// 15, 4_0: 20

void _distanceDifferenceRelationTDerivative(RealNum *et) {
  ////////////////////////////////////
  ////////////////////////////////////
  ////////////////////////////////////
  et[348] = 6.0 * et[343];
  ////////////////////////////////////
  et[349] = 4.0 * et[347];
}
// 0: et[340], 1: et[314], 2: et[348], 3: et[349],

void _distanceDifferenceRelationUDerivative(RealNum *et) {
  ////////////////////////////////////
  ////////////////////////////////////
  ////////////////////////////////////
  et[350] = 6.0 * et[75];
  ////////////////////////////////////
  et[351] = 4.0 * et[108];
}
// 0: et[335], 1: et[276], 2: et[350], 3: et[351],

void _curveRotateTouchesCircle(const RealNum &a, const RealNum &b,
                               const RealNum &c, const RealNum &d,
                               const RealNum &e, const RealNum &f,
                               const RealNum &g, const RealNum &h,
                               const RealNum &i, const RealNum &j,
                               const RealNum &k, RealNum *et) {
  ////////////////////////////////////
  et[0] = -1.0 * c;
  et[1] = g + j;
  et[2] = et[0] + et[1];
  et[3] = et[2] * c;
  et[4] = f * f;
  et[5] = -1.0 * et[4];
  et[6] = i * i;
  et[7] = g * g;
  et[8] = h * h;
  et[9] = et[7] + et[8];
  et[10] = et[6] + et[9];
  et[11] = et[5] + et[10];
  et[12] = et[3] + et[11];
  et[13] = et[12] * c;
  et[14] = -1.0 * et[6];
  et[15] = et[14] * j;
  et[16] = -1.0 * g;
  et[17] = et[16] + j;
  et[18] = et[17] * g;
  et[19] = -1.0 * h;
  et[20] = et[19] * h;
  et[21] = et[20] + et[6];
  et[22] = et[4] + et[21];
  et[23] = et[18] + et[22];
  et[24] = et[23] * g;
  et[25] = et[15] + et[24];
  et[26] = et[13] + et[25];
  et[27] = et[26] * j;
  et[28] = -1.0 * f;
  et[29] = h + k;
  et[30] = et[28] + et[29];
  et[31] = et[30] * f;
  et[32] = c * c;
  et[33] = -1.0 * et[32];
  et[34] = et[14] + et[9];
  et[35] = et[33] + et[34];
  et[36] = et[31] + et[35];
  et[37] = et[36] * f;
  et[38] = et[19] + k;
  et[39] = et[38] * h;
  et[40] = et[16] * g;
  et[41] = et[32] + et[6];
  et[42] = et[40] + et[41];
  et[43] = et[39] + et[42];
  et[44] = et[43] * h;
  et[45] = et[37] + et[44];
  et[46] = et[45] * k;
  et[47] = et[27] + et[46];
  et[48] = 4.0 * et[47];
  et[49] = et[40] + et[20];
  et[50] = et[4] + et[49];
  et[51] = et[14] + et[50];
  et[52] = et[51] * c;
  et[53] = et[52] * c;
  et[54] = et[6] + et[49];
  et[55] = et[54] * f;
  et[56] = et[55] * f;
  et[57] = et[8] + et[14];
  et[58] = et[57] * g;
  et[59] = et[58] * g;
  et[60] = et[6] * h;
  et[61] = et[19] * et[60];
  et[62] = et[59] + et[61];
  et[63] = et[56] + et[62];
  et[64] = et[53] + et[63];
  et[65] = 2.0 * et[64];
  et[66] = f * k;
  et[67] = et[66] * k;
  et[68] = et[19] * et[67];
  et[69] = c * j;
  et[70] = et[16] * et[69];
  et[71] = et[28] + h;
  et[72] = et[71] * g;
  et[73] = et[19] + f;
  et[74] = et[73] * c;
  et[75] = et[72] + et[74];
  et[76] = et[75] * k;
  et[77] = et[70] + et[76];
  et[78] = et[77] * j;
  et[79] = et[68] + et[78];
  et[80] = 8.0 * et[79];
  et[81] = et[8] * et[8];
  et[82] = et[32] * et[32];
  et[83] = et[7] * et[7];
  et[84] = et[4] * et[4];
  et[85] = et[6] * et[6];
  et[86] = et[84] + et[85];
  et[87] = et[83] + et[86];
  et[88] = et[82] + et[87];
  et[89] = et[81] + et[88];
  et[90] = et[80] + et[89];
  et[91] = et[65] + et[90];
  et[92] = et[48] + et[91];
  et[93] = et[92] * e;
  et[94] = et[93] * e;
  et[95] = et[28] + k;
  et[96] = et[95] * j;
  et[97] = -1.0 * k;
  et[98] = et[97] + f;
  et[99] = et[98] * c;
  et[100] = et[96] + et[99];
  et[101] = et[100] * i;
  et[102] = et[101] * i;
  et[103] = 8.0 * et[102];
  et[104] = et[103] * e;
  et[105] = et[5] + et[34];
  et[106] = et[3] + et[105];
  et[107] = et[106] * c;
  et[108] = et[107] + et[24];
  et[109] = et[108] * j;
  et[110] = et[33] + et[10];
  et[111] = et[31] + et[110];
  et[112] = et[111] * f;
  et[113] = et[14] * k;
  et[114] = et[113] + et[44];
  et[115] = et[112] + et[114];
  et[116] = et[115] * k;
  et[117] = et[109] + et[116];
  et[118] = 4.0 * et[117];
  et[119] = et[6] + et[50];
  et[120] = et[119] * c;
  et[121] = et[120] * c;
  et[122] = et[14] + et[49];
  et[123] = et[122] * f;
  et[124] = et[123] * f;
  et[125] = et[124] + et[62];
  et[126] = et[121] + et[125];
  et[127] = 2.0 * et[126];
  et[128] = et[127] + et[90];
  et[129] = et[118] + et[128];
  et[130] = et[129] * b;
  et[131] = et[104] + et[130];
  et[132] = et[131] * b;
  et[133] = et[94] + et[132];
  et[134] = et[133] * e;
  et[135] = et[134] * e;
  et[136] = et[135] * e;
  et[137] = et[136] * e;
  ////////////////////////////////////
  et[138] = 32.0 * et[117];
  et[139] = 16.0 * et[126];
  et[140] = 8.0 * et[89];
  et[141] = 64.0 * et[79];
  et[142] = et[140] + et[141];
  et[143] = et[139] + et[142];
  et[144] = et[138] + et[143];
  et[145] = et[144] * d;
  et[146] = et[145] * b;
  et[147] = et[146] * b;
  et[148] = 48.0 * et[47];
  et[149] = 24.0 * et[64];
  et[150] = 12.0 * et[89];
  et[151] = 96.0 * et[79];
  et[152] = et[150] + et[151];
  et[153] = et[149] + et[152];
  et[154] = et[148] + et[153];
  et[155] = et[154] * d;
  et[156] = et[19] * k;
  et[157] = et[16] + c;
  et[158] = et[157] * j;
  et[159] = et[156] + et[158];
  et[160] = 8.0 * et[159];
  et[161] = 4.0 * et[35];
  et[162] = et[160] + et[161];
  et[163] = et[162] * k;
  et[164] = et[41] + et[50];
  et[165] = 4.0 * et[164];
  et[166] = -12.0 * et[66];
  et[167] = et[0] + g;
  et[168] = et[167] * j;
  et[169] = et[29] * k;
  et[170] = et[168] + et[169];
  et[171] = 8.0 * et[170];
  et[172] = et[166] + et[171];
  et[173] = et[165] + et[172];
  et[174] = et[173] * f;
  et[175] = et[163] + et[174];
  et[176] = et[175] * e;
  et[177] = et[176] * e;
  et[178] = 16.0 * et[102];
  et[179] = et[178] * a;
  et[180] = et[177] + et[179];
  et[181] = et[155] + et[180];
  et[182] = et[181] * e;
  et[183] = 16.0 * et[117];
  et[184] = 8.0 * et[126];
  et[185] = 4.0 * et[89];
  et[186] = 32.0 * et[79];
  et[187] = et[185] + et[186];
  et[188] = et[184] + et[187];
  et[189] = et[183] + et[188];
  et[190] = et[189] * a;
  et[191] = et[35] * k;
  et[192] = et[164] * f;
  et[193] = et[191] + et[192];
  et[194] = et[193] * e;
  et[195] = et[105] * j;
  et[196] = et[164] * c;
  et[197] = et[195] + et[196];
  et[198] = et[197] * b;
  et[199] = et[194] + et[198];
  et[200] = 4.0 * et[199];
  et[201] = et[71] * c;
  et[202] = et[201] * b;
  et[203] = et[29] * f;
  et[204] = et[156] + et[203];
  et[205] = et[204] * e;
  et[206] = et[202] + et[205];
  et[207] = et[206] * k;
  et[208] = et[95] * c;
  et[209] = et[98] * g;
  et[210] = et[208] + et[209];
  et[211] = et[210] * e;
  et[212] = et[1] * c;
  et[213] = et[16] * j;
  et[214] = et[73] * k;
  et[215] = et[213] + et[214];
  et[216] = et[212] + et[215];
  et[217] = et[216] * b;
  et[218] = et[211] + et[217];
  et[219] = et[218] * j;
  et[220] = et[207] + et[219];
  et[221] = 8.0 * et[220];
  et[222] = et[32] * j;
  et[223] = -1.0 * et[222] * b;
  et[224] = et[4] * k;
  et[225] = -1.0 * et[224] * e;
  et[226] = et[223] + et[225];
  et[227] = 12.0 * et[226];
  et[228] = et[221] + et[227];
  et[229] = et[200] + et[228];
  et[230] = et[229] * b;
  et[231] = 8.0 * et[215];
  et[232] = 4.0 * et[105];
  et[233] = et[231] + et[232];
  et[234] = et[233] * j;
  et[235] = -12.0 * et[69];
  et[236] = et[71] * k;
  et[237] = et[1] * j;
  et[238] = et[236] + et[237];
  et[239] = 8.0 * et[238];
  et[240] = et[235] + et[239];
  et[241] = et[165] + et[240];
  et[242] = et[241] * c;
  et[243] = et[234] + et[242];
  et[244] = et[243] * e;
  et[245] = et[244] * e;
  et[246] = 80.0 * et[102];
  et[247] = et[246] * d;
  et[248] = et[245] + et[247];
  et[249] = et[230] + et[248];
  et[250] = et[190] + et[249];
  et[251] = et[250] * b;
  et[252] = et[182] + et[251];
  et[253] = et[252] * e;
  et[254] = et[147] + et[253];
  et[255] = et[254] * e;
  et[256] = et[255] * e;
  et[257] = et[256] * e;
  ////////////////////////////////////
  et[258] = 96.0 * et[117];
  et[259] = 48.0 * et[126];
  et[260] = 24.0 * et[89];
  et[261] = 192.0 * et[79];
  et[262] = et[260] + et[261];
  et[263] = et[259] + et[262];
  et[264] = et[258] + et[263];
  et[265] = et[264] * d;
  et[266] = et[265] * d;
  et[267] = et[266] * b;
  et[268] = et[267] * b;
  et[269] = 128.0 * et[117];
  et[270] = 64.0 * et[126];
  et[271] = 32.0 * et[89];
  et[272] = 256.0 * et[79];
  et[273] = et[271] + et[272];
  et[274] = et[270] + et[273];
  et[275] = et[269] + et[274];
  et[276] = et[275] * a;
  et[277] = 64.0 * et[215];
  et[278] = 32.0 * et[105];
  et[279] = et[277] + et[278];
  et[280] = et[279] * j;
  et[281] = 32.0 * et[164];
  et[282] = -96.0 * et[69];
  et[283] = 64.0 * et[238];
  et[284] = et[282] + et[283];
  et[285] = et[281] + et[284];
  et[286] = et[285] * c;
  et[287] = et[280] + et[286];
  et[288] = et[287] * b;
  et[289] = et[288] * b;
  et[290] = et[102] * d;
  et[291] = 320.0 * et[290];
  et[292] = et[289] + et[291];
  et[293] = et[276] + et[292];
  et[294] = et[293] * d;
  et[295] = et[294] * b;
  et[296] = 40.0 * et[215];
  et[297] = 20.0 * et[105];
  et[298] = et[296] + et[297];
  et[299] = et[298] * j;
  et[300] = 20.0 * et[164];
  et[301] = -60.0 * et[69];
  et[302] = 40.0 * et[238];
  et[303] = et[301] + et[302];
  et[304] = et[300] + et[303];
  et[305] = et[304] * c;
  et[306] = et[299] + et[305];
  et[307] = et[306] * b;
  et[308] = et[32] + et[50];
  et[309] = 16.0 * et[308];
  et[310] = 32.0 * et[170];
  et[311] = -48.0 * et[66];
  et[312] = 8.0 * et[6];
  et[313] = et[311] + et[312];
  et[314] = et[310] + et[313];
  et[315] = et[309] + et[314];
  et[316] = et[315] * f;
  et[317] = et[33] + et[9];
  et[318] = 16.0 * et[317];
  et[319] = -8.0 * et[6];
  et[320] = 32.0 * et[159];
  et[321] = et[319] + et[320];
  et[322] = et[318] + et[321];
  et[323] = et[322] * k;
  et[324] = et[316] + et[323];
  et[325] = et[324] * e;
  et[326] = et[307] + et[325];
  et[327] = et[326] * b;
  et[328] = 160.0 * et[100];
  et[329] = et[328] * i;
  et[330] = et[329] * i;
  et[331] = et[330] * d;
  et[332] = 4.0 * et[308];
  et[333] = -1.0 * et[69];
  et[334] = et[6] + et[333];
  et[335] = 12.0 * et[334];
  et[336] = et[239] + et[335];
  et[337] = et[332] + et[336];
  et[338] = et[337] * c;
  et[339] = et[5] + et[9];
  et[340] = 4.0 * et[339];
  et[341] = -12.0 * et[6];
  et[342] = et[341] + et[231];
  et[343] = et[340] + et[342];
  et[344] = et[343] * j;
  et[345] = et[338] + et[344];
  et[346] = et[345] * e;
  et[347] = et[346] * e;
  et[348] = et[331] + et[347];
  et[349] = et[327] + et[348];
  et[350] = et[190] + et[349];
  et[351] = et[350] * a;
  et[352] = 240.0 * et[47];
  et[353] = 120.0 * et[64];
  et[354] = 60.0 * et[89];
  et[355] = 480.0 * et[79];
  et[356] = et[354] + et[355];
  et[357] = et[353] + et[356];
  et[358] = et[352] + et[357];
  et[359] = et[358] * d;
  et[360] = 104.0 * et[159];
  et[361] = 52.0 * et[35];
  et[362] = et[360] + et[361];
  et[363] = et[362] * k;
  et[364] = 52.0 * et[164];
  et[365] = -156.0 * et[66];
  et[366] = 104.0 * et[170];
  et[367] = et[365] + et[366];
  et[368] = et[364] + et[367];
  et[369] = et[368] * f;
  et[370] = et[363] + et[369];
  et[371] = et[370] * e;
  et[372] = et[371] * e;
  et[373] = 36.0 * et[308];
  et[374] = 72.0 * et[170];
  et[375] = -108.0 * et[66];
  et[376] = 44.0 * et[6];
  et[377] = et[375] + et[376];
  et[378] = et[374] + et[377];
  et[379] = et[373] + et[378];
  et[380] = et[379] * f;
  et[381] = 36.0 * et[317];
  et[382] = -44.0 * et[6];
  et[383] = 72.0 * et[159];
  et[384] = et[382] + et[383];
  et[385] = et[381] + et[384];
  et[386] = et[385] * k;
  et[387] = et[380] + et[386];
  et[388] = et[387] * b;
  et[389] = 48.0 * et[308];
  et[390] = 96.0 * et[238];
  et[391] = -144.0 * et[69];
  et[392] = 40.0 * et[6];
  et[393] = et[391] + et[392];
  et[394] = et[390] + et[393];
  et[395] = et[389] + et[394];
  et[396] = et[395] * c;
  et[397] = 48.0 * et[339];
  et[398] = -40.0 * et[6];
  et[399] = 96.0 * et[215];
  et[400] = et[398] + et[399];
  et[401] = et[397] + et[400];
  et[402] = et[401] * j;
  et[403] = et[396] + et[402];
  et[404] = et[403] * e;
  et[405] = et[388] + et[404];
  et[406] = et[405] * b;
  et[407] = et[372] + et[406];
  et[408] = et[359] + et[407];
  et[409] = et[408] * d;
  et[410] = et[49] + et[41];
  et[411] = 2.0 * et[410];
  et[412] = 6.0 * f;
  et[413] = -12.0 * k;
  et[414] = et[412] + et[413];
  et[415] = et[414] * f;
  et[416] = 4.0 * et[170];
  et[417] = et[415] + et[416];
  et[418] = et[411] + et[417];
  et[419] = et[418] * e;
  et[420] = et[419] * e;
  et[421] = et[420] * e;
  et[422] = et[421] * e;
  et[423] = 8.0 * et[100];
  et[424] = et[423] * e;
  et[425] = et[424] * e;
  et[426] = et[425] * e;
  et[427] = 2.0 * et[119];
  et[428] = 6.0 * c;
  et[429] = -12.0 * j;
  et[430] = et[428] + et[429];
  et[431] = et[430] * c;
  et[432] = 4.0 * et[238];
  et[433] = et[431] + et[432];
  et[434] = et[427] + et[433];
  et[435] = et[434] * b;
  et[436] = et[435] * b;
  et[437] = et[423] * b;
  et[438] = j * j;
  et[439] = k * k;
  et[440] = et[438] + et[439];
  et[441] = et[6] + et[440];
  et[442] = et[49] + et[441];
  et[443] = 4.0 * et[442];
  et[444] = g * j;
  et[445] = h * k;
  et[446] = et[32] + et[445];
  et[447] = et[4] + et[446];
  et[448] = et[444] + et[447];
  et[449] = 8.0 * et[448];
  et[450] = -1.0 * et[66];
  et[451] = et[333] + et[450];
  et[452] = 16.0 * et[451];
  et[453] = et[449] + et[452];
  et[454] = et[443] + et[453];
  et[455] = et[454] * e;
  et[456] = et[437] + et[455];
  et[457] = et[456] * e;
  et[458] = et[436] + et[457];
  et[459] = et[458] * b;
  et[460] = et[426] + et[459];
  et[461] = et[460] * b;
  et[462] = et[422] + et[461];
  et[463] = et[409] + et[462];
  et[464] = et[351] + et[463];
  et[465] = et[464] * e;
  et[466] = et[295] + et[465];
  et[467] = et[466] * e;
  et[468] = et[268] + et[467];
  et[469] = et[468] * e;
  et[470] = et[469] * e;
  ////////////////////////////////////
  et[471] = et[275] * d;
  et[472] = et[471] * d;
  et[473] = et[472] * d;
  et[474] = et[473] * b;
  et[475] = et[474] * b;
  et[476] = 384.0 * et[117];
  et[477] = 192.0 * et[126];
  et[478] = 96.0 * et[89];
  et[479] = 768.0 * et[79];
  et[480] = et[478] + et[479];
  et[481] = et[477] + et[480];
  et[482] = et[476] + et[481];
  et[483] = et[482] * a;
  et[484] = 192.0 * et[215];
  et[485] = 96.0 * et[105];
  et[486] = et[484] + et[485];
  et[487] = et[486] * j;
  et[488] = 96.0 * et[164];
  et[489] = -288.0 * et[69];
  et[490] = 192.0 * et[238];
  et[491] = et[489] + et[490];
  et[492] = et[488] + et[491];
  et[493] = et[492] * c;
  et[494] = et[487] + et[493];
  et[495] = et[494] * b;
  et[496] = et[495] * b;
  et[497] = 640.0 * et[290];
  et[498] = et[496] + et[497];
  et[499] = et[483] + et[498];
  et[500] = et[499] * d;
  et[501] = et[500] * d;
  et[502] = et[501] * b;
  et[503] = et[320] + et[318];
  et[504] = et[503] * k;
  et[505] = et[311] + et[310];
  et[506] = et[309] + et[505];
  et[507] = et[506] * f;
  et[508] = et[504] + et[507];
  et[509] = et[508] * a;
  et[510] = et[425] + et[509];
  et[511] = et[510] * e;
  et[512] = 64.0 * et[216];
  et[513] = -96.0 * et[32];
  et[514] = et[513] + et[278];
  et[515] = et[512] + et[514];
  et[516] = et[515] * a;
  et[517] = -40.0 * c;
  et[518] = 24.0 * g;
  et[519] = 8.0 * j;
  et[520] = et[517] + et[518] + et[519];
  et[521] = et[520] * e;
  et[522] = et[521] * e;
  et[523] = 40.0 * et[95];
  et[524] = et[523] * e;
  et[525] = 24.0 * et[1];
  et[526] = -72.0 * c;
  et[527] = et[525] + et[526];
  et[528] = et[527] * b;
  et[529] = et[524] + et[528];
  et[530] = et[529] * b;
  et[531] = et[522] + et[530];
  et[532] = et[516] + et[531];
  et[533] = et[532] * j;
  et[534] = 64.0 * et[71];
  et[535] = et[534] * k;
  et[536] = et[535] + et[281];
  et[537] = et[536] * a;
  et[538] = 40.0 * et[98];
  et[539] = et[538] * e;
  et[540] = b * c;
  et[541] = 36.0 * et[540];
  et[542] = et[539] + et[541];
  et[543] = et[542] * b;
  et[544] = e * e;
  et[545] = et[544] * c;
  et[546] = 20.0 * et[545];
  et[547] = et[543] + et[546];
  et[548] = et[537] + et[547];
  et[549] = et[548] * c;
  et[550] = et[54] * e;
  et[551] = et[550] * e;
  et[552] = et[119] * b;
  et[553] = et[552] * b;
  et[554] = et[551] + et[553];
  et[555] = 12.0 * et[554];
  et[556] = -56.0 * f;
  et[557] = 16.0 * k;
  et[558] = et[556] + et[557];
  et[559] = et[558] * e;
  et[560] = et[559] * e;
  et[561] = et[71] * b;
  et[562] = et[561] * b;
  et[563] = et[544] * h;
  et[564] = et[562] + et[563];
  et[565] = 24.0 * et[564];
  et[566] = et[560] + et[565];
  et[567] = et[566] * k;
  et[568] = 28.0 * et[544] * et[4];
  et[569] = et[567] + et[568];
  et[570] = et[555] + et[569];
  et[571] = et[549] + et[570];
  et[572] = et[533] + et[571];
  et[573] = et[572] * b;
  et[574] = et[511] + et[573];
  et[575] = et[574] * a;
  et[576] = 8.0 * et[98];
  et[577] = et[576] * e;
  et[578] = et[577] * e;
  et[579] = et[578] * e;
  et[580] = -1.0 * j;
  et[581] = et[580] + c;
  et[582] = 8.0 * et[581];
  et[583] = et[582] * e;
  et[584] = et[583] * e;
  et[585] = et[581] * b;
  et[586] = et[98] * e;
  et[587] = et[585] + et[586];
  et[588] = 4.0 * et[587];
  et[589] = et[588] * b;
  et[590] = et[584] + et[589];
  et[591] = et[590] * b;
  et[592] = et[579] + et[591];
  et[593] = et[592] * b;
  et[594] = et[581] * e;
  et[595] = et[594] * e;
  et[596] = et[595] * e;
  et[597] = et[596] * e;
  et[598] = 4.0 * et[597];
  et[599] = et[593] + et[598];
  et[600] = et[599] * b;
  et[601] = et[586] * e;
  et[602] = et[601] * e;
  et[603] = et[602] * e;
  et[604] = et[603] * e;
  et[605] = 4.0 * et[604];
  et[606] = et[600] + et[605];
  et[607] = et[575] + et[606];
  et[608] = et[607] * e;
  et[609] = 320.0 * et[215];
  et[610] = 160.0 * et[105];
  et[611] = et[609] + et[610];
  et[612] = et[611] * j;
  et[613] = 160.0 * et[164];
  et[614] = -480.0 * et[69];
  et[615] = 320.0 * et[238];
  et[616] = et[614] + et[615];
  et[617] = et[613] + et[616];
  et[618] = et[617] * c;
  et[619] = et[612] + et[618];
  et[620] = et[619] * b;
  et[621] = 144.0 * et[308];
  et[622] = 288.0 * et[170];
  et[623] = -432.0 * et[66];
  et[624] = 96.0 * et[6];
  et[625] = et[623] + et[624];
  et[626] = et[622] + et[625];
  et[627] = et[621] + et[626];
  et[628] = et[627] * f;
  et[629] = 144.0 * et[317];
  et[630] = -96.0 * et[6];
  et[631] = 288.0 * et[159];
  et[632] = et[630] + et[631];
  et[633] = et[629] + et[632];
  et[634] = et[633] * k;
  et[635] = et[628] + et[634];
  et[636] = et[635] * e;
  et[637] = et[620] + et[636];
  et[638] = et[637] * b;
  et[639] = 128.0 * et[6];
  et[640] = et[391] + et[639];
  et[641] = et[390] + et[640];
  et[642] = et[389] + et[641];
  et[643] = et[642] * c;
  et[644] = -128.0 * et[6];
  et[645] = et[644] + et[399];
  et[646] = et[397] + et[645];
  et[647] = et[646] * j;
  et[648] = et[643] + et[647];
  et[649] = et[648] * e;
  et[650] = et[649] * e;
  et[651] = et[650] + et[497];
  et[652] = et[638] + et[651];
  et[653] = et[276] + et[652];
  et[654] = et[653] * a;
  et[655] = 640.0 * et[47];
  et[656] = 320.0 * et[64];
  et[657] = 160.0 * et[89];
  et[658] = 1280.0 * et[79];
  et[659] = et[657] + et[658];
  et[660] = et[656] + et[659];
  et[661] = et[655] + et[660];
  et[662] = et[661] * d;
  et[663] = 576.0 * et[159];
  et[664] = 288.0 * et[35];
  et[665] = et[663] + et[664];
  et[666] = et[665] * k;
  et[667] = 288.0 * et[164];
  et[668] = -864.0 * et[66];
  et[669] = 576.0 * et[170];
  et[670] = et[668] + et[669];
  et[671] = et[667] + et[670];
  et[672] = et[671] * f;
  et[673] = et[666] + et[672];
  et[674] = et[673] * e;
  et[675] = et[674] * e;
  et[676] = 480.0 * et[215];
  et[677] = -160.0 * et[6];
  et[678] = 240.0 * et[339];
  et[679] = et[677] + et[678];
  et[680] = et[676] + et[679];
  et[681] = et[680] * j;
  et[682] = 480.0 * et[238];
  et[683] = 240.0 * et[308];
  et[684] = -720.0 * et[69];
  et[685] = 160.0 * et[6];
  et[686] = et[684] + et[685];
  et[687] = et[683] + et[686];
  et[688] = et[682] + et[687];
  et[689] = et[688] * c;
  et[690] = et[681] + et[689];
  et[691] = et[690] * e;
  et[692] = 256.0 * et[159];
  et[693] = -192.0 * et[6];
  et[694] = 128.0 * et[317];
  et[695] = et[693] + et[694];
  et[696] = et[692] + et[695];
  et[697] = et[696] * k;
  et[698] = 256.0 * et[170];
  et[699] = 128.0 * et[308];
  et[700] = -384.0 * et[66];
  et[701] = 192.0 * et[6];
  et[702] = et[700] + et[701];
  et[703] = et[699] + et[702];
  et[704] = et[698] + et[703];
  et[705] = et[704] * f;
  et[706] = et[697] + et[705];
  et[707] = et[706] * b;
  et[708] = et[691] + et[707];
  et[709] = et[708] * b;
  et[710] = et[675] + et[709];
  et[711] = et[662] + et[710];
  et[712] = et[711] * d;
  et[713] = 56.0 * et[170];
  et[714] = 84.0 * f;
  et[715] = -168.0 * k;
  et[716] = et[714] + et[715];
  et[717] = et[716] * f;
  et[718] = 28.0 * et[410];
  et[719] = et[717] + et[718];
  et[720] = et[713] + et[719];
  et[721] = et[720] * e;
  et[722] = et[721] * e;
  et[723] = et[722] * e;
  et[724] = et[723] * e;
  et[725] = 16.0 * et[119];
  et[726] = 48.0 * c;
  et[727] = -96.0 * j;
  et[728] = et[726] + et[727];
  et[729] = et[728] * c;
  et[730] = 32.0 * et[238];
  et[731] = et[729] + et[730];
  et[732] = et[725] + et[731];
  et[733] = et[732] * b;
  et[734] = et[733] * b;
  et[735] = 72.0 * et[100];
  et[736] = et[735] * b;
  et[737] = 44.0 * et[54];
  et[738] = -184.0 * c;
  et[739] = 88.0 * g;
  et[740] = 48.0 * j;
  et[741] = et[738] + et[739] + et[740];
  et[742] = et[741] * j;
  et[743] = -168.0 * f;
  et[744] = 88.0 * h;
  et[745] = 40.0 * k;
  et[746] = et[743] + et[744] + et[745];
  et[747] = et[746] * k;
  et[748] = 92.0 * et[32];
  et[749] = 84.0 * et[4];
  et[750] = et[748] + et[749];
  et[751] = et[747] + et[750];
  et[752] = et[742] + et[751];
  et[753] = et[737] + et[752];
  et[754] = et[753] * e;
  et[755] = et[736] + et[754];
  et[756] = et[755] * e;
  et[757] = et[734] + et[756];
  et[758] = et[757] * b;
  et[759] = et[100] * e;
  et[760] = et[759] * e;
  et[761] = et[760] * e;
  et[762] = 104.0 * et[761];
  et[763] = et[758] + et[762];
  et[764] = et[763] * b;
  et[765] = et[724] + et[764];
  et[766] = et[712] + et[765];
  et[767] = et[654] + et[766];
  et[768] = et[767] * d;
  et[769] = et[608] + et[768];
  et[770] = et[769] * e;
  et[771] = et[502] + et[770];
  et[772] = et[771] * e;
  et[773] = et[475] + et[772];
  et[774] = et[773] * e;
  ////////////////////////////////////
  et[775] = 64.0 * et[117];
  et[776] = 32.0 * et[126];
  et[777] = 16.0 * et[89];
  et[778] = 128.0 * et[79];
  et[779] = et[777] + et[778];
  et[780] = et[776] + et[779];
  et[781] = et[775] + et[780];
  et[782] = et[781] * d;
  et[783] = et[782] * d;
  et[784] = et[783] * d;
  et[785] = et[784] * d;
  et[786] = et[785] * b;
  et[787] = et[786] * b;
  et[788] = 32.0 * et[216];
  et[789] = -48.0 * et[32];
  et[790] = 16.0 * et[105];
  et[791] = et[789] + et[790];
  et[792] = et[788] + et[791];
  et[793] = et[792] * a;
  et[794] = -28.0 * c;
  et[795] = 20.0 * g;
  et[796] = 4.0 * j;
  et[797] = et[794] + et[795] + et[796];
  et[798] = et[797] * e;
  et[799] = et[798] * e;
  et[800] = 64.0 * et[95];
  et[801] = et[800] * e;
  et[802] = 52.0 * et[1];
  et[803] = -156.0 * c;
  et[804] = et[802] + et[803];
  et[805] = et[804] * b;
  et[806] = et[801] + et[805];
  et[807] = et[806] * b;
  et[808] = et[799] + et[807];
  et[809] = et[793] + et[808];
  et[810] = et[809] * j;
  et[811] = 32.0 * et[71];
  et[812] = et[811] * k;
  et[813] = 16.0 * et[164];
  et[814] = et[812] + et[813];
  et[815] = et[814] * a;
  et[816] = 64.0 * et[98];
  et[817] = et[816] * e;
  et[818] = 78.0 * et[540];
  et[819] = et[817] + et[818];
  et[820] = et[819] * b;
  et[821] = 14.0 * et[545];
  et[822] = et[820] + et[821];
  et[823] = et[815] + et[822];
  et[824] = et[823] * c;
  et[825] = 52.0 * et[71];
  et[826] = et[825] * k;
  et[827] = 26.0 * et[119];
  et[828] = et[826] + et[827];
  et[829] = et[828] * b;
  et[830] = et[829] * b;
  et[831] = -52.0 * f;
  et[832] = 20.0 * h;
  et[833] = et[831] + et[832] + et[557];
  et[834] = et[833] * k;
  et[835] = 10.0 * et[49];
  et[836] = 26.0 * et[4];
  et[837] = 6.0 * et[6];
  et[838] = et[836] + et[837];
  et[839] = et[835] + et[838];
  et[840] = et[834] + et[839];
  et[841] = et[840] * e;
  et[842] = et[841] * e;
  et[843] = et[830] + et[842];
  et[844] = et[824] + et[843];
  et[845] = et[810] + et[844];
  et[846] = et[845] * a;
  et[847] = 32.0 * et[581];
  et[848] = et[847] * e;
  et[849] = et[848] * e;
  et[850] = 28.0 * et[581];
  et[851] = et[850] * b;
  et[852] = 24.0 * et[586];
  et[853] = et[851] + et[852];
  et[854] = et[853] * b;
  et[855] = et[849] + et[854];
  et[856] = et[855] * b;
  et[857] = 24.0 * et[602];
  et[858] = et[856] + et[857];
  et[859] = et[858] * b;
  et[860] = et[859] + et[598];
  et[861] = et[846] + et[860];
  et[862] = et[861] * a;
  et[863] = et[544] * et[544];
  et[864] = et[863] * et[544];
  et[865] = b * b;
  et[866] = 3.0 * et[544];
  et[867] = et[865] + et[866];
  et[868] = et[867] * b;
  et[869] = et[868] * b;
  et[870] = 3.0 * et[863];
  et[871] = et[869] + et[870];
  et[872] = et[871] * b;
  et[873] = et[872] * b;
  et[874] = et[864] + et[873];
  et[875] = et[862] + et[874];
  et[876] = et[875] * e;
  et[877] = et[876] * e;
  et[878] = et[877] * e;
  et[879] = 512.0 * et[117];
  et[880] = 256.0 * et[126];
  et[881] = 128.0 * et[89];
  et[882] = 1024.0 * et[79];
  et[883] = et[881] + et[882];
  et[884] = et[880] + et[883];
  et[885] = et[879] + et[884];
  et[886] = et[885] * a;
  et[887] = 256.0 * et[215];
  et[888] = 128.0 * et[105];
  et[889] = et[887] + et[888];
  et[890] = et[889] * j;
  et[891] = 128.0 * et[164];
  et[892] = -384.0 * et[69];
  et[893] = 256.0 * et[238];
  et[894] = et[892] + et[893];
  et[895] = et[891] + et[894];
  et[896] = et[895] * c;
  et[897] = et[890] + et[896];
  et[898] = et[897] * b;
  et[899] = et[898] * b;
  et[900] = et[899] + et[497];
  et[901] = et[886] + et[900];
  et[902] = et[901] * d;
  et[903] = et[902] * d;
  et[904] = et[903] * b;
  et[905] = 512.0 * et[216];
  et[906] = -768.0 * et[32];
  et[907] = 256.0 * et[105];
  et[908] = et[906] + et[907];
  et[909] = et[905] + et[908];
  et[910] = et[909] * a;
  et[911] = -448.0 * c;
  et[912] = 256.0 * g;
  et[913] = 96.0 * j;
  et[914] = et[911] + et[912] + et[913];
  et[915] = et[914] * e;
  et[916] = et[915] * e;
  et[917] = 360.0 * et[95];
  et[918] = et[917] * e;
  et[919] = 192.0 * et[1];
  et[920] = -576.0 * c;
  et[921] = et[919] + et[920];
  et[922] = et[921] * b;
  et[923] = et[918] + et[922];
  et[924] = et[923] * b;
  et[925] = et[916] + et[924];
  et[926] = et[910] + et[925];
  et[927] = et[926] * j;
  et[928] = 512.0 * et[236];
  et[929] = 256.0 * et[164];
  et[930] = et[928] + et[929];
  et[931] = et[930] * a;
  et[932] = 360.0 * et[98];
  et[933] = et[932] * e;
  et[934] = 288.0 * et[540];
  et[935] = et[933] + et[934];
  et[936] = et[935] * b;
  et[937] = 224.0 * et[545];
  et[938] = et[936] + et[937];
  et[939] = et[931] + et[938];
  et[940] = et[939] * c;
  et[941] = -576.0 * f;
  et[942] = 256.0 * h;
  et[943] = 160.0 * k;
  et[944] = et[941] + et[942] + et[943];
  et[945] = et[944] * k;
  et[946] = 128.0 * et[49];
  et[947] = 288.0 * et[4];
  et[948] = 136.0 * et[6];
  et[949] = et[947] + et[948];
  et[950] = et[946] + et[949];
  et[951] = et[945] + et[950];
  et[952] = et[951] * e;
  et[953] = et[952] * e;
  et[954] = 192.0 * et[236];
  et[955] = 96.0 * et[119];
  et[956] = et[954] + et[955];
  et[957] = et[956] * b;
  et[958] = et[957] * b;
  et[959] = et[953] + et[958];
  et[960] = et[940] + et[959];
  et[961] = et[927] + et[960];
  et[962] = et[961] * b;
  et[963] = 16.0 * et[6];
  et[964] = et[623] + et[963];
  et[965] = et[622] + et[964];
  et[966] = et[621] + et[965];
  et[967] = et[966] * f;
  et[968] = -16.0 * et[6];
  et[969] = et[968] + et[631];
  et[970] = et[629] + et[969];
  et[971] = et[970] * k;
  et[972] = et[967] + et[971];
  et[973] = et[972] * a;
  et[974] = 104.0 * et[760];
  et[975] = et[973] + et[974];
  et[976] = et[975] * e;
  et[977] = et[962] + et[976];
  et[978] = et[977] * a;
  et[979] = 60.0 * et[98];
  et[980] = et[979] * e;
  et[981] = et[980] * e;
  et[982] = et[981] * e;
  et[983] = et[982] * e;
  et[984] = et[983] * e;
  et[985] = 96.0 * et[98];
  et[986] = et[985] * e;
  et[987] = et[986] * e;
  et[988] = et[987] * e;
  et[989] = et[847] * b;
  et[990] = 36.0 * et[586];
  et[991] = et[989] + et[990];
  et[992] = et[991] * b;
  et[993] = 88.0 * et[595];
  et[994] = et[992] + et[993];
  et[995] = et[994] * b;
  et[996] = et[988] + et[995];
  et[997] = et[996] * b;
  et[998] = 56.0 * et[597];
  et[999] = et[997] + et[998];
  et[1000] = et[999] * b;
  et[1001] = et[984] + et[1000];
  et[1002] = et[978] + et[1001];
  et[1003] = et[1002] * e;
  et[1004] = 960.0 * et[215];
  et[1005] = 480.0 * et[105];
  et[1006] = et[1004] + et[1005];
  et[1007] = et[1006] * j;
  et[1008] = 480.0 * et[164];
  et[1009] = -1440.0 * et[69];
  et[1010] = 960.0 * et[238];
  et[1011] = et[1009] + et[1010];
  et[1012] = et[1008] + et[1011];
  et[1013] = et[1012] * c;
  et[1014] = et[1007] + et[1013];
  et[1015] = et[1014] * b;
  et[1016] = 512.0 * et[308];
  et[1017] = 1024.0 * et[170];
  et[1018] = -1536.0 * et[66];
  et[1019] = 448.0 * et[6];
  et[1020] = et[1018] + et[1019];
  et[1021] = et[1017] + et[1020];
  et[1022] = et[1016] + et[1021];
  et[1023] = et[1022] * f;
  et[1024] = 512.0 * et[317];
  et[1025] = -448.0 * et[6];
  et[1026] = 1024.0 * et[159];
  et[1027] = et[1025] + et[1026];
  et[1028] = et[1024] + et[1027];
  et[1029] = et[1028] * k;
  et[1030] = et[1023] + et[1029];
  et[1031] = et[1030] * e;
  et[1032] = et[1015] + et[1031];
  et[1033] = et[1032] * b;
  et[1034] = 1280.0 * et[100];
  et[1035] = et[1034] * i;
  et[1036] = et[1035] * i;
  et[1037] = et[1036] * d;
  et[1038] = -560.0 * et[6];
  et[1039] = et[1038] + et[678];
  et[1040] = et[676] + et[1039];
  et[1041] = et[1040] * j;
  et[1042] = 560.0 * et[6];
  et[1043] = et[684] + et[1042];
  et[1044] = et[683] + et[1043];
  et[1045] = et[682] + et[1044];
  et[1046] = et[1045] * c;
  et[1047] = et[1041] + et[1046];
  et[1048] = et[1047] * e;
  et[1049] = et[1048] * e;
  et[1050] = et[1037] + et[1049];
  et[1051] = et[1033] + et[1050];
  et[1052] = et[483] + et[1051];
  et[1053] = et[1052] * a;
  et[1054] = 960.0 * et[47];
  et[1055] = 480.0 * et[64];
  et[1056] = 240.0 * et[89];
  et[1057] = 1920.0 * et[79];
  et[1058] = et[1056] + et[1057];
  et[1059] = et[1055] + et[1058];
  et[1060] = et[1054] + et[1059];
  et[1061] = et[1060] * d;
  et[1062] = 1760.0 * et[159];
  et[1063] = 880.0 * et[35];
  et[1064] = et[1062] + et[1063];
  et[1065] = et[1064] * k;
  et[1066] = 880.0 * et[164];
  et[1067] = -2640.0 * et[66];
  et[1068] = 1760.0 * et[170];
  et[1069] = et[1067] + et[1068];
  et[1070] = et[1066] + et[1069];
  et[1071] = et[1070] * f;
  et[1072] = et[1065] + et[1071];
  et[1073] = et[1072] * e;
  et[1074] = et[1073] * e;
  et[1075] = 224.0 * et[308];
  et[1076] = 448.0 * et[170];
  et[1077] = -672.0 * et[66];
  et[1078] = 416.0 * et[6];
  et[1079] = et[1077] + et[1078];
  et[1080] = et[1076] + et[1079];
  et[1081] = et[1075] + et[1080];
  et[1082] = et[1081] * f;
  et[1083] = 224.0 * et[317];
  et[1084] = -416.0 * et[6];
  et[1085] = 448.0 * et[159];
  et[1086] = et[1084] + et[1085];
  et[1087] = et[1083] + et[1086];
  et[1088] = et[1087] * k;
  et[1089] = et[1082] + et[1088];
  et[1090] = et[1089] * b;
  et[1091] = 640.0 * et[308];
  et[1092] = 1280.0 * et[238];
  et[1093] = -1920.0 * et[69];
  et[1094] = 320.0 * et[6];
  et[1095] = et[1093] + et[1094];
  et[1096] = et[1092] + et[1095];
  et[1097] = et[1091] + et[1096];
  et[1098] = et[1097] * c;
  et[1099] = 640.0 * et[339];
  et[1100] = -320.0 * et[6];
  et[1101] = 1280.0 * et[215];
  et[1102] = et[1100] + et[1101];
  et[1103] = et[1099] + et[1102];
  et[1104] = et[1103] * j;
  et[1105] = et[1098] + et[1104];
  et[1106] = et[1105] * e;
  et[1107] = et[1090] + et[1106];
  et[1108] = et[1107] * b;
  et[1109] = et[1074] + et[1108];
  et[1110] = et[1061] + et[1109];
  et[1111] = et[1110] * d;
  et[1112] = 170.0 * et[410];
  et[1113] = 510.0 * f;
  et[1114] = -1020.0 * k;
  et[1115] = et[1113] + et[1114];
  et[1116] = et[1115] * f;
  et[1117] = 340.0 * et[170];
  et[1118] = et[1116] + et[1117];
  et[1119] = et[1112] + et[1118];
  et[1120] = et[1119] * e;
  et[1121] = et[1120] * e;
  et[1122] = et[1121] * e;
  et[1123] = et[1122] * e;
  et[1124] = 48.0 * et[119];
  et[1125] = 144.0 * c;
  et[1126] = -288.0 * j;
  et[1127] = et[1125] + et[1126];
  et[1128] = et[1127] * c;
  et[1129] = et[1128] + et[390];
  et[1130] = et[1124] + et[1129];
  et[1131] = et[1130] * b;
  et[1132] = et[1131] * b;
  et[1133] = 256.0 * et[100];
  et[1134] = et[1133] * b;
  et[1135] = -884.0 * c;
  et[1136] = 404.0 * g;
  et[1137] = 240.0 * j;
  et[1138] = et[1135] + et[1136] + et[1137];
  et[1139] = et[1138] * j;
  et[1140] = -732.0 * f;
  et[1141] = 404.0 * h;
  et[1142] = 164.0 * k;
  et[1143] = et[1140] + et[1141] + et[1142];
  et[1144] = et[1143] * k;
  et[1145] = 202.0 * et[49];
  et[1146] = 442.0 * et[32];
  et[1147] = 366.0 * et[4];
  et[1148] = 198.0 * et[6];
  et[1149] = et[1146] + et[1147] + et[1148];
  et[1150] = et[1145] + et[1149];
  et[1151] = et[1144] + et[1150];
  et[1152] = et[1139] + et[1151];
  et[1153] = et[1152] * e;
  et[1154] = et[1134] + et[1153];
  et[1155] = et[1154] * e;
  et[1156] = et[1132] + et[1155];
  et[1157] = et[1156] * b;
  et[1158] = 576.0 * et[761];
  et[1159] = et[1157] + et[1158];
  et[1160] = et[1159] * b;
  et[1161] = et[1123] + et[1160];
  et[1162] = et[1111] + et[1161];
  et[1163] = et[1053] + et[1162];
  et[1164] = et[1163] * d;
  et[1165] = et[1003] + et[1164];
  et[1166] = et[1165] * e;
  et[1167] = et[904] + et[1166];
  et[1168] = et[1167] * d;
  et[1169] = et[878] + et[1168];
  et[1170] = et[1169] * e;
  et[1171] = et[787] + et[1170];
  ////////////////////////////////////
  et[1172] = 8.0 * et[865];
  et[1173] = 16.0 * et[544];
  et[1174] = et[1172] + et[1173];
  et[1175] = et[1174] * b;
  et[1176] = et[1175] * b;
  et[1177] = 8.0 * et[863];
  et[1178] = et[1176] + et[1177];
  et[1179] = et[1178] * b;
  et[1180] = 20.0 * et[98];
  et[1181] = et[1180] * e;
  et[1182] = et[1181] * e;
  et[1183] = 32.0 * et[100];
  et[1184] = et[1183] * a;
  et[1185] = et[1182] + et[1184];
  et[1186] = et[1185] * e;
  et[1187] = 24.0 * et[119];
  et[1188] = 72.0 * c;
  et[1189] = -144.0 * j;
  et[1190] = et[1188] + et[1189];
  et[1191] = et[1190] * c;
  et[1192] = 48.0 * et[238];
  et[1193] = et[1191] + et[1192];
  et[1194] = et[1187] + et[1193];
  et[1195] = et[1194] * a;
  et[1196] = 76.0 * et[581];
  et[1197] = et[1196] * b;
  et[1198] = 52.0 * et[98];
  et[1199] = et[1198] * e;
  et[1200] = et[1197] + et[1199];
  et[1201] = et[1200] * b;
  et[1202] = 44.0 * et[595];
  et[1203] = et[1201] + et[1202];
  et[1204] = et[1195] + et[1203];
  et[1205] = et[1204] * b;
  et[1206] = et[1186] + et[1205];
  et[1207] = et[1206] * a;
  et[1208] = et[1179] + et[1207];
  et[1209] = et[1208] * e;
  et[1210] = et[1209] * e;
  et[1211] = et[1210] * e;
  et[1212] = et[1211] * e;
  et[1213] = et[1212] * a;
  et[1214] = 256.0 * et[216];
  et[1215] = -384.0 * et[32];
  et[1216] = et[1215] + et[888];
  et[1217] = et[1214] + et[1216];
  et[1218] = et[1217] * a;
  et[1219] = -304.0 * c;
  et[1220] = 208.0 * g;
  et[1221] = et[1219] + et[1220] + et[740];
  et[1222] = et[1221] * e;
  et[1223] = et[1222] * e;
  et[1224] = 416.0 * et[1];
  et[1225] = -1248.0 * c;
  et[1226] = et[1224] + et[1225];
  et[1227] = et[1226] * b;
  et[1228] = et[95] * e;
  et[1229] = 576.0 * et[1228];
  et[1230] = et[1227] + et[1229];
  et[1231] = et[1230] * b;
  et[1232] = et[1223] + et[1231];
  et[1233] = et[1218] + et[1232];
  et[1234] = et[1233] * j;
  et[1235] = 256.0 * et[236];
  et[1236] = et[1235] + et[891];
  et[1237] = et[1236] * a;
  et[1238] = 576.0 * et[586];
  et[1239] = 624.0 * et[540];
  et[1240] = et[1238] + et[1239];
  et[1241] = et[1240] * b;
  et[1242] = 152.0 * et[545];
  et[1243] = et[1241] + et[1242];
  et[1244] = et[1237] + et[1243];
  et[1245] = et[1244] * c;
  et[1246] = -528.0 * f;
  et[1247] = 208.0 * h;
  et[1248] = et[1246] + et[1247] + et[943];
  et[1249] = et[1248] * k;
  et[1250] = 104.0 * et[49];
  et[1251] = 264.0 * et[4];
  et[1252] = 72.0 * et[6];
  et[1253] = et[1251] + et[1252];
  et[1254] = et[1250] + et[1253];
  et[1255] = et[1249] + et[1254];
  et[1256] = et[1255] * e;
  et[1257] = et[1256] * e;
  et[1258] = 416.0 * et[236];
  et[1259] = 208.0 * et[119];
  et[1260] = et[1258] + et[1259];
  et[1261] = et[1260] * b;
  et[1262] = et[1261] * b;
  et[1263] = et[1257] + et[1262];
  et[1264] = et[1245] + et[1263];
  et[1265] = et[1234] + et[1264];
  et[1266] = et[1265] * a;
  et[1267] = 280.0 * et[98];
  et[1268] = et[1267] * e;
  et[1269] = et[1268] * e;
  et[1270] = et[1269] * e;
  et[1271] = 224.0 * et[581];
  et[1272] = et[1271] * b;
  et[1273] = 216.0 * et[98];
  et[1274] = et[1273] * e;
  et[1275] = et[1272] + et[1274];
  et[1276] = et[1275] * b;
  et[1277] = 344.0 * et[595];
  et[1278] = et[1276] + et[1277];
  et[1279] = et[1278] * b;
  et[1280] = et[1270] + et[1279];
  et[1281] = et[1280] * b;
  et[1282] = et[1281] + et[998];
  et[1283] = et[1266] + et[1282];
  et[1284] = et[1283] * a;
  et[1285] = 32.0 * et[544];
  et[1286] = et[1172] + et[1285];
  et[1287] = et[1286] * b;
  et[1288] = et[1287] * b;
  et[1289] = 40.0 * et[863];
  et[1290] = et[1288] + et[1289];
  et[1291] = et[1290] * b;
  et[1292] = et[1291] * b;
  et[1293] = 16.0 * et[864];
  et[1294] = et[1292] + et[1293];
  et[1295] = et[1284] + et[1294];
  et[1296] = et[1295] * e;
  et[1297] = et[1296] * e;
  et[1298] = et[1297] * e;
  et[1299] = 256.0 * et[117];
  et[1300] = 128.0 * et[126];
  et[1301] = 64.0 * et[89];
  et[1302] = 512.0 * et[79];
  et[1303] = et[1301] + et[1302];
  et[1304] = et[1300] + et[1303];
  et[1305] = et[1299] + et[1304];
  et[1306] = et[1305] * a;
  et[1307] = 128.0 * et[215];
  et[1308] = 64.0 * et[105];
  et[1309] = et[1307] + et[1308];
  et[1310] = et[1309] * j;
  et[1311] = 64.0 * et[164];
  et[1312] = -192.0 * et[69];
  et[1313] = 128.0 * et[238];
  et[1314] = et[1312] + et[1313];
  et[1315] = et[1311] + et[1314];
  et[1316] = et[1315] * c;
  et[1317] = et[1310] + et[1316];
  et[1318] = et[1317] * b;
  et[1319] = et[1318] * b;
  et[1320] = 256.0 * et[290];
  et[1321] = et[1319] + et[1320];
  et[1322] = et[1306] + et[1321];
  et[1323] = et[1322] * d;
  et[1324] = et[1323] * d;
  et[1325] = et[1324] * b;
  et[1326] = 1536.0 * et[216];
  et[1327] = -2304.0 * et[32];
  et[1328] = 768.0 * et[105];
  et[1329] = et[1327] + et[1328];
  et[1330] = et[1326] + et[1329];
  et[1331] = et[1330] * a;
  et[1332] = -2096.0 * c;
  et[1333] = 1136.0 * g;
  et[1334] = 480.0 * j;
  et[1335] = et[1332] + et[1333] + et[1334];
  et[1336] = et[1335] * e;
  et[1337] = et[1336] * e;
  et[1338] = 1280.0 * et[95];
  et[1339] = et[1338] * e;
  et[1340] = 576.0 * et[1];
  et[1341] = -1728.0 * c;
  et[1342] = et[1340] + et[1341];
  et[1343] = et[1342] * b;
  et[1344] = et[1339] + et[1343];
  et[1345] = et[1344] * b;
  et[1346] = et[1337] + et[1345];
  et[1347] = et[1331] + et[1346];
  et[1348] = et[1347] * j;
  et[1349] = 1536.0 * et[236];
  et[1350] = 768.0 * et[164];
  et[1351] = et[1349] + et[1350];
  et[1352] = et[1351] * a;
  et[1353] = 1280.0 * et[98];
  et[1354] = et[1353] * e;
  et[1355] = 864.0 * et[540];
  et[1356] = et[1354] + et[1355];
  et[1357] = et[1356] * b;
  et[1358] = 1048.0 * et[545];
  et[1359] = et[1357] + et[1358];
  et[1360] = et[1352] + et[1359];
  et[1361] = et[1360] * c;
  et[1362] = -2448.0 * f;
  et[1363] = 1136.0 * h;
  et[1364] = 656.0 * k;
  et[1365] = et[1362] + et[1363] + et[1364];
  et[1366] = et[1365] * k;
  et[1367] = 568.0 * et[49];
  et[1368] = 1224.0 * et[4];
  et[1369] = 632.0 * et[6];
  et[1370] = et[1368] + et[1369];
  et[1371] = et[1367] + et[1370];
  et[1372] = et[1366] + et[1371];
  et[1373] = et[1372] * e;
  et[1374] = et[1373] * e;
  et[1375] = 576.0 * et[236];
  et[1376] = 288.0 * et[119];
  et[1377] = et[1375] + et[1376];
  et[1378] = et[1377] * b;
  et[1379] = et[1378] * b;
  et[1380] = et[1374] + et[1379];
  et[1381] = et[1361] + et[1380];
  et[1382] = et[1348] + et[1381];
  et[1383] = et[1382] * b;
  et[1384] = et[1018] + et[639];
  et[1385] = et[1017] + et[1384];
  et[1386] = et[1016] + et[1385];
  et[1387] = et[1386] * f;
  et[1388] = et[644] + et[1026];
  et[1389] = et[1024] + et[1388];
  et[1390] = et[1389] * k;
  et[1391] = et[1387] + et[1390];
  et[1392] = et[1391] * a;
  et[1393] = 576.0 * et[760];
  et[1394] = et[1392] + et[1393];
  et[1395] = et[1394] * e;
  et[1396] = et[1383] + et[1395];
  et[1397] = et[1396] * a;
  et[1398] = 340.0 * et[581];
  et[1399] = et[1398] * e;
  et[1400] = et[1399] * e;
  et[1401] = et[1400] * e;
  et[1402] = et[1401] * e;
  et[1403] = 492.0 * et[98];
  et[1404] = et[1403] * e;
  et[1405] = et[1404] * e;
  et[1406] = et[1405] * e;
  et[1407] = 404.0 * et[581];
  et[1408] = et[1407] * e;
  et[1409] = et[1408] * e;
  et[1410] = 96.0 * et[581];
  et[1411] = et[1410] * b;
  et[1412] = 128.0 * et[98];
  et[1413] = et[1412] * e;
  et[1414] = et[1411] + et[1413];
  et[1415] = et[1414] * b;
  et[1416] = et[1409] + et[1415];
  et[1417] = et[1416] * b;
  et[1418] = et[1406] + et[1417];
  et[1419] = et[1418] * b;
  et[1420] = et[1402] + et[1419];
  et[1421] = et[1420] * b;
  et[1422] = 396.0 * et[604];
  et[1423] = et[1421] + et[1422];
  et[1424] = et[1397] + et[1423];
  et[1425] = et[1424] * e;
  et[1426] = 640.0 * et[105];
  et[1427] = et[1101] + et[1426];
  et[1428] = et[1427] * j;
  et[1429] = 640.0 * et[164];
  et[1430] = et[1093] + et[1092];
  et[1431] = et[1429] + et[1430];
  et[1432] = et[1431] * c;
  et[1433] = et[1428] + et[1432];
  et[1434] = et[1433] * b;
  et[1435] = 896.0 * et[308];
  et[1436] = 1792.0 * et[170];
  et[1437] = -2688.0 * et[66];
  et[1438] = 1024.0 * et[6];
  et[1439] = et[1437] + et[1438];
  et[1440] = et[1436] + et[1439];
  et[1441] = et[1435] + et[1440];
  et[1442] = et[1441] * f;
  et[1443] = 896.0 * et[317];
  et[1444] = -1024.0 * et[6];
  et[1445] = 1792.0 * et[159];
  et[1446] = et[1444] + et[1445];
  et[1447] = et[1443] + et[1446];
  et[1448] = et[1447] * k;
  et[1449] = et[1442] + et[1448];
  et[1450] = et[1449] * e;
  et[1451] = et[1434] + et[1450];
  et[1452] = et[1451] * b;
  et[1453] = et[213] + et[14];
  et[1454] = et[214] + et[1453];
  et[1455] = 1280.0 * et[1454];
  et[1456] = et[1455] + et[1099];
  et[1457] = et[1456] * j;
  et[1458] = et[236] + et[6];
  et[1459] = et[237] + et[1458];
  et[1460] = 1280.0 * et[1459];
  et[1461] = et[1093] + et[1091];
  et[1462] = et[1460] + et[1461];
  et[1463] = et[1462] * c;
  et[1464] = et[1457] + et[1463];
  et[1465] = et[1464] * e;
  et[1466] = et[1465] * e;
  et[1467] = et[1037] + et[1466];
  et[1468] = et[1452] + et[1467];
  et[1469] = et[886] + et[1468];
  et[1470] = et[1469] * a;
  et[1471] = 768.0 * et[47];
  et[1472] = 384.0 * et[64];
  et[1473] = 192.0 * et[89];
  et[1474] = 1536.0 * et[79];
  et[1475] = et[1473] + et[1474];
  et[1476] = et[1472] + et[1475];
  et[1477] = et[1471] + et[1476];
  et[1478] = et[1477] * d;
  et[1479] = 3200.0 * et[159];
  et[1480] = 1600.0 * et[35];
  et[1481] = et[1479] + et[1480];
  et[1482] = et[1481] * k;
  et[1483] = 1600.0 * et[164];
  et[1484] = -4800.0 * et[66];
  et[1485] = 3200.0 * et[170];
  et[1486] = et[1484] + et[1485];
  et[1487] = et[1483] + et[1486];
  et[1488] = et[1487] * f;
  et[1489] = et[1482] + et[1488];
  et[1490] = et[1489] * e;
  et[1491] = et[1490] * e;
  et[1492] = 1920.0 * et[215];
  et[1493] = 960.0 * et[339];
  et[1494] = et[1100] + et[1493];
  et[1495] = et[1492] + et[1494];
  et[1496] = et[1495] * j;
  et[1497] = 1920.0 * et[238];
  et[1498] = 960.0 * et[308];
  et[1499] = -2880.0 * et[69];
  et[1500] = et[1499] + et[1094];
  et[1501] = et[1498] + et[1500];
  et[1502] = et[1497] + et[1501];
  et[1503] = et[1502] * c;
  et[1504] = et[1496] + et[1503];
  et[1505] = et[1504] * e;
  et[1506] = 192.0 * et[308];
  et[1507] = 384.0 * et[170];
  et[1508] = -576.0 * et[66];
  et[1509] = et[1508] + et[1019];
  et[1510] = et[1507] + et[1509];
  et[1511] = et[1506] + et[1510];
  et[1512] = et[1511] * f;
  et[1513] = 192.0 * et[317];
  et[1514] = 384.0 * et[159];
  et[1515] = et[1025] + et[1514];
  et[1516] = et[1513] + et[1515];
  et[1517] = et[1516] * k;
  et[1518] = et[1512] + et[1517];
  et[1519] = et[1518] * b;
  et[1520] = et[1505] + et[1519];
  et[1521] = et[1520] * b;
  et[1522] = et[1491] + et[1521];
  et[1523] = et[1478] + et[1522];
  et[1524] = et[1523] * d;
  et[1525] = 584.0 * et[410];
  et[1526] = 1752.0 * f;
  et[1527] = -3504.0 * k;
  et[1528] = et[1526] + et[1527];
  et[1529] = et[1528] * f;
  et[1530] = 1168.0 * et[170];
  et[1531] = et[1529] + et[1530];
  et[1532] = et[1525] + et[1531];
  et[1533] = et[1532] * e;
  et[1534] = et[1533] * e;
  et[1535] = et[1534] * e;
  et[1536] = et[1535] * e;
  et[1537] = 1760.0 * et[100];
  et[1538] = et[1537] * e;
  et[1539] = et[1538] * e;
  et[1540] = et[1539] * e;
  et[1541] = 192.0 * c;
  et[1542] = -384.0 * j;
  et[1543] = et[1541] + et[1542];
  et[1544] = et[1543] * c;
  et[1545] = 64.0 * et[119];
  et[1546] = et[1544] + et[1545];
  et[1547] = et[1313] + et[1546];
  et[1548] = et[1547] * b;
  et[1549] = et[1548] * b;
  et[1550] = 448.0 * et[100];
  et[1551] = et[1550] * b;
  et[1552] = -2272.0 * c;
  et[1553] = 992.0 * g;
  et[1554] = 640.0 * j;
  et[1555] = et[1552] + et[1553] + et[1554];
  et[1556] = et[1555] * j;
  et[1557] = -1696.0 * f;
  et[1558] = 992.0 * h;
  et[1559] = 352.0 * k;
  et[1560] = et[1557] + et[1558] + et[1559];
  et[1561] = et[1560] * k;
  et[1562] = 496.0 * et[49];
  et[1563] = 1136.0 * et[32];
  et[1564] = 848.0 * et[4];
  et[1565] = 464.0 * et[6];
  et[1566] = et[1563] + et[1564] + et[1565];
  et[1567] = et[1562] + et[1566];
  et[1568] = et[1561] + et[1567];
  et[1569] = et[1556] + et[1568];
  et[1570] = et[1569] * e;
  et[1571] = et[1551] + et[1570];
  et[1572] = et[1571] * e;
  et[1573] = et[1549] + et[1572];
  et[1574] = et[1573] * b;
  et[1575] = et[1540] + et[1574];
  et[1576] = et[1575] * b;
  et[1577] = et[1536] + et[1576];
  et[1578] = et[1524] + et[1577];
  et[1579] = et[1470] + et[1578];
  et[1580] = et[1579] * d;
  et[1581] = et[1425] + et[1580];
  et[1582] = et[1581] * e;
  et[1583] = et[1325] + et[1582];
  et[1584] = et[1583] * d;
  et[1585] = et[1298] + et[1584];
  et[1586] = et[1585] * d;
  et[1587] = et[1213] + et[1586];
  ////////////////////////////////////
  et[1588] = 16.0 * et[238];
  et[1589] = 24.0 * c;
  et[1590] = -48.0 * j;
  et[1591] = et[1589] + et[1590];
  et[1592] = et[1591] * c;
  et[1593] = 8.0 * et[119];
  et[1594] = et[1592] + et[1593];
  et[1595] = et[1588] + et[1594];
  et[1596] = et[1595] * a;
  et[1597] = 20.0 * et[581];
  et[1598] = et[1597] * e;
  et[1599] = et[1598] * e;
  et[1600] = 100.0 * et[585];
  et[1601] = 48.0 * et[586];
  et[1602] = et[1600] + et[1601];
  et[1603] = et[1602] * b;
  et[1604] = et[1599] + et[1603];
  et[1605] = et[1596] + et[1604];
  et[1606] = et[1605] * a;
  et[1607] = 26.0 * et[865];
  et[1608] = et[1607] + et[1285];
  et[1609] = et[1608] * b;
  et[1610] = et[1609] * b;
  et[1611] = 6.0 * et[863];
  et[1612] = et[1610] + et[1611];
  et[1613] = et[1606] + et[1612];
  et[1614] = et[1613] * e;
  et[1615] = et[1614] * e;
  et[1616] = et[1615] * e;
  et[1617] = et[1616] * e;
  et[1618] = et[1617] * a;
  et[1619] = et[1618] * a;
  et[1620] = 64.0 * et[865];
  et[1621] = 168.0 * et[544];
  et[1622] = et[1620] + et[1621];
  et[1623] = et[1622] * b;
  et[1624] = et[1623] * b;
  et[1625] = 104.0 * et[863];
  et[1626] = et[1624] + et[1625];
  et[1627] = et[1626] * b;
  et[1628] = 228.0 * et[98];
  et[1629] = et[1628] * e;
  et[1630] = et[1629] * e;
  et[1631] = 288.0 * et[100];
  et[1632] = et[1631] * a;
  et[1633] = et[1630] + et[1632];
  et[1634] = et[1633] * e;
  et[1635] = 192.0 * et[119];
  et[1636] = 576.0 * c;
  et[1637] = -1152.0 * j;
  et[1638] = et[1636] + et[1637];
  et[1639] = et[1638] * c;
  et[1640] = 384.0 * et[238];
  et[1641] = et[1639] + et[1640];
  et[1642] = et[1635] + et[1641];
  et[1643] = et[1642] * a;
  et[1644] = 608.0 * et[581];
  et[1645] = et[1644] * b;
  et[1646] = 468.0 * et[98];
  et[1647] = et[1646] * e;
  et[1648] = et[1645] + et[1647];
  et[1649] = et[1648] * b;
  et[1650] = 464.0 * et[595];
  et[1651] = et[1649] + et[1650];
  et[1652] = et[1643] + et[1651];
  et[1653] = et[1652] * b;
  et[1654] = et[1634] + et[1653];
  et[1655] = et[1654] * a;
  et[1656] = et[1627] + et[1655];
  et[1657] = et[1656] * e;
  et[1658] = et[1657] * e;
  et[1659] = et[1658] * e;
  et[1660] = et[1659] * a;
  et[1661] = 768.0 * et[216];
  et[1662] = -1152.0 * et[32];
  et[1663] = 384.0 * et[105];
  et[1664] = et[1662] + et[1663];
  et[1665] = et[1661] + et[1664];
  et[1666] = et[1665] * a;
  et[1667] = -1376.0 * c;
  et[1668] = 896.0 * g;
  et[1669] = et[1667] + et[1668] + et[1137];
  et[1670] = et[1669] * e;
  et[1671] = et[1670] * e;
  et[1672] = 1248.0 * et[1];
  et[1673] = -3744.0 * c;
  et[1674] = et[1672] + et[1673];
  et[1675] = et[1674] * b;
  et[1676] = 2048.0 * et[1228];
  et[1677] = et[1675] + et[1676];
  et[1678] = et[1677] * b;
  et[1679] = et[1671] + et[1678];
  et[1680] = et[1666] + et[1679];
  et[1681] = et[1680] * j;
  et[1682] = 768.0 * et[236];
  et[1683] = 384.0 * et[164];
  et[1684] = et[1682] + et[1683];
  et[1685] = et[1684] * a;
  et[1686] = 2048.0 * et[586];
  et[1687] = 1872.0 * et[540];
  et[1688] = et[1686] + et[1687];
  et[1689] = et[1688] * b;
  et[1690] = 688.0 * et[545];
  et[1691] = et[1689] + et[1690];
  et[1692] = et[1685] + et[1691];
  et[1693] = et[1692] * c;
  et[1694] = -2208.0 * f;
  et[1695] = 896.0 * h;
  et[1696] = et[1694] + et[1695] + et[1364];
  et[1697] = et[1696] * k;
  et[1698] = 448.0 * et[49];
  et[1699] = 1104.0 * et[4];
  et[1700] = 352.0 * et[6];
  et[1701] = et[1699] + et[1700];
  et[1702] = et[1698] + et[1701];
  et[1703] = et[1697] + et[1702];
  et[1704] = et[1703] * e;
  et[1705] = et[1704] * e;
  et[1706] = 1248.0 * et[236];
  et[1707] = 624.0 * et[119];
  et[1708] = et[1706] + et[1707];
  et[1709] = et[1708] * b;
  et[1710] = et[1709] * b;
  et[1711] = et[1705] + et[1710];
  et[1712] = et[1693] + et[1711];
  et[1713] = et[1681] + et[1712];
  et[1714] = et[1713] * a;
  et[1715] = 1392.0 * et[98];
  et[1716] = et[1715] * e;
  et[1717] = et[1716] * e;
  et[1718] = et[1717] * e;
  et[1719] = 1540.0 * et[581];
  et[1720] = et[1719] * e;
  et[1721] = et[1720] * e;
  et[1722] = 768.0 * et[98];
  et[1723] = et[1722] * e;
  et[1724] = 672.0 * et[585];
  et[1725] = et[1723] + et[1724];
  et[1726] = et[1725] * b;
  et[1727] = et[1721] + et[1726];
  et[1728] = et[1727] * b;
  et[1729] = et[1718] + et[1728];
  et[1730] = et[1729] * b;
  et[1731] = et[1402] + et[1730];
  et[1732] = et[1714] + et[1731];
  et[1733] = et[1732] * a;
  et[1734] = 24.0 * et[865];
  et[1735] = 142.0 * et[544];
  et[1736] = et[1734] + et[1735];
  et[1737] = et[1736] * b;
  et[1738] = et[1737] * b;
  et[1739] = 232.0 * et[863];
  et[1740] = et[1738] + et[1739];
  et[1741] = et[1740] * b;
  et[1742] = et[1741] * b;
  et[1743] = 114.0 * et[864];
  et[1744] = et[1742] + et[1743];
  et[1745] = et[1733] + et[1744];
  et[1746] = et[1745] * e;
  et[1747] = et[1746] * e;
  et[1748] = 384.0 * et[6];
  et[1749] = et[1437] + et[1748];
  et[1750] = et[1436] + et[1749];
  et[1751] = et[1435] + et[1750];
  et[1752] = et[1751] * f;
  et[1753] = -384.0 * et[6];
  et[1754] = et[1753] + et[1445];
  et[1755] = et[1443] + et[1754];
  et[1756] = et[1755] * k;
  et[1757] = et[1752] + et[1756];
  et[1758] = et[1757] * a;
  et[1759] = et[1539] + et[1758];
  et[1760] = et[1759] * e;
  et[1761] = 2048.0 * et[216];
  et[1762] = -3072.0 * et[32];
  et[1763] = 1024.0 * et[105];
  et[1764] = et[1762] + et[1763];
  et[1765] = et[1761] + et[1764];
  et[1766] = et[1765] * a;
  et[1767] = -5248.0 * c;
  et[1768] = 2688.0 * g;
  et[1769] = 1280.0 * j;
  et[1770] = et[1767] + et[1768] + et[1769];
  et[1771] = et[1770] * e;
  et[1772] = et[1771] * e;
  et[1773] = 2240.0 * et[95];
  et[1774] = et[1773] * e;
  et[1775] = 768.0 * et[1];
  et[1776] = -2304.0 * c;
  et[1777] = et[1775] + et[1776];
  et[1778] = et[1777] * b;
  et[1779] = et[1774] + et[1778];
  et[1780] = et[1779] * b;
  et[1781] = et[1772] + et[1780];
  et[1782] = et[1766] + et[1781];
  et[1783] = et[1782] * j;
  et[1784] = 2048.0 * et[236];
  et[1785] = 1024.0 * et[164];
  et[1786] = et[1784] + et[1785];
  et[1787] = et[1786] * a;
  et[1788] = 2240.0 * et[98];
  et[1789] = et[1788] * e;
  et[1790] = 1152.0 * et[540];
  et[1791] = et[1789] + et[1790];
  et[1792] = et[1791] * b;
  et[1793] = 2624.0 * et[545];
  et[1794] = et[1792] + et[1793];
  et[1795] = et[1787] + et[1794];
  et[1796] = et[1795] * c;
  et[1797] = -5504.0 * f;
  et[1798] = 2688.0 * h;
  et[1799] = 1408.0 * k;
  et[1800] = et[1797] + et[1798] + et[1799];
  et[1801] = et[1800] * k;
  et[1802] = 1344.0 * et[49];
  et[1803] = 2752.0 * et[4];
  et[1804] = 1536.0 * et[6];
  et[1805] = et[1803] + et[1804];
  et[1806] = et[1802] + et[1805];
  et[1807] = et[1801] + et[1806];
  et[1808] = et[1807] * e;
  et[1809] = et[1808] * e;
  et[1810] = 384.0 * et[119];
  et[1811] = et[1682] + et[1810];
  et[1812] = et[1811] * b;
  et[1813] = et[1812] * b;
  et[1814] = et[1809] + et[1813];
  et[1815] = et[1796] + et[1814];
  et[1816] = et[1783] + et[1815];
  et[1817] = et[1816] * b;
  et[1818] = et[1760] + et[1817];
  et[1819] = et[1818] * a;
  et[1820] = 1508.0 * et[98];
  et[1821] = et[1820] * e;
  et[1822] = et[1821] * e;
  et[1823] = et[1822] * e;
  et[1824] = et[1823] * e;
  et[1825] = et[1824] * e;
  et[1826] = 1396.0 * et[98];
  et[1827] = et[1826] * e;
  et[1828] = et[1827] * e;
  et[1829] = et[1828] * e;
  et[1830] = 128.0 * et[581];
  et[1831] = et[1830] * b;
  et[1832] = 224.0 * et[586];
  et[1833] = et[1831] + et[1832];
  et[1834] = et[1833] * b;
  et[1835] = 992.0 * et[595];
  et[1836] = et[1834] + et[1835];
  et[1837] = et[1836] * b;
  et[1838] = et[1829] + et[1837];
  et[1839] = et[1838] * b;
  et[1840] = 1168.0 * et[597];
  et[1841] = et[1839] + et[1840];
  et[1842] = et[1841] * b;
  et[1843] = et[1825] + et[1842];
  et[1844] = et[1819] + et[1843];
  et[1845] = et[1844] * e;
  et[1846] = 640.0 * et[215];
  et[1847] = 320.0 * et[105];
  et[1848] = et[1846] + et[1847];
  et[1849] = et[1848] * j;
  et[1850] = 320.0 * et[164];
  et[1851] = -960.0 * et[69];
  et[1852] = 640.0 * et[238];
  et[1853] = et[1851] + et[1852];
  et[1854] = et[1850] + et[1853];
  et[1855] = et[1854] * c;
  et[1856] = et[1849] + et[1855];
  et[1857] = et[1856] * b;
  et[1858] = 1536.0 * et[159];
  et[1859] = -1152.0 * et[6];
  et[1860] = 768.0 * et[317];
  et[1861] = et[1859] + et[1860];
  et[1862] = et[1858] + et[1861];
  et[1863] = et[1862] * k;
  et[1864] = 1536.0 * et[170];
  et[1865] = 768.0 * et[308];
  et[1866] = -2304.0 * et[66];
  et[1867] = 1152.0 * et[6];
  et[1868] = et[1866] + et[1867];
  et[1869] = et[1865] + et[1868];
  et[1870] = et[1864] + et[1869];
  et[1871] = et[1870] * f;
  et[1872] = et[1863] + et[1871];
  et[1873] = et[1872] * e;
  et[1874] = et[1857] + et[1873];
  et[1875] = et[1874] * b;
  et[1876] = -1600.0 * et[6];
  et[1877] = et[1876] + et[1493];
  et[1878] = et[1492] + et[1877];
  et[1879] = et[1878] * j;
  et[1880] = 1600.0 * et[6];
  et[1881] = et[1499] + et[1880];
  et[1882] = et[1498] + et[1881];
  et[1883] = et[1497] + et[1882];
  et[1884] = et[1883] * c;
  et[1885] = et[1879] + et[1884];
  et[1886] = et[1885] * e;
  et[1887] = et[1886] * e;
  et[1888] = 512.0 * et[102];
  et[1889] = et[1888] * d;
  et[1890] = et[1887] + et[1889];
  et[1891] = et[1875] + et[1890];
  et[1892] = et[1306] + et[1891];
  et[1893] = et[1892] * a;
  et[1894] = 256.0 * et[47];
  et[1895] = 128.0 * et[64];
  et[1896] = et[1895] + et[1303];
  et[1897] = et[1894] + et[1896];
  et[1898] = et[1897] * d;
  et[1899] = 3456.0 * et[159];
  et[1900] = 1728.0 * et[35];
  et[1901] = et[1899] + et[1900];
  et[1902] = et[1901] * k;
  et[1903] = 1728.0 * et[164];
  et[1904] = -5184.0 * et[66];
  et[1905] = 3456.0 * et[170];
  et[1906] = et[1904] + et[1905];
  et[1907] = et[1903] + et[1906];
  et[1908] = et[1907] * f;
  et[1909] = et[1902] + et[1908];
  et[1910] = et[1909] * e;
  et[1911] = et[1910] * e;
  et[1912] = 1536.0 * et[215];
  et[1913] = 768.0 * et[339];
  et[1914] = et[644] + et[1913];
  et[1915] = et[1912] + et[1914];
  et[1916] = et[1915] * j;
  et[1917] = 1536.0 * et[238];
  et[1918] = -2304.0 * et[69];
  et[1919] = et[1918] + et[639];
  et[1920] = et[1865] + et[1919];
  et[1921] = et[1917] + et[1920];
  et[1922] = et[1921] * c;
  et[1923] = et[1916] + et[1922];
  et[1924] = et[1923] * e;
  et[1925] = 128.0 * et[159];
  et[1926] = 64.0 * et[317];
  et[1927] = et[693] + et[1926];
  et[1928] = et[1925] + et[1927];
  et[1929] = et[1928] * k;
  et[1930] = 128.0 * et[170];
  et[1931] = 64.0 * et[308];
  et[1932] = et[6] + et[450];
  et[1933] = 192.0 * et[1932];
  et[1934] = et[1931] + et[1933];
  et[1935] = et[1930] + et[1934];
  et[1936] = et[1935] * f;
  et[1937] = et[1929] + et[1936];
  et[1938] = et[1937] * b;
  et[1939] = et[1924] + et[1938];
  et[1940] = et[1939] * b;
  et[1941] = et[1911] + et[1940];
  et[1942] = et[1898] + et[1941];
  et[1943] = et[1942] * d;
  et[1944] = 1240.0 * et[410];
  et[1945] = 3720.0 * f;
  et[1946] = -7440.0 * k;
  et[1947] = et[1945] + et[1946];
  et[1948] = et[1947] * f;
  et[1949] = 2480.0 * et[170];
  et[1950] = et[1948] + et[1949];
  et[1951] = et[1944] + et[1950];
  et[1952] = et[1951] * e;
  et[1953] = et[1952] * e;
  et[1954] = et[1953] * e;
  et[1955] = et[1954] * e;
  et[1956] = 3200.0 * et[100];
  et[1957] = et[1956] * e;
  et[1958] = et[1957] * e;
  et[1959] = et[1958] * e;
  et[1960] = 96.0 * c;
  et[1961] = -192.0 * j;
  et[1962] = et[1960] + et[1961];
  et[1963] = et[1962] * c;
  et[1964] = 32.0 * et[119];
  et[1965] = et[1963] + et[1964];
  et[1966] = et[283] + et[1965];
  et[1967] = et[1966] * b;
  et[1968] = et[1967] * b;
  et[1969] = 384.0 * et[100];
  et[1970] = et[1969] * b;
  et[1971] = -3296.0 * c;
  et[1972] = 1376.0 * g;
  et[1973] = 960.0 * j;
  et[1974] = et[1971] + et[1972] + et[1973];
  et[1975] = et[1974] * j;
  et[1976] = 1376.0 * h;
  et[1977] = 416.0 * k;
  et[1978] = et[1694] + et[1976] + et[1977];
  et[1979] = et[1978] * k;
  et[1980] = 688.0 * et[49];
  et[1981] = 1648.0 * et[32];
  et[1982] = 592.0 * et[6];
  et[1983] = et[1981] + et[1699] + et[1982];
  et[1984] = et[1980] + et[1983];
  et[1985] = et[1979] + et[1984];
  et[1986] = et[1975] + et[1985];
  et[1987] = et[1986] * e;
  et[1988] = et[1970] + et[1987];
  et[1989] = et[1988] * e;
  et[1990] = et[1968] + et[1989];
  et[1991] = et[1990] * b;
  et[1992] = et[1959] + et[1991];
  et[1993] = et[1992] * b;
  et[1994] = et[1955] + et[1993];
  et[1995] = et[1943] + et[1994];
  et[1996] = et[1893] + et[1995];
  et[1997] = et[1996] * d;
  et[1998] = et[1845] + et[1997];
  et[1999] = et[1998] * d;
  et[2000] = et[1747] + et[1999];
  et[2001] = et[2000] * d;
  et[2002] = et[1660] + et[2001];
  et[2003] = et[2002] * d;
  et[2004] = et[1619] + et[2003];
  ////////////////////////////////////
  et[2005] = 64.0 * et[581];
  et[2006] = et[2005] * b;
  et[2007] = 16.0 * et[586];
  et[2008] = et[2006] + et[2007];
  et[2009] = et[2008] * a;
  et[2010] = 44.0 * et[865];
  et[2011] = 28.0 * et[544];
  et[2012] = et[2010] + et[2011];
  et[2013] = et[2012] * b;
  et[2014] = et[2009] + et[2013];
  et[2015] = et[2014] * e;
  et[2016] = et[2015] * e;
  et[2017] = et[2016] * e;
  et[2018] = et[2017] * e;
  et[2019] = et[2018] * a;
  et[2020] = et[2019] * a;
  et[2021] = et[2020] * a;
  et[2022] = et[1547] * a;
  et[2023] = 208.0 * et[581];
  et[2024] = et[2023] * e;
  et[2025] = et[2024] * e;
  et[2026] = 800.0 * et[581];
  et[2027] = et[2026] * b;
  et[2028] = 432.0 * et[586];
  et[2029] = et[2027] + et[2028];
  et[2030] = et[2029] * b;
  et[2031] = et[2025] + et[2030];
  et[2032] = et[2022] + et[2031];
  et[2033] = et[2032] * a;
  et[2034] = 208.0 * et[865];
  et[2035] = 332.0 * et[544];
  et[2036] = et[2034] + et[2035];
  et[2037] = et[2036] * b;
  et[2038] = et[2037] * b;
  et[2039] = 76.0 * et[863];
  et[2040] = et[2038] + et[2039];
  et[2041] = et[2033] + et[2040];
  et[2042] = et[2041] * e;
  et[2043] = et[2042] * e;
  et[2044] = et[2043] * e;
  et[2045] = et[2044] * a;
  et[2046] = et[2045] * a;
  et[2047] = 192.0 * et[865];
  et[2048] = 732.0 * et[544];
  et[2049] = et[2047] + et[2048];
  et[2050] = et[2049] * b;
  et[2051] = et[2050] * b;
  et[2052] = 588.0 * et[863];
  et[2053] = et[2051] + et[2052];
  et[2054] = et[2053] * b;
  et[2055] = 1024.0 * et[100];
  et[2056] = et[2055] * a;
  et[2057] = 1104.0 * et[601];
  et[2058] = et[2056] + et[2057];
  et[2059] = et[2058] * e;
  et[2060] = 576.0 * et[119];
  et[2061] = 1728.0 * c;
  et[2062] = -3456.0 * j;
  et[2063] = et[2061] + et[2062];
  et[2064] = et[2063] * c;
  et[2065] = 1152.0 * et[238];
  et[2066] = et[2064] + et[2065];
  et[2067] = et[2060] + et[2066];
  et[2068] = et[2067] * a;
  et[2069] = 2032.0 * et[581];
  et[2070] = et[2069] * e;
  et[2071] = et[2070] * e;
  et[2072] = 1824.0 * et[581];
  et[2073] = et[2072] * b;
  et[2074] = 1664.0 * et[586];
  et[2075] = et[2073] + et[2074];
  et[2076] = et[2075] * b;
  et[2077] = et[2071] + et[2076];
  et[2078] = et[2068] + et[2077];
  et[2079] = et[2078] * b;
  et[2080] = et[2059] + et[2079];
  et[2081] = et[2080] * a;
  et[2082] = et[2054] + et[2081];
  et[2083] = et[2082] * e;
  et[2084] = et[2083] * e;
  et[2085] = et[2084] * a;
  et[2086] = 1024.0 * et[216];
  et[2087] = -1536.0 * et[32];
  et[2088] = 512.0 * et[105];
  et[2089] = et[2087] + et[2088];
  et[2090] = et[2086] + et[2089];
  et[2091] = et[2090] * a;
  et[2092] = -3328.0 * c;
  et[2093] = 2048.0 * g;
  et[2094] = et[2092] + et[2093] + et[1554];
  et[2095] = et[2094] * e;
  et[2096] = et[2095] * e;
  et[2097] = 3584.0 * et[95];
  et[2098] = et[2097] * e;
  et[2099] = 1664.0 * et[1];
  et[2100] = -4992.0 * c;
  et[2101] = et[2099] + et[2100];
  et[2102] = et[2101] * b;
  et[2103] = et[2098] + et[2102];
  et[2104] = et[2103] * b;
  et[2105] = et[2096] + et[2104];
  et[2106] = et[2091] + et[2105];
  et[2107] = et[2106] * j;
  et[2108] = 1024.0 * et[236];
  et[2109] = 512.0 * et[164];
  et[2110] = et[2108] + et[2109];
  et[2111] = et[2110] * a;
  et[2112] = 3584.0 * et[98];
  et[2113] = et[2112] * e;
  et[2114] = 2496.0 * et[540];
  et[2115] = et[2113] + et[2114];
  et[2116] = et[2115] * b;
  et[2117] = 1664.0 * et[545];
  et[2118] = et[2116] + et[2117];
  et[2119] = et[2111] + et[2118];
  et[2120] = et[2119] * c;
  et[2121] = -4864.0 * f;
  et[2122] = 2048.0 * h;
  et[2123] = et[2121] + et[2122] + et[1799];
  et[2124] = et[2123] * k;
  et[2125] = 1024.0 * et[49];
  et[2126] = 2432.0 * et[4];
  et[2127] = 896.0 * et[6];
  et[2128] = et[2126] + et[2127];
  et[2129] = et[2125] + et[2128];
  et[2130] = et[2124] + et[2129];
  et[2131] = et[2130] * e;
  et[2132] = et[2131] * e;
  et[2133] = 1664.0 * et[236];
  et[2134] = 832.0 * et[119];
  et[2135] = et[2133] + et[2134];
  et[2136] = et[2135] * b;
  et[2137] = et[2136] * b;
  et[2138] = et[2132] + et[2137];
  et[2139] = et[2120] + et[2138];
  et[2140] = et[2107] + et[2139];
  et[2141] = et[2140] * a;
  et[2142] = 3824.0 * et[98];
  et[2143] = et[2142] * e;
  et[2144] = et[2143] * e;
  et[2145] = et[2144] * e;
  et[2146] = 896.0 * et[581];
  et[2147] = et[2146] * b;
  et[2148] = 1344.0 * et[586];
  et[2149] = et[2147] + et[2148];
  et[2150] = et[2149] * b;
  et[2151] = 3680.0 * et[595];
  et[2152] = et[2150] + et[2151];
  et[2153] = et[2152] * b;
  et[2154] = et[2145] + et[2153];
  et[2155] = et[2154] * b;
  et[2156] = et[2155] + et[1840];
  et[2157] = et[2141] + et[2156];
  et[2158] = et[2157] * a;
  et[2159] = 32.0 * et[865];
  et[2160] = 336.0 * et[544];
  et[2161] = et[2159] + et[2160];
  et[2162] = et[2161] * b;
  et[2163] = et[2162] * b;
  et[2164] = 764.0 * et[863];
  et[2165] = et[2163] + et[2164];
  et[2166] = et[2165] * b;
  et[2167] = et[2166] * b;
  et[2168] = 476.0 * et[864];
  et[2169] = et[2167] + et[2168];
  et[2170] = et[2158] + et[2169];
  et[2171] = et[2170] * e;
  et[2172] = et[203] + et[159];
  et[2173] = 2048.0 * et[2172];
  et[2174] = -3072.0 * et[4];
  et[2175] = 1024.0 * et[35];
  et[2176] = et[2174] + et[2175];
  et[2177] = et[2173] + et[2176];
  et[2178] = et[2177] * d;
  et[2179] = -1536.0 * f;
  et[2180] = 1024.0 * h;
  et[2181] = 256.0 * k;
  et[2182] = et[2179] + et[2180] + et[2181];
  et[2183] = et[2182] * b;
  et[2184] = et[0] + j;
  et[2185] = et[2184] * e;
  et[2186] = 3456.0 * et[2185];
  et[2187] = et[2183] + et[2186];
  et[2188] = et[2187] * b;
  et[2189] = 3328.0 * et[29];
  et[2190] = -9984.0 * f;
  et[2191] = et[2189] + et[2190];
  et[2192] = et[2191] * e;
  et[2193] = et[2192] * e;
  et[2194] = et[73] * j;
  et[2195] = et[201] + et[2194];
  et[2196] = et[2195] * a;
  et[2197] = 1536.0 * et[2196];
  et[2198] = et[2193] + et[2197];
  et[2199] = et[2188] + et[2198];
  et[2200] = et[2178] + et[2199];
  et[2201] = et[2200] * k;
  et[2202] = et[213] + et[212];
  et[2203] = 1536.0 * et[2202];
  et[2204] = et[1327] + et[1444];
  et[2205] = et[1913] + et[2204];
  et[2206] = et[2203] + et[2205];
  et[2207] = et[2206] * a;
  et[2208] = -2560.0 * c;
  et[2209] = 1024.0 * g;
  et[2210] = 768.0 * j;
  et[2211] = et[2208] + et[2209] + et[2210];
  et[2212] = et[2211] * b;
  et[2213] = -3456.0 * e * f;
  et[2214] = et[2212] + et[2213];
  et[2215] = et[2214] * b;
  et[2216] = et[167] * f;
  et[2217] = 2048.0 * et[2216];
  et[2218] = et[2217] * d;
  et[2219] = et[167] * e;
  et[2220] = et[2219] * e;
  et[2221] = 3328.0 * et[2220];
  et[2222] = et[2218] + et[2221];
  et[2223] = et[2215] + et[2222];
  et[2224] = et[2207] + et[2223];
  et[2225] = et[2224] * j;
  et[2226] = et[1438] + et[1865];
  et[2227] = et[2226] * a;
  et[2228] = 1280.0 * et[865];
  et[2229] = 1664.0 * et[544];
  et[2230] = 1024.0 * d * f;
  et[2231] = et[2228] + et[2229] + et[2230];
  et[2232] = et[2231] * c;
  et[2233] = b * e;
  et[2234] = 3456.0 * et[2233] * f;
  et[2235] = et[2232] + et[2234];
  et[2236] = et[2227] + et[2235];
  et[2237] = et[2236] * c;
  et[2238] = 1024.0 * et[119];
  et[2239] = et[2238] * d;
  et[2240] = 768.0 * et[865];
  et[2241] = 4992.0 * et[544];
  et[2242] = et[2240] + et[2241];
  et[2243] = et[2242] * f;
  et[2244] = et[2239] + et[2243];
  et[2245] = et[2244] * f;
  et[2246] = 512.0 * et[49];
  et[2247] = et[1748] + et[2246];
  et[2248] = et[2247] * b;
  et[2249] = et[2248] * b;
  et[2250] = 1664.0 * et[551];
  et[2251] = et[2249] + et[2250];
  et[2252] = et[2245] + et[2251];
  et[2253] = et[2237] + et[2252];
  et[2254] = et[2225] + et[2253];
  et[2255] = et[2201] + et[2254];
  et[2256] = et[2255] * d;
  et[2257] = -512.0 * et[6];
  et[2258] = et[2257] + et[1860];
  et[2259] = et[1858] + et[2258];
  et[2260] = et[2259] * k;
  et[2261] = 512.0 * et[6];
  et[2262] = et[1866] + et[2261];
  et[2263] = et[1865] + et[2262];
  et[2264] = et[1864] + et[2263];
  et[2265] = et[2264] * f;
  et[2266] = et[2260] + et[2265];
  et[2267] = et[2266] * a;
  et[2268] = -7424.0 * c;
  et[2269] = 3584.0 * g;
  et[2270] = 1920.0 * j;
  et[2271] = et[2268] + et[2269] + et[2270];
  et[2272] = et[2271] * j;
  et[2273] = -6912.0 * f;
  et[2274] = 3584.0 * h;
  et[2275] = 1664.0 * k;
  et[2276] = et[2273] + et[2274] + et[2275];
  et[2277] = et[2276] * k;
  et[2278] = 1792.0 * et[49];
  et[2279] = 3712.0 * et[32];
  et[2280] = 3456.0 * et[4];
  et[2281] = 2048.0 * et[6];
  et[2282] = et[2279] + et[2280] + et[2281];
  et[2283] = et[2278] + et[2282];
  et[2284] = et[2277] + et[2283];
  et[2285] = et[2272] + et[2284];
  et[2286] = et[2285] * e;
  et[2287] = et[100] * b;
  et[2288] = 1920.0 * et[2287];
  et[2289] = et[2286] + et[2288];
  et[2290] = et[2289] * b;
  et[2291] = et[1958] + et[2290];
  et[2292] = et[2267] + et[2291];
  et[2293] = et[2292] * a;
  et[2294] = 3648.0 * et[98];
  et[2295] = et[2294] * e;
  et[2296] = et[2295] * e;
  et[2297] = et[2296] * e;
  et[2298] = et[2297] * e;
  et[2299] = 2480.0 * et[581];
  et[2300] = et[2299] * e;
  et[2301] = et[2300] * e;
  et[2302] = et[2301] * e;
  et[2303] = 1376.0 * et[581];
  et[2304] = et[2303] * e;
  et[2305] = 192.0 * et[98];
  et[2306] = et[2305] * b;
  et[2307] = et[2304] + et[2306];
  et[2308] = et[2307] * b;
  et[2309] = 2368.0 * et[601];
  et[2310] = et[2308] + et[2309];
  et[2311] = et[2310] * b;
  et[2312] = et[2302] + et[2311];
  et[2313] = et[2312] * b;
  et[2314] = et[2298] + et[2313];
  et[2315] = et[2293] + et[2314];
  et[2316] = et[2256] + et[2315];
  et[2317] = et[2316] * e;
  et[2318] = et[168] + et[6];
  et[2319] = et[2318] * f;
  et[2320] = et[156] + et[14];
  et[2321] = et[158] + et[2320];
  et[2322] = et[203] + et[2321];
  et[2323] = et[2322] * k;
  et[2324] = et[2319] + et[2323];
  et[2325] = et[2324] * d;
  et[2326] = et[197] * a;
  et[2327] = et[2325] + et[2326];
  et[2328] = 512.0 * et[2327];
  et[2329] = et[1642] * b;
  et[2330] = et[2329] * b;
  et[2331] = -1536.0 * et[222];
  et[2332] = et[236] * c;
  et[2333] = et[216] * j;
  et[2334] = et[2332] + et[2333];
  et[2335] = 1024.0 * et[2334];
  et[2336] = et[2331] + et[2335];
  et[2337] = et[2336] * a;
  et[2338] = -768.0 * et[224];
  et[2339] = et[308] * f;
  et[2340] = et[317] * k;
  et[2341] = et[2339] + et[2340];
  et[2342] = 256.0 * et[2341];
  et[2343] = et[2338] + et[2342];
  et[2344] = et[2343] * d;
  et[2345] = et[2337] + et[2344];
  et[2346] = et[2330] + et[2345];
  et[2347] = et[2328] + et[2346];
  et[2348] = et[2347] * a;
  et[2349] = et[2006] * b;
  et[2350] = et[2349] * b;
  et[2351] = et[2350] * b;
  et[2352] = 128.0 * et[100];
  et[2353] = et[2352] * b;
  et[2354] = et[2353] * b;
  et[2355] = 512.0 * et[215];
  et[2356] = 256.0 * et[339];
  et[2357] = et[2355] + et[2356];
  et[2358] = et[2357] * j;
  et[2359] = 256.0 * et[308];
  et[2360] = -768.0 * et[69];
  et[2361] = 512.0 * et[238];
  et[2362] = et[2360] + et[2361];
  et[2363] = et[2359] + et[2362];
  et[2364] = et[2363] * c;
  et[2365] = et[2358] + et[2364];
  et[2366] = et[2365] * d;
  et[2367] = et[2354] + et[2366];
  et[2368] = et[2367] * d;
  et[2369] = et[2351] + et[2368];
  et[2370] = et[2348] + et[2369];
  et[2371] = et[2370] * b;
  et[2372] = et[2317] + et[2371];
  et[2373] = et[2372] * d;
  et[2374] = et[2171] + et[2373];
  et[2375] = et[2374] * d;
  et[2376] = et[2085] + et[2375];
  et[2377] = et[2376] * d;
  et[2378] = et[2046] + et[2377];
  et[2379] = et[2378] * d;
  et[2380] = et[2021] + et[2379];
  ////////////////////////////////////
  et[2381] = 16.0 * et[581];
  et[2382] = et[2381] * a;
  et[2383] = 41.0 * et[865];
  et[2384] = 9.0 * et[544];
  et[2385] = et[2383] + et[2384];
  et[2386] = et[2382] + et[2385];
  et[2387] = et[2386] * e;
  et[2388] = et[2387] * e;
  et[2389] = et[2388] * e;
  et[2390] = et[2389] * e;
  et[2391] = et[2390] * a;
  et[2392] = et[2391] * a;
  et[2393] = et[2392] * a;
  et[2394] = et[2393] * a;
  et[2395] = 512.0 * et[581];
  et[2396] = et[2395] * b;
  et[2397] = 144.0 * et[586];
  et[2398] = et[2396] + et[2397];
  et[2399] = et[2398] * a;
  et[2400] = 352.0 * et[865];
  et[2401] = 288.0 * et[544];
  et[2402] = et[2400] + et[2401];
  et[2403] = et[2402] * b;
  et[2404] = et[2399] + et[2403];
  et[2405] = et[2404] * e;
  et[2406] = et[2405] * e;
  et[2407] = et[2406] * e;
  et[2408] = et[2407] * a;
  et[2409] = et[2408] * a;
  et[2410] = et[2409] * a;
  et[2411] = 2400.0 * et[581];
  et[2412] = et[2411] * b;
  et[2413] = 1536.0 * et[586];
  et[2414] = et[2412] + et[2413];
  et[2415] = et[2414] * b;
  et[2416] = 896.0 * et[595];
  et[2417] = et[2415] + et[2416];
  et[2418] = et[1643] + et[2417];
  et[2419] = et[2418] * a;
  et[2420] = 624.0 * et[865];
  et[2421] = 1426.0 * et[544];
  et[2422] = et[2420] + et[2421];
  et[2423] = et[2422] * b;
  et[2424] = et[2423] * b;
  et[2425] = 418.0 * et[863];
  et[2426] = et[2424] + et[2425];
  et[2427] = et[2419] + et[2426];
  et[2428] = et[2427] * e;
  et[2429] = et[2428] * e;
  et[2430] = et[2429] * a;
  et[2431] = et[2430] * a;
  et[2432] = 256.0 * et[865];
  et[2433] = 1696.0 * et[544];
  et[2434] = et[2432] + et[2433];
  et[2435] = et[2434] * b;
  et[2436] = et[2435] * b;
  et[2437] = 1888.0 * et[863];
  et[2438] = et[2436] + et[2437];
  et[2439] = et[2438] * b;
  et[2440] = 1792.0 * et[100];
  et[2441] = et[2440] * a;
  et[2442] = 2944.0 * et[601];
  et[2443] = et[2441] + et[2442];
  et[2444] = et[2443] * e;
  et[2445] = 2304.0 * c;
  et[2446] = -4608.0 * j;
  et[2447] = et[2445] + et[2446];
  et[2448] = et[2447] * c;
  et[2449] = 768.0 * et[119];
  et[2450] = et[2448] + et[2449];
  et[2451] = et[1917] + et[2450];
  et[2452] = et[2451] * a;
  et[2453] = 4736.0 * et[581];
  et[2454] = et[2453] * e;
  et[2455] = et[2454] * e;
  et[2456] = 2432.0 * et[581];
  et[2457] = et[2456] * b;
  et[2458] = 2912.0 * et[98];
  et[2459] = et[2458] * e;
  et[2460] = et[2457] + et[2459];
  et[2461] = et[2460] * b;
  et[2462] = et[2455] + et[2461];
  et[2463] = et[2452] + et[2462];
  et[2464] = et[2463] * b;
  et[2465] = et[2444] + et[2464];
  et[2466] = et[2465] * a;
  et[2467] = et[2439] + et[2466];
  et[2468] = et[2467] * e;
  et[2469] = et[2468] * a;
  et[2470] = 3072.0 * et[95];
  et[2471] = et[2470] * e;
  et[2472] = 832.0 * et[1];
  et[2473] = -2496.0 * c;
  et[2474] = et[2472] + et[2473];
  et[2475] = et[2474] * b;
  et[2476] = et[2471] + et[2475];
  et[2477] = et[2476] * b;
  et[2478] = -4544.0 * c;
  et[2479] = 2624.0 * g;
  et[2480] = et[2478] + et[2479] + et[1973];
  et[2481] = et[2480] * e;
  et[2482] = et[2481] * e;
  et[2483] = 512.0 * et[210];
  et[2484] = et[2483] * d;
  et[2485] = et[2482] + et[2484];
  et[2486] = et[2477] + et[2485];
  et[2487] = et[910] + et[2486];
  et[2488] = et[2487] * j;
  et[2489] = 256.0 * et[35];
  et[2490] = 512.0 * et[29];
  et[2491] = -768.0 * f;
  et[2492] = et[2490] + et[2491];
  et[2493] = et[2492] * f;
  et[2494] = -512.0 * h * k;
  et[2495] = et[2493] + et[2494];
  et[2496] = et[2489] + et[2495];
  et[2497] = et[2496] * d;
  et[2498] = -5952.0 * f;
  et[2499] = 2624.0 * h;
  et[2500] = et[2498] + et[2499] + et[2275];
  et[2501] = et[2500] * e;
  et[2502] = -3072.0 * et[540];
  et[2503] = et[2501] + et[2502];
  et[2504] = et[2503] * e;
  et[2505] = 832.0 * et[71];
  et[2506] = et[2505] * b;
  et[2507] = et[2506] * b;
  et[2508] = 512.0 * et[71];
  et[2509] = et[2508] * c;
  et[2510] = et[2509] * a;
  et[2511] = et[2507] + et[2510];
  et[2512] = et[2504] + et[2511];
  et[2513] = et[2497] + et[2512];
  et[2514] = et[2513] * k;
  et[2515] = et[119] * f;
  et[2516] = et[2515] * d;
  et[2517] = c * f;
  et[2518] = et[2517] * d;
  et[2519] = et[164] * a;
  et[2520] = et[2518] + et[2519];
  et[2521] = et[2520] * c;
  et[2522] = et[2516] + et[2521];
  et[2523] = 256.0 * et[2522];
  et[2524] = 1312.0 * et[49];
  et[2525] = 2272.0 * et[32];
  et[2526] = 2976.0 * et[4];
  et[2527] = 1248.0 * et[6];
  et[2528] = et[2525] + et[2526] + et[2527];
  et[2529] = et[2524] + et[2528];
  et[2530] = et[2529] * e;
  et[2531] = et[2530] * e;
  et[2532] = 1248.0 * et[32];
  et[2533] = 416.0 * et[119];
  et[2534] = et[2532] + et[2533];
  et[2535] = et[2534] * b;
  et[2536] = 3072.0 * et[2517] * e;
  et[2537] = et[2535] + et[2536];
  et[2538] = et[2537] * b;
  et[2539] = et[2531] + et[2538];
  et[2540] = et[2523] + et[2539];
  et[2541] = et[2514] + et[2540];
  et[2542] = et[2488] + et[2541];
  et[2543] = et[2542] * a;
  et[2544] = et[2355] + et[907];
  et[2545] = et[2544] * j;
  et[2546] = et[929] + et[2362];
  et[2547] = et[2546] * c;
  et[2548] = et[2545] + et[2547];
  et[2549] = et[2548] * d;
  et[2550] = -5632.0 * c;
  et[2551] = 2560.0 * g;
  et[2552] = 1536.0 * j;
  et[2553] = et[2550] + et[2551] + et[2552];
  et[2554] = et[2553] * j;
  et[2555] = -4608.0 * f;
  et[2556] = 2560.0 * h;
  et[2557] = 1024.0 * k;
  et[2558] = et[2555] + et[2556] + et[2557];
  et[2559] = et[2558] * k;
  et[2560] = 1280.0 * et[49];
  et[2561] = 2816.0 * et[32];
  et[2562] = 2304.0 * et[4];
  et[2563] = 1408.0 * et[6];
  et[2564] = et[2561] + et[2562] + et[2563];
  et[2565] = et[2560] + et[2564];
  et[2566] = et[2559] + et[2565];
  et[2567] = et[2554] + et[2566];
  et[2568] = et[2567] * e;
  et[2569] = 640.0 * et[2287];
  et[2570] = et[2568] + et[2569];
  et[2571] = et[2570] * b;
  et[2572] = 3456.0 * et[760];
  et[2573] = et[2571] + et[2572];
  et[2574] = et[2549] + et[2573];
  et[2575] = et[2574] * d;
  et[2576] = et[2302] * e;
  et[2577] = 6272.0 * et[98];
  et[2578] = et[2577] * e;
  et[2579] = et[2578] * e;
  et[2580] = et[2579] * e;
  et[2581] = 4960.0 * et[581];
  et[2582] = et[2581] * e;
  et[2583] = et[2582] * e;
  et[2584] = 448.0 * et[581];
  et[2585] = et[2584] * b;
  et[2586] = 1152.0 * et[98];
  et[2587] = et[2586] * e;
  et[2588] = et[2585] + et[2587];
  et[2589] = et[2588] * b;
  et[2590] = et[2583] + et[2589];
  et[2591] = et[2590] * b;
  et[2592] = et[2580] + et[2591];
  et[2593] = et[2592] * b;
  et[2594] = et[2576] + et[2593];
  et[2595] = et[2575] + et[2594];
  et[2596] = et[2543] + et[2595];
  et[2597] = et[2596] * a;
  et[2598] = 512.0 * et[2172];
  et[2599] = -768.0 * et[4];
  et[2600] = et[2599] + et[2489];
  et[2601] = et[2598] + et[2600];
  et[2602] = et[2601] * d;
  et[2603] = 2752.0 * et[29];
  et[2604] = -8256.0 * f;
  et[2605] = et[2603] + et[2604];
  et[2606] = et[2605] * e;
  et[2607] = et[2606] * e;
  et[2608] = -448.0 * f;
  et[2609] = 320.0 * h;
  et[2610] = 64.0 * k;
  et[2611] = et[2608] + et[2609] + et[2610];
  et[2612] = et[2611] * b;
  et[2613] = 2048.0 * et[2185];
  et[2614] = et[2612] + et[2613];
  et[2615] = et[2614] * b;
  et[2616] = et[2607] + et[2615];
  et[2617] = et[2602] + et[2616];
  et[2618] = et[2617] * k;
  et[2619] = 512.0 * et[168];
  et[2620] = et[2619] + et[929];
  et[2621] = et[2620] * d;
  et[2622] = 2048.0 * et[594];
  et[2623] = 224.0 * b * f;
  et[2624] = et[2622] + et[2623];
  et[2625] = et[2624] * b;
  et[2626] = 4128.0 * et[544] * f;
  et[2627] = et[2625] + et[2626];
  et[2628] = et[2621] + et[2627];
  et[2629] = et[2628] * f;
  et[2630] = -832.0 * c;
  et[2631] = 320.0 * g;
  et[2632] = 256.0 * j;
  et[2633] = et[2630] + et[2631] + et[2632];
  et[2634] = et[2633] * j;
  et[2635] = 160.0 * et[49];
  et[2636] = 416.0 * et[32];
  et[2637] = et[2636] + et[624];
  et[2638] = et[2635] + et[2637];
  et[2639] = et[2634] + et[2638];
  et[2640] = et[2639] * b;
  et[2641] = et[2640] * b;
  et[2642] = 2752.0 * et[168];
  et[2643] = 1376.0 * et[410];
  et[2644] = et[2642] + et[2643];
  et[2645] = et[2644] * e;
  et[2646] = et[2645] * e;
  et[2647] = et[2641] + et[2646];
  et[2648] = et[2629] + et[2647];
  et[2649] = et[2618] + et[2648];
  et[2650] = et[2649] * d;
  et[2651] = 1024.0 * et[581];
  et[2652] = et[2651] * e;
  et[2653] = et[816] * b;
  et[2654] = et[2652] + et[2653];
  et[2655] = et[2654] * b;
  et[2656] = 2400.0 * et[601];
  et[2657] = et[2655] + et[2656];
  et[2658] = et[2657] * b;
  et[2659] = 3328.0 * et[596];
  et[2660] = et[2658] + et[2659];
  et[2661] = et[2660] * b;
  et[2662] = 5808.0 * et[603];
  et[2663] = et[2661] + et[2662];
  et[2664] = et[2650] + et[2663];
  et[2665] = et[2664] * d;
  et[2666] = 16.0 * et[865];
  et[2667] = 448.0 * et[544];
  et[2668] = et[2666] + et[2667];
  et[2669] = et[2668] * b;
  et[2670] = et[2669] * b;
  et[2671] = 1561.0 * et[863];
  et[2672] = et[2670] + et[2671];
  et[2673] = et[2672] * b;
  et[2674] = et[2673] * b;
  et[2675] = 1289.0 * et[864];
  et[2676] = et[2674] + et[2675];
  et[2677] = et[2665] + et[2676];
  et[2678] = et[2597] + et[2677];
  et[2679] = et[2678] * d;
  et[2680] = et[2469] + et[2679];
  et[2681] = et[2680] * d;
  et[2682] = et[2431] + et[2681];
  et[2683] = et[2682] * d;
  et[2684] = et[2410] + et[2683];
  et[2685] = et[2684] * d;
  et[2686] = et[2394] + et[2685];
  ////////////////////////////////////
  et[2687] = et[1830] * a;
  et[2688] = 328.0 * et[865];
  et[2689] = 92.0 * et[544];
  et[2690] = et[2688] + et[2689];
  et[2691] = et[2687] + et[2690];
  et[2692] = et[2691] * e;
  et[2693] = et[2692] * e;
  et[2694] = et[2693] * e;
  et[2695] = et[2694] * a;
  et[2696] = et[2695] * a;
  et[2697] = et[2696] * a;
  et[2698] = et[2697] * a;
  et[2699] = 512.0 * et[98];
  et[2700] = et[2699] * e;
  et[2701] = 1536.0 * et[585];
  et[2702] = et[2700] + et[2701];
  et[2703] = et[2702] * a;
  et[2704] = 1056.0 * et[865];
  et[2705] = 1224.0 * et[544];
  et[2706] = et[2704] + et[2705];
  et[2707] = et[2706] * b;
  et[2708] = et[2703] + et[2707];
  et[2709] = et[2708] * e;
  et[2710] = et[2709] * e;
  et[2711] = et[2710] * a;
  et[2712] = et[2711] * a;
  et[2713] = et[2712] * a;
  et[2714] = 256.0 * et[119];
  et[2715] = 768.0 * c;
  et[2716] = -1536.0 * j;
  et[2717] = et[2715] + et[2716];
  et[2718] = et[2717] * c;
  et[2719] = et[2718] + et[2361];
  et[2720] = et[2714] + et[2719];
  et[2721] = et[2720] * a;
  et[2722] = 3200.0 * et[581];
  et[2723] = et[2722] * b;
  et[2724] = 2688.0 * et[586];
  et[2725] = et[2723] + et[2724];
  et[2726] = et[2725] * b;
  et[2727] = 2048.0 * et[595];
  et[2728] = et[2726] + et[2727];
  et[2729] = et[2721] + et[2728];
  et[2730] = et[2729] * a;
  et[2731] = 832.0 * et[865];
  et[2732] = 3248.0 * et[544];
  et[2733] = et[2731] + et[2732];
  et[2734] = et[2733] * b;
  et[2735] = et[2734] * b;
  et[2736] = 1304.0 * et[863];
  et[2737] = et[2735] + et[2736];
  et[2738] = et[2730] + et[2737];
  et[2739] = et[2738] * e;
  et[2740] = et[2739] * a;
  et[2741] = et[2740] * a;
  et[2742] = 320.0 * et[865];
  et[2743] = 2024.0 * et[544];
  et[2744] = et[2742] + et[2743];
  et[2745] = et[2744] * b;
  et[2746] = et[2745] * b;
  et[2747] = 2364.0 * et[863];
  et[2748] = et[2746] + et[2747];
  et[2749] = et[2748] * e;
  et[2750] = 512.0 * et[100];
  et[2751] = et[2750] * d;
  et[2752] = et[585] * b;
  et[2753] = 320.0 * et[2752];
  et[2754] = et[2751] + et[2753];
  et[2755] = et[2754] * b;
  et[2756] = 640.0 * et[410];
  et[2757] = 1920.0 * f;
  et[2758] = -3840.0 * k;
  et[2759] = et[2757] + et[2758];
  et[2760] = et[2759] * f;
  et[2761] = 1280.0 * et[170];
  et[2762] = et[2760] + et[2761];
  et[2763] = et[2756] + et[2762];
  et[2764] = et[2763] * d;
  et[2765] = 6080.0 * et[98];
  et[2766] = et[2765] * e;
  et[2767] = et[2766] * e;
  et[2768] = 1344.0 * et[98];
  et[2769] = et[2768] * b;
  et[2770] = 2752.0 * et[594];
  et[2771] = et[2769] + et[2770];
  et[2772] = et[2771] * b;
  et[2773] = et[2767] + et[2772];
  et[2774] = et[2764] + et[2773];
  et[2775] = et[2774] * e;
  et[2776] = et[2755] + et[2775];
  et[2777] = et[2776] * d;
  et[2778] = et[2749] + et[2777];
  et[2779] = et[2778] * d;
  et[2780] = 2048.0 * et[100];
  et[2781] = et[2780] * d;
  et[2782] = 3328.0 * et[595];
  et[2783] = et[2781] + et[2782];
  et[2784] = et[2783] * d;
  et[2785] = 1792.0 * g;
  et[2786] = et[2092] + et[2785] + et[2210];
  et[2787] = et[2786] * j;
  et[2788] = 896.0 * et[54];
  et[2789] = -3840.0 * f;
  et[2790] = 1792.0 * h;
  et[2791] = et[2789] + et[2790] + et[2557];
  et[2792] = et[2791] * k;
  et[2793] = 1664.0 * et[32];
  et[2794] = 1920.0 * et[4];
  et[2795] = et[2793] + et[2794];
  et[2796] = et[2792] + et[2795];
  et[2797] = et[2788] + et[2796];
  et[2798] = et[2787] + et[2797];
  et[2799] = et[2798] * d;
  et[2800] = 4672.0 * et[601];
  et[2801] = et[100] * a;
  et[2802] = 1536.0 * et[2801];
  et[2803] = et[2800] + et[2802];
  et[2804] = et[2799] + et[2803];
  et[2805] = et[2804] * a;
  et[2806] = et[2784] + et[2805];
  et[2807] = et[2806] * e;
  et[2808] = -1792.0 * c;
  et[2809] = 768.0 * g;
  et[2810] = 512.0 * j;
  et[2811] = et[2808] + et[2809] + et[2810];
  et[2812] = et[2811] * j;
  et[2813] = -1280.0 * f;
  et[2814] = 768.0 * h;
  et[2815] = et[2813] + et[2814] + et[2181];
  et[2816] = et[2815] * k;
  et[2817] = 384.0 * et[54];
  et[2818] = 896.0 * et[32];
  et[2819] = 640.0 * et[4];
  et[2820] = et[2818] + et[2819];
  et[2821] = et[2817] + et[2820];
  et[2822] = et[2816] + et[2821];
  et[2823] = et[2812] + et[2822];
  et[2824] = et[2823] * d;
  et[2825] = 3584.0 * et[581];
  et[2826] = et[2825] * e;
  et[2827] = 384.0 * et[98];
  et[2828] = et[2827] * b;
  et[2829] = et[2826] + et[2828];
  et[2830] = et[2829] * b;
  et[2831] = 6144.0 * et[601];
  et[2832] = et[2830] + et[2831];
  et[2833] = et[2056] + et[2832];
  et[2834] = et[2824] + et[2833];
  et[2835] = et[2834] * d;
  et[2836] = 768.0 * et[238];
  et[2837] = 1152.0 * c;
  et[2838] = -2304.0 * j;
  et[2839] = et[2837] + et[2838];
  et[2840] = et[2839] * c;
  et[2841] = et[2840] + et[1810];
  et[2842] = et[2836] + et[2841];
  et[2843] = et[2842] * a;
  et[2844] = 6208.0 * et[581];
  et[2845] = et[2844] * e;
  et[2846] = et[2845] * e;
  et[2847] = 2496.0 * et[98];
  et[2848] = et[2847] * e;
  et[2849] = 1216.0 * et[585];
  et[2850] = et[2848] + et[2849];
  et[2851] = et[2850] * b;
  et[2852] = et[2846] + et[2851];
  et[2853] = et[2843] + et[2852];
  et[2854] = et[2853] * a;
  et[2855] = 128.0 * et[865];
  et[2856] = 2208.0 * et[544];
  et[2857] = et[2855] + et[2856];
  et[2858] = et[2857] * b;
  et[2859] = et[2858] * b;
  et[2860] = 3764.0 * et[863];
  et[2861] = et[2859] + et[2860];
  et[2862] = et[2854] + et[2861];
  et[2863] = et[2835] + et[2862];
  et[2864] = et[2863] * b;
  et[2865] = et[2807] + et[2864];
  et[2866] = et[2865] * a;
  et[2867] = et[2779] + et[2866];
  et[2868] = et[2867] * d;
  et[2869] = et[2741] + et[2868];
  et[2870] = et[2869] * d;
  et[2871] = et[2713] + et[2870];
  et[2872] = et[2871] * d;
  et[2873] = et[2698] + et[2872];
  et[2874] = et[2873] * d;
  et[2875] = a * a;
  et[2876] = et[2875] * et[2875];
  et[2877] = et[2876] * et[863];
  et[2878] = a * b;
  et[2879] = 20.0 * et[2877] * et[2878];
  et[2880] = et[2874] + et[2879];
  ////////////////////////////////////
  et[2881] = 384.0 * et[581];
  et[2882] = et[2881] * a;
  et[2883] = 984.0 * et[865];
  et[2884] = 388.0 * et[544];
  et[2885] = et[2883] + et[2884];
  et[2886] = et[2882] + et[2885];
  et[2887] = et[2886] * e;
  et[2888] = et[2887] * e;
  et[2889] = et[2888] * a;
  et[2890] = et[2889] * a;
  et[2891] = et[2890] * a;
  et[2892] = et[2891] * a;
  et[2893] = 2048.0 * et[581];
  et[2894] = et[2893] * b;
  et[2895] = 896.0 * et[586];
  et[2896] = et[2894] + et[2895];
  et[2897] = et[2896] * a;
  et[2898] = 1408.0 * et[865];
  et[2899] = 2752.0 * et[544];
  et[2900] = et[2898] + et[2899];
  et[2901] = et[2900] * b;
  et[2902] = et[2897] + et[2901];
  et[2903] = et[2902] * e;
  et[2904] = et[2903] * a;
  et[2905] = et[2904] * a;
  et[2906] = et[2905] * a;
  et[2907] = 384.0 * f;
  et[2908] = -768.0 * k;
  et[2909] = et[2907] + et[2908];
  et[2910] = et[2909] * f;
  et[2911] = 128.0 * et[410];
  et[2912] = et[2910] + et[2911];
  et[2913] = et[698] + et[2912];
  et[2914] = et[2913] * d;
  et[2915] = 1280.0 * et[581];
  et[2916] = et[2915] * e;
  et[2917] = et[98] * b;
  et[2918] = 320.0 * et[2917];
  et[2919] = et[2916] + et[2918];
  et[2920] = et[2919] * b;
  et[2921] = 4032.0 * et[601];
  et[2922] = et[2920] + et[2921];
  et[2923] = et[2914] + et[2922];
  et[2924] = et[2923] * d;
  et[2925] = 96.0 * et[865];
  et[2926] = 1624.0 * et[544];
  et[2927] = et[2925] + et[2926];
  et[2928] = et[2927] * b;
  et[2929] = et[2928] * b;
  et[2930] = 2972.0 * et[863];
  et[2931] = et[2929] + et[2930];
  et[2932] = et[2924] + et[2931];
  et[2933] = et[2932] * d;
  et[2934] = et[2933] * d;
  et[2935] = 1536.0 * et[865];
  et[2936] = 4768.0 * et[544];
  et[2937] = et[2935] + et[2936];
  et[2938] = et[2937] * e;
  et[2939] = et[2938] * b;
  et[2940] = 1088.0 * et[581];
  et[2941] = et[2940] * b;
  et[2942] = 3328.0 * et[586];
  et[2943] = et[2941] + et[2942];
  et[2944] = et[2943] * b;
  et[2945] = 2752.0 * et[595];
  et[2946] = et[2751] + et[2945];
  et[2947] = et[2944] + et[2946];
  et[2948] = et[2947] * d;
  et[2949] = et[2939] + et[2948];
  et[2950] = et[2949] * d;
  et[2951] = 256.0 * et[442];
  et[2952] = 512.0 * et[448];
  et[2953] = 1024.0 * et[451];
  et[2954] = et[2952] + et[2953];
  et[2955] = et[2951] + et[2954];
  et[2956] = et[2955] * d;
  et[2957] = et[2750] * a;
  et[2958] = 4416.0 * et[98];
  et[2959] = et[2958] * e;
  et[2960] = et[2959] * e;
  et[2961] = 832.0 * et[98];
  et[2962] = et[2961] * b;
  et[2963] = 4352.0 * et[594];
  et[2964] = et[2962] + et[2963];
  et[2965] = et[2964] * b;
  et[2966] = et[2960] + et[2965];
  et[2967] = et[2957] + et[2966];
  et[2968] = et[2956] + et[2967];
  et[2969] = et[2968] * d;
  et[2970] = 384.0 * c;
  et[2971] = -768.0 * j;
  et[2972] = et[2970] + et[2971];
  et[2973] = et[2972] * c;
  et[2974] = 128.0 * et[119];
  et[2975] = et[2973] + et[2974];
  et[2976] = et[893] + et[2975];
  et[2977] = et[2976] * a;
  et[2978] = 1600.0 * et[585];
  et[2979] = 2304.0 * et[586];
  et[2980] = et[2978] + et[2979];
  et[2981] = et[2980] * b;
  et[2982] = 2624.0 * et[595];
  et[2983] = et[2981] + et[2982];
  et[2984] = et[2977] + et[2983];
  et[2985] = et[2984] * a;
  et[2986] = 416.0 * et[865];
  et[2987] = 4144.0 * et[544];
  et[2988] = et[2986] + et[2987];
  et[2989] = et[2988] * b;
  et[2990] = et[2989] * b;
  et[2991] = 2524.0 * et[863];
  et[2992] = et[2990] + et[2991];
  et[2993] = et[2985] + et[2992];
  et[2994] = et[2969] + et[2993];
  et[2995] = et[2994] * a;
  et[2996] = et[2950] + et[2995];
  et[2997] = et[2996] * a;
  et[2998] = et[2934] + et[2997];
  et[2999] = et[2998] * d;
  et[3000] = et[2906] + et[2999];
  et[3001] = et[3000] * d;
  et[3002] = et[2892] + et[3001];
  et[3003] = et[3002] * d;
  et[3004] = et[2876] * et[544];
  et[3005] = et[2233] * a;
  et[3006] = 160.0 * et[3004] * et[3005];
  et[3007] = et[3003] + et[3006];
  et[3008] = et[3007] * d;
  et[3009] = 4.0 * et[2877] * et[2875];
  et[3010] = et[3008] + et[3009];
  ////////////////////////////////////
  et[3011] = et[2395] * a;
  et[3012] = 1312.0 * et[865];
  et[3013] = 864.0 * et[544];
  et[3014] = et[3012] + et[3013];
  et[3015] = et[3011] + et[3014];
  et[3016] = et[3015] * e;
  et[3017] = et[3016] * a;
  et[3018] = et[3017] * a;
  et[3019] = et[3018] * a;
  et[3020] = et[3019] * a;
  et[3021] = 256.0 * et[581];
  et[3022] = et[3021] * b;
  et[3023] = et[3022] + et[2413];
  et[3024] = et[3023] * d;
  et[3025] = 736.0 * et[865];
  et[3026] = 2528.0 * et[544];
  et[3027] = et[3025] + et[3026];
  et[3028] = et[3027] * e;
  et[3029] = et[3024] + et[3028];
  et[3030] = et[3029] * d;
  et[3031] = et[3030] * d;
  et[3032] = et[3031] * d;
  et[3033] = et[2916] * d;
  et[3034] = et[1722] * d;
  et[3035] = 448.0 * et[865];
  et[3036] = 3744.0 * et[544];
  et[3037] = et[3035] + et[3036];
  et[3038] = et[3034] + et[3037];
  et[3039] = et[3038] * b;
  et[3040] = et[3033] + et[3039];
  et[3041] = et[3040] * d;
  et[3042] = et[3041] * d;
  et[3043] = et[2651] * a;
  et[3044] = 704.0 * et[865];
  et[3045] = 3456.0 * et[544];
  et[3046] = et[3044] + et[3045];
  et[3047] = et[3034] + et[3046];
  et[3048] = et[3043] + et[3047];
  et[3049] = et[3048] * b;
  et[3050] = 1792.0 * et[581];
  et[3051] = et[3050] * d;
  et[3052] = et[1722] * a;
  et[3053] = et[3051] + et[3052];
  et[3054] = et[3053] * e;
  et[3055] = et[3049] + et[3054];
  et[3056] = et[3055] * a;
  et[3057] = et[2915] * b;
  et[3058] = et[3057] + et[2979];
  et[3059] = et[3058] * d;
  et[3060] = 2816.0 * et[865];
  et[3061] = 3104.0 * et[544];
  et[3062] = et[3060] + et[3061];
  et[3063] = et[3062] * e;
  et[3064] = et[3059] + et[3063];
  et[3065] = et[3064] * d;
  et[3066] = et[3056] + et[3065];
  et[3067] = et[3066] * a;
  et[3068] = et[3042] + et[3067];
  et[3069] = et[3068] * a;
  et[3070] = et[3032] + et[3069];
  et[3071] = et[3070] * d;
  et[3072] = et[3020] + et[3071];
  et[3073] = et[3072] * d;
  et[3074] = 480.0 * et[3004] * et[2878];
  et[3075] = et[3073] + et[3074];
  et[3076] = et[3075] * d;
  et[3077] = et[3004] * et[2875];
  et[3078] = 32.0 * et[3077] * e;
  et[3079] = et[3076] + et[3078];
  et[3080] = et[3079] * d;
  ////////////////////////////////////
  et[3081] = et[98] * d;
  et[3082] = 256.0 * et[3081];
  et[3083] = 144.0 * et[865];
  et[3084] = 1392.0 * et[544];
  et[3085] = et[3083] + et[3084];
  et[3086] = et[3082] + et[3085];
  et[3087] = et[3086] * d;
  et[3088] = et[3087] * d;
  et[3089] = et[3088] * d;
  et[3090] = et[3089] * d;
  et[3091] = et[581] * d;
  et[3092] = 256.0 * et[3091];
  et[3093] = 1664.0 * et[2233];
  et[3094] = et[3092] + et[3093];
  et[3095] = et[3094] * d;
  et[3096] = et[3095] * d;
  et[3097] = et[3096] * d;
  et[3098] = et[2699] * d;
  et[3099] = 800.0 * et[865];
  et[3100] = 2368.0 * et[544];
  et[3101] = et[3099] + et[3100];
  et[3102] = et[3098] + et[3101];
  et[3103] = et[3102] * d;
  et[3104] = et[3103] * d;
  et[3105] = et[2395] * d;
  et[3106] = 2304.0 * et[2233];
  et[3107] = et[3105] + et[3106];
  et[3108] = et[3107] * d;
  et[3109] = et[581] * a;
  et[3110] = et[3109] + et[3081];
  et[3111] = 256.0 * et[3110];
  et[3112] = 656.0 * et[865];
  et[3113] = 1072.0 * et[544];
  et[3114] = et[3112] + et[3113];
  et[3115] = et[3111] + et[3114];
  et[3116] = et[3115] * a;
  et[3117] = et[3108] + et[3116];
  et[3118] = et[3117] * a;
  et[3119] = et[3104] + et[3118];
  et[3120] = et[3119] * a;
  et[3121] = et[3097] + et[3120];
  et[3122] = et[3121] * a;
  et[3123] = et[3090] + et[3122];
  et[3124] = et[3123] * d;
  et[3125] = 640.0 * et[2876] * et[3005];
  et[3126] = et[3124] + et[3125];
  et[3127] = et[3126] * d;
  et[3128] = 96.0 * et[3077];
  et[3129] = et[3127] + et[3128];
  et[3130] = et[3129] * d;
  et[3131] = et[3130] * d;
  ////////////////////////////////////
  et[3132] = b * d;
  et[3133] = 320.0 * et[3132];
  et[3134] = 128.0 * a * e;
  et[3135] = et[3133] + et[3134];
  et[3136] = et[3135] * a;
  et[3137] = d * d;
  et[3138] = et[3137] * e;
  et[3139] = 704.0 * et[3138];
  et[3140] = et[3136] + et[3139];
  et[3141] = et[3140] * a;
  et[3142] = 640.0 * et[3132] * et[3137];
  et[3143] = et[3141] + et[3142];
  et[3144] = et[3143] * a;
  et[3145] = et[3137] * et[3137];
  et[3146] = 1024.0 * et[3145] * e;
  et[3147] = et[3144] + et[3146];
  et[3148] = et[3147] * a;
  et[3149] = 320.0 * et[3145] * et[3132];
  et[3150] = et[3148] + et[3149];
  et[3151] = et[3150] * a;
  et[3152] = 448.0 * et[3145] * et[3138];
  et[3153] = et[3151] + et[3152];
  et[3154] = et[3153] * d;
  et[3155] = et[3154] * d;
  et[3156] = et[3155] * d;
  ////////////////////////////////////
  et[3157] = 64.0 * et[2875];
  et[3158] = 192.0 * et[3137];
  et[3159] = et[3157] + et[3158];
  et[3160] = et[3159] * a;
  et[3161] = et[3160] * a;
  et[3162] = 192.0 * et[3145];
  et[3163] = et[3161] + et[3162];
  et[3164] = et[3163] * a;
  et[3165] = et[3164] * a;
  et[3166] = 64.0 * et[3145] * et[3137];
  et[3167] = et[3165] + et[3166];
  et[3168] = et[3167] * d;
  et[3169] = et[3168] * d;
  et[3170] = et[3169] * d;
  et[3171] = et[3170] * d;
}
// 0: et[137], 1: et[257], 2: et[470], 3: et[774], 4: et[1171], 5: et[1587], 6:
// et[2004], 7: et[2380], 8: et[2686], 9: et[2880], 10: et[3010], 11: et[3080],
// 12: et[3131], 13: et[3156], 14: et[3171],

void _targetCircleFulcrumYCoordNumerator(const RealNum &a, const RealNum &c,
                                         const RealNum &d, const RealNum &e,
                                         const RealNum &f, const RealNum &g,
                                         const RealNum &j, RealNum *et) {
  ////////////////////////////////////
  et[0] = e * j;
  et[1] = et[0] * f;
  et[2] = -1.0 * et[0];
  et[3] = et[2] + f;
  et[4] = et[3] * d;
  et[5] = et[1] + et[4];
  et[6] = 2.0 * et[5];
  et[7] = -1.0 * a;
  et[8] = et[7] * a;
  et[9] = -1.0 * d;
  et[10] = et[9] * d;
  et[11] = -1.0 * f;
  et[12] = et[11] * f;
  et[13] = -1.0 * g;
  et[14] = et[13] * g;
  et[15] = c * c;
  et[16] = e * e;
  et[17] = et[8] + et[10] + et[12] + et[14] + et[15] + et[16];
  et[18] = et[6] + et[17];
}
// 0: et[18],

void _targetCircleFulcrumYCoordDenominator(const RealNum &e, const RealNum &f,
                                           const RealNum &j, RealNum *et) {
  ////////////////////////////////////
  et[19] = et[9] + f;
  et[20] = et[19] * j;
  et[21] = et[13] + e;
  et[22] = et[20] + et[21];
  et[23] = 2.0 * et[22];
}
// 0: et[23],

void _targetCircleFulcrumXCoord(const RealNum &d, const RealNum &e,
                                const RealNum &i, const RealNum &j,
                                RealNum *et) {
  ////////////////////////////////////
  et[0] = -1.0 * i;
  et[1] = et[0] + e;
  et[2] = et[1] * j;
  et[3] = et[2] + d;
}
// 0: et[3],
} // namespace

PolynomialFunction<5>
distanceFromPointSquared(const RealNum &a, const RealNum &b, const RealNum &c,
                         const RealNum &d, const RealNum &e, const RealNum &f,
                         const RealNum &x, const RealNum &y) {
  RealNum et[33];
  _distanceFromPointSquared_1(a, b, c, d, e, f, x, y, et);
  return PolynomialFunction<5>({et[9], et[17], et[25], et[29], et[32]});
}

PolynomialFunction<5> shiftRelationForSlope(const RealNum &a, const RealNum &b,
                                            const RealNum &c, const RealNum &d,
                                            const RealNum &e, const RealNum &f,
                                            const RealNum &g, const RealNum &h,
                                            const RealNum &i, const RealNum &j,
                                            const RealNum &k, const RealNum &l,
                                            const RealNum &s) {
  RealNum et[224];
  _shiftRelationForSlope(a, b, c, d, e, f, g, h, i, j, k, l, s, et);
  return PolynomialFunction<5>({et[48], et[112], et[176], et[205], et[223]});
}

PolynomialFunction<2> shiftSubValueNumerator(const RealNum &b, const RealNum &e,
                                             const RealNum &g, const RealNum &h,
                                             const RealNum &j,
                                             const RealNum &k) {
  RealNum et[8];
  _shiftSubValueNumerator(b, e, g, h, j, k, et);
  return PolynomialFunction<2>({et[3], et[7]});
}

PolynomialFunction<2>
shiftSubValueDenominator(const RealNum &a, const RealNum &d, const RealNum &g,
                         const RealNum &h, const RealNum &j, const RealNum &k) {
  RealNum et[9];
  _shiftSubValueDenominator(a, d, g, h, j, k, et);
  return PolynomialFunction<2>({et[4], et[8]});
}

PolynomialFunction<3> curveSlopeMatchesFulcrumSlope(
    const RealNum &a, const RealNum &b, const RealNum &c, const RealNum &d,
    const RealNum &e, const RealNum &f, const RealNum &x, const RealNum &y) {
  RealNum et[14];
  _curveSlopeMatchesFulcrumSlope(a, b, c, d, e, f, x, y, et);
  return PolynomialFunction<3>({
      et[6],
      et[10],
      et[13],
  });
}

void pointRotateAgainstCircle(
    const RealNum &i, const RealNum &j, const RealNum &r, const RealNum &v,
    const RealNum &w, const RealNum &x, const RealNum &y,
    PolynomialFunction<3> &outputPointRotateAgainstCircleYCoordinate,
    PolynomialFunction<2> &outputPointRotateAgainstCircleXCoordinateNumerator,
    RealNum &outputPointRotateAgainstCircleXCoordinateDenominator) {
  RealNum et[207];
  _pointRotateAgainstCircleYCoordinate(i, j, r, v, w, x, y, et);
  _pointRotateAgainstCircleXCoordinateNumerator(i, v, et);
  outputPointRotateAgainstCircleYCoordinate =
      PolynomialFunction<3>({et[135], et[184], et[200]});
  outputPointRotateAgainstCircleXCoordinateNumerator =
      PolynomialFunction<2>({et[205], et[206]});
  outputPointRotateAgainstCircleXCoordinateDenominator = 2.0 * (i - x);
}

PolynomialFunction<3>
pointShiftAgainstCircleYCoordinate(const RealNum &r, const RealNum &s,
                                   const RealNum &v, const RealNum &w,
                                   const RealNum &x, const RealNum &y) {
  RealNum et[31];
  _pointShiftAgainstCircleYCoordinate(r, s, v, w, x, y, et);
  return PolynomialFunction<3>({et[19], et[24], et[27]});
}

void shiftAgainstCircle(
    const RealNum &a, const RealNum &b, const RealNum &c, const RealNum &d,
    const RealNum &e, const RealNum &f, const RealNum &r, const RealNum &s,
    const RealNum &x, const RealNum &y,
    PolynomialFunction<4> &outputShiftAgainstCircleXCoordinateNumerator,
    PolynomialFunction<4> &outputShiftAgainstCircleYCoordinateNumerator,
    PolynomialFunction<2> &outputShiftAgainstCircleCoordinateDenominator,
    PolynomialFunction<8> &outputShiftAgainstCircle) {
  RealNum et[936];
  _shiftAgainstCircleXCoordinateNumerator(a, b, c, d, e, f, s, x, y, et);
  _shiftAgainstCircleYCoordinateNumerator(a, b, c, d, e, f, s, et);
  _shiftAgainstCircleCoordinateDenominator(a, b, d, e, et);
  _shiftAgainstCircle(a, b, c, d, e, f, r, s, x, y, et);
  outputShiftAgainstCircleXCoordinateNumerator =
      PolynomialFunction<4>({et[8], et[16], et[22], et[26]});
  outputShiftAgainstCircleYCoordinateNumerator =
      PolynomialFunction<4>({et[34], et[43], et[49], et[54]});
  outputShiftAgainstCircleCoordinateDenominator =
      PolynomialFunction<2>({et[57], et[61]});
  outputShiftAgainstCircle = PolynomialFunction<8>(
      {et[116], et[294], et[487], et[661], et[776], et[857], et[910], et[935]});
}

void curveRotationRelations(
    const RealNum &a, const RealNum &b, const RealNum &c, const RealNum &d,
    const RealNum &e, const RealNum &f, const RealNum &g, const RealNum &h,
    const RealNum &i, const RealNum &j, const RealNum &k, const RealNum &l,
    const RealNum &x, const RealNum &y,
    std::array<std::array<RealNum, 4>, 4> &outputSlopeDifferenceRelation,
    std::array<std::array<RealNum, 4>, 3>
        &outputSlopeDifferenceRelationTDerivative,
    std::array<std::array<RealNum, 3>, 4>
        &outputSlopeDifferenceRelationUDerivative,
    std::array<std::array<RealNum, 5>, 5> &outputDistanceDifferenceRelation,
    PolynomialFunction<4> &outputDistanceDifferenceRelationTDerivative,
    PolynomialFunction<4> &outputDistanceDifferenceRelationUDerivative) {
  RealNum et[352];
  _slopeDifferenceRelation(a, b, c, d, e, f, g, h, i, j, k, l, x, y, et);
  outputSlopeDifferenceRelation[0][0] = et[44];
  outputSlopeDifferenceRelation[0][1] = et[72];
  outputSlopeDifferenceRelation[0][2] = et[103];
  outputSlopeDifferenceRelation[0][3] = et[121];
  outputSlopeDifferenceRelation[1][0] = et[134];
  outputSlopeDifferenceRelation[1][1] = et[152];
  outputSlopeDifferenceRelation[1][2] = et[188];
  outputSlopeDifferenceRelation[1][3] = et[192];
  outputSlopeDifferenceRelation[2][0] = et[209];
  outputSlopeDifferenceRelation[2][1] = et[229];
  outputSlopeDifferenceRelation[2][2] = et[239];
  outputSlopeDifferenceRelation[2][3] = et[245];
  outputSlopeDifferenceRelation[3][0] = et[251];
  outputSlopeDifferenceRelation[3][1] = et[257];
  outputSlopeDifferenceRelation[3][2] = et[263];
  outputSlopeDifferenceRelation[3][3] = 0;
  _slopeDifferenceRelationTDerivative(a, b, d, e, et);
  outputSlopeDifferenceRelationTDerivative[0][0] = et[134];
  outputSlopeDifferenceRelationTDerivative[0][1] = et[152];
  outputSlopeDifferenceRelationTDerivative[0][2] = et[188];
  outputSlopeDifferenceRelationTDerivative[0][3] = et[192];
  outputSlopeDifferenceRelationTDerivative[1][0] = et[273];
  outputSlopeDifferenceRelationTDerivative[1][1] = et[288];
  outputSlopeDifferenceRelationTDerivative[1][2] = et[289];
  outputSlopeDifferenceRelationTDerivative[1][3] = et[290];
  outputSlopeDifferenceRelationTDerivative[2][0] = et[291];
  outputSlopeDifferenceRelationTDerivative[2][1] = et[292];
  outputSlopeDifferenceRelationTDerivative[2][2] = et[293];
  outputSlopeDifferenceRelationTDerivative[2][3] = 0;
  _slopeDifferenceRelationUDerivative(b, e, g, h, j, k, et);
  outputSlopeDifferenceRelationUDerivative[0][0] = et[72];
  outputSlopeDifferenceRelationUDerivative[0][1] = et[302];
  outputSlopeDifferenceRelationUDerivative[0][2] = et[303];
  outputSlopeDifferenceRelationUDerivative[1][0] = et[152];
  outputSlopeDifferenceRelationUDerivative[1][1] = et[319];
  outputSlopeDifferenceRelationUDerivative[1][2] = et[320];
  outputSlopeDifferenceRelationUDerivative[2][0] = et[229];
  outputSlopeDifferenceRelationUDerivative[2][1] = et[289];
  outputSlopeDifferenceRelationUDerivative[2][2] = et[321];
  outputSlopeDifferenceRelationUDerivative[3][0] = et[257];
  outputSlopeDifferenceRelationUDerivative[3][1] = et[322];
  outputSlopeDifferenceRelationUDerivative[3][2] = 0;
  _distanceDifferenceRelation(a, b, c, d, e, f, i, l, x, y, et);
  outputDistanceDifferenceRelation[0][0] = et[334];
  outputDistanceDifferenceRelation[0][1] = et[335];
  outputDistanceDifferenceRelation[0][2] = et[225];
  outputDistanceDifferenceRelation[0][3] = et[336];
  outputDistanceDifferenceRelation[0][4] = et[108];
  outputDistanceDifferenceRelation[1][0] = et[340];
  outputDistanceDifferenceRelation[1][1] = 0;
  outputDistanceDifferenceRelation[1][2] = 0;
  outputDistanceDifferenceRelation[1][3] = 0;
  outputDistanceDifferenceRelation[1][4] = 0;
  outputDistanceDifferenceRelation[2][0] = et[182];
  outputDistanceDifferenceRelation[2][1] = 0;
  outputDistanceDifferenceRelation[2][2] = 0;
  outputDistanceDifferenceRelation[2][3] = 0;
  outputDistanceDifferenceRelation[2][4] = 0;
  outputDistanceDifferenceRelation[3][0] = et[344];
  outputDistanceDifferenceRelation[3][1] = 0;
  outputDistanceDifferenceRelation[3][2] = 0;
  outputDistanceDifferenceRelation[3][3] = 0;
  outputDistanceDifferenceRelation[3][4] = 0;
  outputDistanceDifferenceRelation[4][0] = et[347];
  outputDistanceDifferenceRelation[4][1] = 0;
  outputDistanceDifferenceRelation[4][2] = 0;
  outputDistanceDifferenceRelation[4][3] = 0;
  outputDistanceDifferenceRelation[4][4] = 0;
  _distanceDifferenceRelationTDerivative(et);
  outputDistanceDifferenceRelationTDerivative =
      PolynomialFunction<4>({et[340], et[314], et[348], et[349]});
  _distanceDifferenceRelationUDerivative(et);
  outputDistanceDifferenceRelationUDerivative =
      PolynomialFunction<4>({et[335], et[276], et[350], et[351]});
}

PolynomialFunction<15>
curveRotateTouchesCircle(const RealNum &a, const RealNum &b, const RealNum &c,
                         const RealNum &d, const RealNum &e, const RealNum &f,
                         const RealNum &g, const RealNum &h, const RealNum &i,
                         const RealNum &j, const RealNum &k) {
  RealNum et[3172];
  _curveRotateTouchesCircle(a, b, c, d, e, f, g, h, i, j, k, et);
  return PolynomialFunction<15>({et[137], et[257], et[470], et[774], et[1171],
                                 et[1587], et[2004], et[2380], et[2686],
                                 et[2880], et[3010], et[3080], et[3131],
                                 et[3156], et[3171]});
}

void getTargetCircleFulcrumForCurveRotate(
    const RealNum &circleRadius,
    const RealNum &targetCircleFulcrumDistanceFromRotationFulcrum,
    const RealNum &curvePointX, const RealNum &curvePointY,
    const RealNum &rotationFulcrumX, const RealNum &rotationFulcrumY,
    const RealNum &curveSlopeAtPoint, RealNum &outputTargetFulcrumX,
    RealNum &outputTargetFulcrumY) {
  if (std::fabs(curveSlopeAtPoint) > 1.0) {
    getTargetCircleFulcrumForCurveRotate(
        circleRadius, targetCircleFulcrumDistanceFromRotationFulcrum,
        curvePointY, curvePointX, rotationFulcrumY, rotationFulcrumX,
        1.0 / curveSlopeAtPoint, outputTargetFulcrumY, outputTargetFulcrumX);
    return;
  }
  {
    RealNum et[24];
    _targetCircleFulcrumYCoordNumerator(
        circleRadius, targetCircleFulcrumDistanceFromRotationFulcrum,
        curvePointX, curvePointY, rotationFulcrumX, rotationFulcrumY,
        curveSlopeAtPoint, et);
    _targetCircleFulcrumYCoordDenominator(curvePointY, rotationFulcrumX,
                                          curveSlopeAtPoint, et);
    outputTargetFulcrumY = et[18] / et[23];
  }
  {
    RealNum et[4];
    _targetCircleFulcrumXCoord(curvePointX, curvePointY, outputTargetFulcrumY,
                               curveSlopeAtPoint, et);
    outputTargetFulcrumX = et[3];
  }
}
} // namespace bezier_geometry
